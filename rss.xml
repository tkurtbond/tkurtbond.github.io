<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity</title><link>https://tkurtbond.github.io/</link><description>Random musings on books, code, and tabletop games.</description><atom:link href="https://tkurtbond.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents ¬© 2023 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Tue, 14 Feb 2023 12:21:59 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Overcoming reST's limited table control by including raw groff TBL</title><link>https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2023-02-14 07:06:18 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So.  I have a CHICKEN Scheme program that converts &lt;a class="reference external" href="http://dyskami.ca/besm.html"&gt;Big Eyes Small
Mouth 4E&lt;/a&gt; characters from a YAML definition into &lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredText&lt;/a&gt;
(reST).&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt;‚Äôs (and probably the orginal python &lt;a class="reference external" href="https://docutils.sourceforge.io/"&gt;docutils&lt;/a&gt;‚Äô),
formatting of tables from &lt;span class="app"&gt;reST&lt;/span&gt; is limited and doesn‚Äôt let me do
what I need to do.&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#markdown" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here‚Äôs an image of the BESM 4E character, Xeksil &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#xeksil" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, I played
Wednesday night:&lt;/p&gt;
&lt;img alt="Original charactersheet for Xeksil in :app:`reST` using grid tables" src="https://tkurtbond.github.io/images/xeksil-plain-rst-version.png"&gt;
&lt;p&gt;As you can see, it doesn‚Äôt fully fill the width of the page, and the
first two columns are too wide for the information they contain.&lt;/p&gt;
&lt;p&gt;I‚Äôm contemplating changing the program so that the actual tables are
in &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; format directly, and insert them into the
generated &lt;span class="app"&gt;reST&lt;/span&gt; file in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; directives.  That locks
me into using &lt;span class="app"&gt;pandoc&lt;/span&gt;‚Äôs &lt;span class="app"&gt;groff&lt;/span&gt; &lt;span class="app"&gt;ms&lt;/span&gt; macros output, but I
could just write a new version that outputs ConTeXt (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/ConTeXt"&gt;C1&lt;/a&gt;, &lt;a class="reference external" href="https://wiki.contextgarden.net/Main_Page"&gt;C2&lt;/a&gt;) if I
ever need one‚Ä¶&lt;/p&gt;
&lt;p&gt;As a test, I converted a character and his mecha into raw &lt;span class="app"&gt;groff&lt;/span&gt;
&lt;span class="app"&gt;ms&lt;/span&gt; with &lt;span class="app"&gt;tbl&lt;/span&gt; output.  Here‚Äôs an image of that:&lt;/p&gt;
&lt;img alt="Test character sheet for Enyon Boase in plain groff -ms with TBL." src="https://tkurtbond.github.io/images/enyon-in-groff-ms-directly.png"&gt;
&lt;p&gt;As you can see, the tables fill the width of the text entirely and the
first two columns are narrower and the third column expands to fill
the width of the text.  I was also able to put double lines before and
after each entity, and put single lines after the headers and before
the total lines.&lt;/p&gt;
&lt;p&gt;I think this looks much better.&lt;/p&gt;
&lt;p&gt;Note that the first example is on 5.5‚Äù by 8.5‚Äù page (which I use for
things I‚Äôm going to look at on the screen a lot, because it takes up
less space) and the second example is on 8.5‚Äù by 11‚Äù paper and in two
columns.  It was essentially impossible to have &lt;span class="app"&gt;pandoc&lt;/span&gt; (and I‚Äôm
sure docutils) produce 2 column output and have the &lt;span class="app"&gt;reST&lt;/span&gt;
versions of the tables adapt to the width of the columns.  With the
narrower widths of the first two table columns the third table column
is wide enough that I can use pages with two columns.&lt;/p&gt;
&lt;p&gt;CPB (who I talked about this with earlier) commented: The data is in
YAML now right?  Why not just generate troff?&lt;/p&gt;
&lt;p&gt;Because when I write the actual text of things, I prefer &lt;span class="app"&gt;reST&lt;/span&gt;.
So, for instance, the description of the character or entity I write
in &lt;span class="app"&gt;reST&lt;/span&gt;.  And I like &lt;span class="app"&gt;reST&lt;/span&gt; for the main documents into
which I include these generated files because then I can output to
HTML too.  (Or to ConTexT; I‚Äôve got some documents where I needed
features that ConTexT has and &lt;span class="app"&gt;pandoc&lt;/span&gt;‚Äôs groff -ms output doesn‚Äôt
have.)&lt;/p&gt;
&lt;p&gt;I‚Äôve already written the character formatting program (named
&lt;span class="command"&gt;besm-rst&lt;/span&gt;, originally enough) so that it can output the
table version or a terse version where the different sections are in
normal paragraphs, which is useful because it is much more compact.
Adding a version that outputs &lt;span class="app"&gt;reST&lt;/span&gt; with tables expressed as an
&lt;span class="app"&gt;reST&lt;/span&gt; &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; block that contains the table sections as
&lt;span class="app"&gt;groff -ms&lt;/span&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; source would just be writing another
version of the output routine, selectable with a command line option.&lt;/p&gt;
&lt;p&gt;The original output routine to produce &lt;span class="app"&gt;reST&lt;/span&gt; grid tables and its
support procedures were 315 lines.  The second output routine to
paragraphs and its new support procedures (it uses some of the first
output routine‚Äôs support procedures) was 158 lines.&lt;/p&gt;
&lt;p&gt;It will be interesting to see how long the troff output will be.&lt;/p&gt;
&lt;p&gt;Oh, here is Lieutenant Enyon Boase again, this time in paragraph format:&lt;/p&gt;
&lt;img alt="/images/enyon-terse-plain-rst-version.png" src="https://tkurtbond.github.io/images/enyon-terse-plain-rst-version.png"&gt;
&lt;p&gt;That‚Äôs also a 8.5‚Äù by 11‚Äù page, and as you can see, it‚Äôs much more
compact, but harder for folks to find each individual item.  This is
basically the format that was used in the original BESM 1E and 2E
books, and the table based version appeared in BESM 3E and was
continued in 4E.&lt;/p&gt;
&lt;p&gt;I think the table format is much easier to read.&lt;/p&gt;
&lt;p&gt;Now, when I use the &lt;span class="app"&gt;reST&lt;/span&gt; table output and generate HTML from it
it looks kinda crude:&lt;/p&gt;
&lt;img alt="Character sheet for Enyon Boase using reST grid tables for HTML output." src="https://tkurtbond.github.io/images/enyon-rst-grid-table-html-output.png"&gt;
&lt;p&gt;However, I think I may be able to fix that with CSS.&lt;/p&gt;
&lt;p&gt;The HTML is relatively clean.  (It probably doesn't really need the
width specifications in the colgroup element, but &lt;span class="app"&gt;pandoc&lt;/span&gt; puts
those in.)&lt;/p&gt;
&lt;p&gt;That‚Äôs actually six tables.  If I wrap them in one div with a
particular class I think I can get them formatted right.&lt;/p&gt;
&lt;p&gt;CPB commented: CSS supports printing.&lt;/p&gt;
&lt;p&gt;Yes, there is actually at least one commercial document formatting
system that uses CSS for sophisticated print output, much more
elaborate than what the browsers support, I think.  And there is at
least one open source solution, &lt;a class="reference external" href="https://weasyprint.org/"&gt;weasyprint&lt;/a&gt;, that uses CSS to produce
PDF.&lt;/p&gt;
&lt;p&gt;But I know &lt;span class="app"&gt;tbl&lt;/span&gt; better than CSS. üòâ&lt;/p&gt;
&lt;p&gt;I do have a need for good looking output html for the output of the
program: so I can put it on my blog!  It would be better than images
in cases where I‚Äôm not actually comparing the PDF output of various
things.&lt;/p&gt;
&lt;p&gt;Well, it took me longer that I expected, 4¬º hours.  After the first 2
hours I was fried (it had been a long day): if I had stopped then I
probably could have finished it the next day in an hour.  Oh well.
The new output routine and its new supporting routines were 208 lines
long.&lt;/p&gt;
&lt;p&gt;Here's an image of the page produced (probably from same YAML file; I
have a couple, since one of them was an early test file for
&lt;span class="command"&gt;besm-rst&lt;/span&gt;) using the new output routine, with &lt;span class="app"&gt;reST&lt;/span&gt;
output with &lt;span class="app"&gt;tbl&lt;/span&gt; output in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt;, pulled from the
document with all the pregenerated characters:&lt;/p&gt;
&lt;img alt="Enyon Boase reST output with tbl in raw ms block" src="https://tkurtbond.github.io/images/enyon-boase-rst-output-with-raw-ms-tbl.png"&gt;
&lt;p&gt;And for reference, here is the YAML version of Enyon Boase:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-1" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-2" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Lieutenant Enyon Boase&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-3" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="c1"&gt;# Average: (/ (+ 8 6 6) 3.0) 6.666666666666667&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-4" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Body&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-5" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-6" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;16&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-7" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Mind&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-8" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-9" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-10" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Soul&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-11" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-12" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-13" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-14" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ACV&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-15" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-16" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DCV&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-17" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-18" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DM&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-19" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;5&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-20" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;HP&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-21" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;70&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-22" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;EP&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-23" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;60&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-24" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SV&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-25" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-26" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-27" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Attack Mastery&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-28" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-29" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-30" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Extra Actions&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-31" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-32" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-33" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+1 Extra Action&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-34" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Item:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;FV2021&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Coleopteran"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-35" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;35&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-36" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Skills&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-37" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-38" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-39" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;20 Skill Points&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-40" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-41" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Defect:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Obsessed&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;by&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Military&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;History"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-42" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-43" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-44" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-45" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Interrogation&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-46" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-47" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-48" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Law&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-49" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-50" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-51" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-52" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-53" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Leadership&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-54" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-55" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-56" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military Sciences&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-57" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-58" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-59" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Persuasion&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-60" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-61" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-62" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Political Sciences&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-63" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-64" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-65" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stealth&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-66" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-67" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-68" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Visual Arts&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-69" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-70" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-71" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Writing&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-72" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-73" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-74" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_c296ef4c2f57458985a8ce991fb419c5-75" name="rest_code_c296ef4c2f57458985a8ce991fb419c5-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c296ef4c2f57458985a8ce991fb419c5-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Reports&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is the YAML version of his FV2021 Coleopteran:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-1" name="rest_code_a9fb430d63e843628d8fd97400b244b7-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-2" name="rest_code_a9fb430d63e843628d8fd97400b244b7-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;FV2021 Coleopteran&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-3" name="rest_code_a9fb430d63e843628d8fd97400b244b7-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;BRCS, p. 94=95&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-4" name="rest_code_a9fb430d63e843628d8fd97400b244b7-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-5" name="rest_code_a9fb430d63e843628d8fd97400b244b7-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;A three-metre talk British-built humanoid combat walker used by&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-6" name="rest_code_a9fb430d63e843628d8fd97400b244b7-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;the Canadians on Mars.  They use a new ‚Äúmind-interface‚Äù&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-7" name="rest_code_a9fb430d63e843628d8fd97400b244b7-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;neuro-helmet that makes the mecha very agile.  However, if a&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-8" name="rest_code_a9fb430d63e843628d8fd97400b244b7-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;different pilot wants to use the mecha, the neuro-helmet must be&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-9" name="rest_code_a9fb430d63e843628d8fd97400b244b7-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;‚Äúretuned‚Äù to their brain waves ‚Äî this takes a full day; until&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-10" name="rest_code_a9fb430d63e843628d8fd97400b244b7-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;then, halve the Defence Mastery and Combat Technique: Lightning&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-11" name="rest_code_a9fb430d63e843628d8fd97400b244b7-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;Reflexes Attribute bonuses.  The mecha are painted standard&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-12" name="rest_code_a9fb430d63e843628d8fd97400b244b7-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;colours: UN white, with sky-blue helmets.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-13" name="rest_code_a9fb430d63e843628d8fd97400b244b7-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-14" name="rest_code_a9fb430d63e843628d8fd97400b244b7-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Health Points&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-15" name="rest_code_a9fb430d63e843628d8fd97400b244b7-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;80&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-16" name="rest_code_a9fb430d63e843628d8fd97400b244b7-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-17" name="rest_code_a9fb430d63e843628d8fd97400b244b7-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Features&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-18" name="rest_code_a9fb430d63e843628d8fd97400b244b7-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-19" name="rest_code_a9fb430d63e843628d8fd97400b244b7-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-20" name="rest_code_a9fb430d63e843628d8fd97400b244b7-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Radio,&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Inertial&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Naviagion"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-21" name="rest_code_a9fb430d63e843628d8fd97400b244b7-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Ground Speed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-22" name="rest_code_a9fb430d63e843628d8fd97400b244b7-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-23" name="rest_code_a9fb430d63e843628d8fd97400b244b7-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-24" name="rest_code_a9fb430d63e843628d8fd97400b244b7-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Up to 50 kph&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-25" name="rest_code_a9fb430d63e843628d8fd97400b244b7-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Armour&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-26" name="rest_code_a9fb430d63e843628d8fd97400b244b7-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-27" name="rest_code_a9fb430d63e843628d8fd97400b244b7-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-28" name="rest_code_a9fb430d63e843628d8fd97400b244b7-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-29" name="rest_code_a9fb430d63e843628d8fd97400b244b7-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-30" name="rest_code_a9fb430d63e843628d8fd97400b244b7-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Limiter:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Partial:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Thin"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-31" name="rest_code_a9fb430d63e843628d8fd97400b244b7-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-32" name="rest_code_a9fb430d63e843628d8fd97400b244b7-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Hit thin area with called shot for half Armour Rating; 20 AR;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-33" name="rest_code_a9fb430d63e843628d8fd97400b244b7-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;20 Health Points&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-34" name="rest_code_a9fb430d63e843628d8fd97400b244b7-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Combat Technique&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-35" name="rest_code_a9fb430d63e843628d8fd97400b244b7-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-36" name="rest_code_a9fb430d63e843628d8fd97400b244b7-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-37" name="rest_code_a9fb430d63e843628d8fd97400b244b7-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Lightning&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Reflexes:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;major&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;edge&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;on&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Initiative&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rolls"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-38" name="rest_code_a9fb430d63e843628d8fd97400b244b7-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Defence Mastery&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-39" name="rest_code_a9fb430d63e843628d8fd97400b244b7-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-40" name="rest_code_a9fb430d63e843628d8fd97400b244b7-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-41" name="rest_code_a9fb430d63e843628d8fd97400b244b7-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+2 to Defense Combat Value&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-42" name="rest_code_a9fb430d63e843628d8fd97400b244b7-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Resilient&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-43" name="rest_code_a9fb430d63e843628d8fd97400b244b7-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-44" name="rest_code_a9fb430d63e843628d8fd97400b244b7-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-45" name="rest_code_a9fb430d63e843628d8fd97400b244b7-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-46" name="rest_code_a9fb430d63e843628d8fd97400b244b7-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Space: low pressure, high pressure, intense cold, intense&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-47" name="rest_code_a9fb430d63e843628d8fd97400b244b7-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;heat, radiation, lack of air&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-48" name="rest_code_a9fb430d63e843628d8fd97400b244b7-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Supersense&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-49" name="rest_code_a9fb430d63e843628d8fd97400b244b7-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-50" name="rest_code_a9fb430d63e843628d8fd97400b244b7-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-51" name="rest_code_a9fb430d63e843628d8fd97400b244b7-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Sensors, range 10 km&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-52" name="rest_code_a9fb430d63e843628d8fd97400b244b7-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Superstrength&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-53" name="rest_code_a9fb430d63e843628d8fd97400b244b7-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-54" name="rest_code_a9fb430d63e843628d8fd97400b244b7-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-55" name="rest_code_a9fb430d63e843628d8fd97400b244b7-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-56" name="rest_code_a9fb430d63e843628d8fd97400b244b7-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Lift 500 kg (a horse); +10 Unarmed Combat Damage;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-57" name="rest_code_a9fb430d63e843628d8fd97400b244b7-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;+2 Muscle Weapons Damage&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-58" name="rest_code_a9fb430d63e843628d8fd97400b244b7-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Tough&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-59" name="rest_code_a9fb430d63e843628d8fd97400b244b7-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-60" name="rest_code_a9fb430d63e843628d8fd97400b244b7-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-61" name="rest_code_a9fb430d63e843628d8fd97400b244b7-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+60 Health Points&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-62" name="rest_code_a9fb430d63e843628d8fd97400b244b7-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Railgun"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-63" name="rest_code_a9fb430d63e843628d8fd97400b244b7-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-64" name="rest_code_a9fb430d63e843628d8fd97400b244b7-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-65" name="rest_code_a9fb430d63e843628d8fd97400b244b7-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;24&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-66" name="rest_code_a9fb430d63e843628d8fd97400b244b7-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-67" name="rest_code_a9fb430d63e843628d8fd97400b244b7-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier √ó&lt;/span&gt;&lt;span class="err"&gt;‚Äâ&lt;/span&gt;&lt;span class="no"&gt;9; Range 10 km; fails and cannot be used&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-68" name="rest_code_a9fb430d63e843628d8fd97400b244b7-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;again on natural 2 or 3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-69" name="rest_code_a9fb430d63e843628d8fd97400b244b7-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-70" name="rest_code_a9fb430d63e843628d8fd97400b244b7-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;5&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-71" name="rest_code_a9fb430d63e843628d8fd97400b244b7-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-72" name="rest_code_a9fb430d63e843628d8fd97400b244b7-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Unreliable&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-73" name="rest_code_a9fb430d63e843628d8fd97400b244b7-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Rocket&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pod"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-74" name="rest_code_a9fb430d63e843628d8fd97400b244b7-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-75" name="rest_code_a9fb430d63e843628d8fd97400b244b7-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-76" name="rest_code_a9fb430d63e843628d8fd97400b244b7-76" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-76"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-77" name="rest_code_a9fb430d63e843628d8fd97400b244b7-77" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-77"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-78" name="rest_code_a9fb430d63e843628d8fd97400b244b7-78" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-78"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier √ó&lt;/span&gt;&lt;span class="err"&gt;‚Äâ&lt;/span&gt;&lt;span class="no"&gt;9; Autofire: 1 hit if attack exceeds defence&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-79" name="rest_code_a9fb430d63e843628d8fd97400b244b7-79" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-79"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;by 0‚Äì3, 2 hits if it exceeds by 4‚Äì6, 3 hits if it exceeds by&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-80" name="rest_code_a9fb430d63e843628d8fd97400b244b7-80" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-80"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;&amp;gt;7‚Äì9, etc.; Area 3m radius; Range 1 km; 3 shots; Can be&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-81" name="rest_code_a9fb430d63e843628d8fd97400b244b7-81" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-81"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;deflected or destroyed for 1 round; Alternate attack: cost&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-82" name="rest_code_a9fb430d63e843628d8fd97400b244b7-82" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-82"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;halved&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-83" name="rest_code_a9fb430d63e843628d8fd97400b244b7-83" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-83"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-84" name="rest_code_a9fb430d63e843628d8fd97400b244b7-84" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-84"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Autofire&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-85" name="rest_code_a9fb430d63e843628d8fd97400b244b7-85" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-85"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Area&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-86" name="rest_code_a9fb430d63e843628d8fd97400b244b7-86" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-86"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-87" name="rest_code_a9fb430d63e843628d8fd97400b244b7-87" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-87"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-88" name="rest_code_a9fb430d63e843628d8fd97400b244b7-88" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-88"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Charges&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-89" name="rest_code_a9fb430d63e843628d8fd97400b244b7-89" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-89"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stoppable&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-90" name="rest_code_a9fb430d63e843628d8fd97400b244b7-90" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-90"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Plasma&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Fist"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-91" name="rest_code_a9fb430d63e843628d8fd97400b244b7-91" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-91"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-92" name="rest_code_a9fb430d63e843628d8fd97400b244b7-92" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-92"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-93" name="rest_code_a9fb430d63e843628d8fd97400b244b7-93" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-93"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-94" name="rest_code_a9fb430d63e843628d8fd97400b244b7-94" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-94"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-95" name="rest_code_a9fb430d63e843628d8fd97400b244b7-95" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-95"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier √ó&lt;/span&gt;&lt;span class="err"&gt;‚Äâ&lt;/span&gt;&lt;span class="no"&gt;12; Muscle Weapon; 6 shots; Alternate attack:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-96" name="rest_code_a9fb430d63e843628d8fd97400b244b7-96" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-96"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;cost halved&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-97" name="rest_code_a9fb430d63e843628d8fd97400b244b7-97" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-97"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-98" name="rest_code_a9fb430d63e843628d8fd97400b244b7-98" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-98"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Charges&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-99" name="rest_code_a9fb430d63e843628d8fd97400b244b7-99" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-99"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-100" name="rest_code_a9fb430d63e843628d8fd97400b244b7-100" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-100"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Awkward Size&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-101" name="rest_code_a9fb430d63e843628d8fd97400b244b7-101" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-101"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-102" name="rest_code_a9fb430d63e843628d8fd97400b244b7-102" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-102"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-103" name="rest_code_a9fb430d63e843628d8fd97400b244b7-103" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-103"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-104" name="rest_code_a9fb430d63e843628d8fd97400b244b7-104" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-104"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Size 2: Medium: +2 to be hit for every size attacker is&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-105" name="rest_code_a9fb430d63e843628d8fd97400b244b7-105" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-105"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;smaller, ‚àí2 to be hit for every size attack is larger, 1.5‚Äì8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-106" name="rest_code_a9fb430d63e843628d8fd97400b244b7-106" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-106"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;tonnes, big horse to bigger than an elephant&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-107" name="rest_code_a9fb430d63e843628d8fd97400b244b7-107" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-107"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Conditional Ownership&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-108" name="rest_code_a9fb430d63e843628d8fd97400b244b7-108" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-108"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-109" name="rest_code_a9fb430d63e843628d8fd97400b244b7-109" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-109"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-110" name="rest_code_a9fb430d63e843628d8fd97400b244b7-110" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-110"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;UN Army ownership&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-111" name="rest_code_a9fb430d63e843628d8fd97400b244b7-111" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-111"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Special&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Requirement:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Frequent&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;maintenance"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-112" name="rest_code_a9fb430d63e843628d8fd97400b244b7-112" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-112"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a9fb430d63e843628d8fd97400b244b7-113" name="rest_code_a9fb430d63e843628d8fd97400b244b7-113" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a9fb430d63e843628d8fd97400b244b7-113"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The git repo with this program and some test data is on &lt;a class="reference external" href="https://github.com/tkurtbond/besm-tools"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enyon Boase is a pregenerated character that I came up for my
&lt;span class="title"&gt;BESM 4E&lt;/span&gt; rewrite of the &lt;span class="title"&gt;BESM 1E&lt;/span&gt; adventure ‚ÄúRed
Planet, Blue Helmets‚Äù, from &lt;span class="title"&gt;Big Robots, Cool Starships&lt;/span&gt;.  The
FV2021 Coleopteran is also from that adventure.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="markdown" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;It's a little better coming from one of &lt;span class="app"&gt;pandoc&lt;/span&gt;'s
variants of Markdown, because you can specify alignment of columns
in some forms of tables, but you still have too little control over
the appearance of the table, and to make tables easy to read you
need more control than you have.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="xeksil" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Xeksil has the ‚ÄúDimension Walk‚Äù attribute.  In the
backstory in my head he's the son of a woman from the Courts of
Chaos (from Zelazny's &lt;span class="series"&gt;Amber Chronicles&lt;/span&gt;) and a man that at
least &lt;em&gt;looks&lt;/em&gt; human (but may not be; I haven't decided yet), so for
Xeksil this ability is ‚ÄúShadow Shifting‚Äù.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>besm</category><category>besm 4e</category><category>big eyes small mouth</category><category>context</category><category>docutils</category><category>groff</category><category>html</category><category>pandoc</category><category>rest</category><category>restructuredtext</category><category>rpg</category><category>yaml</category><guid>https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/</guid><pubDate>Fri, 03 Feb 2023 13:31:34 GMT</pubDate></item><item><title>Minimal blog experiment</title><link>https://tkurtbond.github.io/posts/2022/12/30/micro-blog-experiment/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I'm trying an experiment in minimal blogging at &lt;a class="reference external" href="http://consp.org/"&gt;Lacking Natural
Simplicity, Another Take&lt;/a&gt;, using &lt;a class="reference external" href="https://lichen.sensorstation.co/"&gt;Lichen&lt;/a&gt; (a
Content Management System someone wrote in Forth) and &lt;a class="reference external" href="https://gemini.circumlunar.space/docs/cheatsheet.gmi"&gt;Gemtext&lt;/a&gt;.&lt;/p&gt;</description><category>gemini</category><category>gemtext</category><category>lichen</category><guid>https://tkurtbond.github.io/posts/2022/12/30/micro-blog-experiment/</guid><pubDate>Fri, 30 Dec 2022 19:07:27 GMT</pubDate></item><item><title>The Lord of the Rings Adventure Game from Iron Crown Enterprises</title><link>https://tkurtbond.github.io/posts/2022/12/10/the-lord-of-the-rings-adventure-game-from-iron-crown-enterprises/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2022-12-26 22:43:46 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I got an interesting game yesterday, and finished reading it today:
the 1991 &lt;em&gt;Lord of the Rings Adventure Game&lt;/em&gt; from &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Iron_Crown_Enterprises"&gt;Iron Crown
Enterprises&lt;/a&gt;, which was the first holder of the Tolkien franchise
for RPGs.&lt;/p&gt;
&lt;p&gt;ICE got its start with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Rolemaster"&gt;Rolemaster&lt;/a&gt;, which started as a detailed
add-on combat system for D&amp;amp;D and developed into a very detailed RPG of
its own, based on open-ended d100 rolls: high is good and on very
high or low rolls you roll again and add the new roll for high or
subtracted for low, continuing infinitely in either direction.&lt;/p&gt;
&lt;p&gt;ICE then got the Tolkien franchise and developed &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Middle-earth_Role_Playing"&gt;Middle-Earth Role
Playing&lt;/a&gt; (MERP) as a slightly simplified RPG for those who wanted to
play in Middle Earth, but did not want all the complexities of the
full Rolemaster system.  The adventures were written in such a way that
you could play them either with Rolemaster or MERP, and had some short
guidelines to help the GM adapt them for other games.  They had a lot
of success and their Middle Earth products were extensive and highly
regarded.&lt;/p&gt;
&lt;p&gt;Lots of folk used them with other RPG systems.  (I bought several for
the ideas.)&lt;/p&gt;
&lt;p&gt;Later in their run, ICE wanted to tap the larger Tolkien readership and
so wrote the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Lord_of_the_Rings_Adventure_Game"&gt;Lord of the Ring Adventure Game&lt;/a&gt; as a much simpler
game that they hoped would draw interested readers and the viewers of
the animated Hobbit and Lord of the Rings.&lt;/p&gt;
&lt;p&gt;(I have fond memories of the animated Hobbit, though I knew it only
through reading the graphic novel adaptation that used art from the
movie when I was at my uncle and aunt's place in New York one summer.
I finally saw it, probably on TV some years later.)&lt;/p&gt;
&lt;p&gt;Anyway, the Lord of the Rings Adventure Game (LOR hereafter, as seems
to be customary) comes in a box with a 32 page rulebook, a 64 page
adventure with 6 pre-generated characters, a 32 pamphlet of 4 pages of
backstory for the 6 pregens and area maps for the adventure, several
poster sized maps, including a nice color one of Middle Earth, and
(missing in my copy, as the seller had noted in the description) 2
six-sided dice and a sheet of standup cardboard figures of people and
creatures and the pregens.&lt;/p&gt;
&lt;p&gt;Characters have 12 stats: 6 capabilities (Strength, Agility,
Intelligence, Movement, and Endurance) and 6 skills (Defense, Melee
Offensive Bonus, Ranged Offensive Bonus, General, Subterfuge,
Perception, and Magical).  The value of each of these is called a
bonus, and can be less than zero.&lt;/p&gt;
&lt;p&gt;You pick one of 9 character types (Hobbit Scout, Elf Scout, Human
Warrior, Dwarf Warrior, Elf Warrior, Human Ranger, Half-elf Ranger,
Human Bard, and Elf Bard), which sets your equipment and capability
values and starting skill values, and then you have six +1 bonuses to
add to your skills as you choose, no more than +3 to any one skill.
If you have +1 or more in magic you get two spells per +1 bonus.  Some
of your equipment gives bonuses to your stats.  I'll note that your
character type doesn't restrict what you can do: if you want your
Warrior to be able to use magic, put some of your starting skill
bonuses into Magical!  And they don't really have much to do with what
your characters occupation is: someone who takes one of the Warrior
character types can be a merchant, someone who takes one of the Scout
character types can be a healer.  It is all in how you assign your
starting skill bonuses.&lt;/p&gt;
&lt;p&gt;Your character type sets your Endurance (basically your hit points),
with the dwarf warrior having the most at 60 points and the elf bard
the least at 30 points.&lt;/p&gt;
&lt;p&gt;There are 15 spells, all with a fairly reasonable balance between
keeping with the magic seen in the novels, which is to say not
tremendously powerful, and what one would expect from a fantasy RPG.
The spells are Strength, Shield, Speed, Balance, Camouflage,
Concentration, Item Analysis, Clairvoyance, Healing, Luck, Protection
from Magic, Sustenance, Calm, Charm Animal, and Fire Bolt.  Magic
items typically add a plus to a stat, or let you do something you
couldn‚Äôt before.&lt;/p&gt;
&lt;p&gt;Maneuvers are how you use your stats.  Some, like climbing a tree have
a set difficulty.  Others the GM sets the difficulty, from Routine (4)
to Absurd (18).&lt;/p&gt;
&lt;p&gt;You roll 2d6 plus a stat bonus versus a target number or an opponent‚Äôs
roll.  Meet or exceed an unopposed roll to succeed, while you can tie
on opposed rolls.  In combat you take the attacker‚Äôs Offensive Bonus
minus the defenders Defensive Bonus and roll 2d6 and look the result
up in a chart to see how much damage is done and whether the defender
is knocked unconscious or killed outright.&lt;/p&gt;
&lt;p&gt;Activities are things that are normally automatically successful if
you have the equipment and time (tying up a captive, setting up camp,
digging a ditch), but turn into GM moderated maneuvers if you don‚Äôt
have the time or equipment (digging a ditch to hide in before the
opponents you want to ambush show up).&lt;/p&gt;
&lt;p&gt;There are 14 action sequences.  These things like combat (one of the
action sequences) where there is a general sequence you follow to do
something, from sneaking through a town at night to tracking through a
wilderness or ambushing an enemy.  I like how these are written up as
a standard sequence of things to do and consider, just like how combat
is done in most system.&lt;/p&gt;
&lt;p&gt;These action sequences can be adjusted by the GM for circumstances and
they encourage you to make up your own.  You might make one up for
when someone is wanting to convince a crowd of something.  They are
multi-step procedures for doing something.  I think they would be
quite useful.&lt;/p&gt;
&lt;p&gt;You get Experience Points (EP) for successful maneuvers depending on
how hard the target number was, for every point of damage inflicted,
with unconsciousness and killed results worth more, and for every
point of damage the caster of a spell takes to cast the spell.  (Every
spell costs the caster Damage to cast!). You also get EP for good
ideas and for the group accomplishing significant goals.&lt;/p&gt;
&lt;p&gt;The included adventure is a mix of programmed sequences to help the
new GM and players learn the system, where the choices the players
make determines what section you turn to next, and the sections are
broken up into action sequences and the results determine which
section the players go to next, GM notes on how to run or adjust
things, and descriptions of what happens.&lt;/p&gt;
&lt;p&gt;I do notice that each of the pregens has a special ability: finding
lost items or people, eidetic memory, knowing if any creature within a
20 foot radius is aligned with forces of darkness, healing wounds
faster, being unusually skilled at bargaining and negotiation, and
always knowing which way is north and can follow known routes
perfectly.  But there is no rule for assigning these to characters.  I
imagine that if the GM wanted to have special abilities for other
characters the GM and the players should come up with them.&lt;/p&gt;
&lt;p&gt;The rules encourage you to use figures or counters to represent
characters in combat, and movement is given in inches, to be measured
on the map, if you draw one, or on the table if you just set out the
figures at the right distances.  You could easily use a battle map
with a grid, if you have one.  Movement at a walk is 50 feet plus 10
feet multiplied by the characters Movement bonus.&lt;/p&gt;
&lt;p&gt;Anyway, I like it.  I hope to run it this year for Christmas, if all
goes well.&lt;/p&gt;
&lt;p&gt;There is, of course, a Wikipedia &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Lord_of_the_Rings_Adventure_Game"&gt;page&lt;/a&gt; about it, but it is even
briefer than this post.&lt;/p&gt;
&lt;p&gt;There is a compatible game, The &lt;a class="reference external" href="https://sites.google.com/site/ambarquenta/home/the-offical-games/meag"&gt;Middle-Earth Adventure Game&lt;/a&gt;
(MEAG), that was designed by Brian Gross and J.R. Gracen.  I knew of
it before I got the LotRAG, it seems to be a generalization and
expansion, and thus a little more complicated, but it doesn't look
&lt;em&gt;too&lt;/em&gt; complicated.  I'll read it and report what I think of it.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ice</category><category>iron crown enterprises</category><category>lor</category><category>lord of the rings adventure game</category><category>lotrag</category><category>merp</category><category>rolemaster</category><guid>https://tkurtbond.github.io/posts/2022/12/10/the-lord-of-the-rings-adventure-game-from-iron-crown-enterprises/</guid><pubDate>Sat, 10 Dec 2022 23:30:01 GMT</pubDate></item><item><title>Maintaining the old ada-mode.el formerly distributed with Emacs</title><link>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I wrote a &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"&gt;post&lt;/a&gt; about using the old ada-mode.el that used to be
distributed with &lt;span class="app"&gt;Emacs&lt;/span&gt; because I couldn't get the newer,
separate package &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_mono/ada-mode.html"&gt;version&lt;/a&gt; to work for me.&lt;/p&gt;
&lt;p&gt;Well, this morning when I pulled up an Ada file in &lt;span class="app"&gt;Emacs&lt;/span&gt; version
28 there were two problems:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The information to invoke ada-mode on Ada files was not in the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; variable in &lt;span class="app"&gt;Emacs&lt;/span&gt;.  That was easy
enough to fix: add &lt;span class="file"&gt;.ada&lt;/span&gt;, &lt;span class="file"&gt;.ads&lt;/span&gt;, and &lt;span class="file"&gt;.adb&lt;/span&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; (and &lt;span class="file"&gt;.gpr&lt;/span&gt;, too, since Ada mode works
for &lt;span class="app"&gt;gprbuild&lt;/span&gt; files as well):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_53aa5d0355d44be7938cc24e74ae016e-1" name="rest_code_53aa5d0355d44be7938cc24e74ae016e-1" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_53aa5d0355d44be7938cc24e74ae016e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.gpr$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ada$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ads$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.adb$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_53aa5d0355d44be7938cc24e74ae016e-2" name="rest_code_53aa5d0355d44be7938cc24e74ae016e-2" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_53aa5d0355d44be7938cc24e74ae016e-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'ada-mode&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That was easy enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When I tried to do any indentation &lt;span class="cmd"&gt;emacs&lt;/span&gt; reported an error,
with the error message ‚ÄúEnd position is smaller than start
position‚Äù.  Eventually I tracked this down to a call to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt;.  It turns out
that somewhere after &lt;span class="app"&gt;Emacs&lt;/span&gt; version 27.2 was released the
&lt;span class="app"&gt;Emacs&lt;/span&gt; developers added a check to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; to
ensure that the &lt;code class="docutils literal"&gt;FROM&lt;/code&gt; argument (which indicates where in the
buffer to start parsing) was less than the &lt;code class="docutils literal"&gt;TO&lt;/code&gt; argument (which
indicates where in the buffer to &lt;strong&gt;stop&lt;/strong&gt; parsing).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Drat.  Drat.  Drat.  Well, looking at the code it was clear that
since &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt; is explicitly searching backwards
that &lt;code class="docutils literal"&gt;TO&lt;/code&gt; would &lt;strong&gt;always&lt;/strong&gt; be smaller than &lt;code class="docutils literal"&gt;FROM&lt;/code&gt;.  So I could
just transpose the s-expressions that found those two values.  I
tried it, and it worked!&lt;/p&gt;
&lt;p&gt;At that point I realized that I had committed to maintain the old
version of ada-mode, at least for myself, and that I'd already talked
about it on my blog and it was small step from there to setting up a
GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt; with the old code, adding an &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/1"&gt;issue&lt;/a&gt; describing the
problem, adding a &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/7ee6fe55862ec615c7fe23d881adfee2d0094770"&gt;commit&lt;/a&gt; with the fix, and then writing this blog
post.&lt;/p&gt;
&lt;p&gt;Somewhere, someone is laughing and enjoying the schadenfreude.  Maybe
this will help someone else.&lt;/p&gt;
&lt;p&gt;And since I already have a GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt;, I ought to document the
first &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/2"&gt;problem&lt;/a&gt; and since it is a documentation problem, put a mention
in the &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/67a79caacd851120fee2bca4704938a2f27e1bba"&gt;README&lt;/a&gt;.&lt;/p&gt;</description><category>ada</category><category>ada-mode</category><category>ada-mode.el</category><category>emacs</category><guid>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</guid><pubDate>Tue, 06 Dec 2022 18:28:59 GMT</pubDate></item><item><title>Demonicity, a Tri-Stat boxed game by Dyskami</title><link>https://tkurtbond.github.io/posts/2022/12/02/demonicity-a-tri-stat-boxed-game-by-dyskami/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I finished reading Dyskami Publishing‚Äôs &lt;em&gt;Demonicity&lt;/em&gt; tonight (&lt;a href="https://www.drivethrurpg.com/product/369442/Demonicity-RolePlaying-Adventures-TriStat-System"&gt;PDF&lt;/a&gt;).  I liked the document design and found it easy to read, except the ‚ÄúDemon City‚Äù two page spread which I found a pain to read because of the body font.  I liked the artwork; it was not particularly anime or manga like, unlike &lt;em&gt;BESM Fourth Edition&lt;/em&gt;.  There were a few typos, missing words, and other minor mistakes, but there was only one that hindered comprehension, and that one I figured out eventually from the context.  The rules are easy to understand.&lt;/p&gt;
&lt;p&gt;The setting of &lt;em&gt;Demonicity&lt;/em&gt; is the titular ‚ÄúDemon City‚Äù, a city that is the location of an attack by demons from an different world/dimension.  It is obviously inspired by their earlier licensed RPG, &lt;em&gt;Demon City Shinjuku&lt;/em&gt;, which I quite liked.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Demonicity&lt;/em&gt; has a very interesting stripped down version of the Tri-Stat system that makes character generation and play much simpler.  In some ways it reminds me of &lt;em&gt;BESM First Edition&lt;/em&gt;, though it is even simpler. The three Stats are Body, Mind, and Soul, of course, so that‚Äôs the same.  There are also Attributes, which are the special things a character can do.  Stats can be determined randomly or assigned by the player, and they and Attributes always cost points.  And there are some Derived Values: Combat, Health, Sanity.&lt;/p&gt;
&lt;p&gt;You roll 2d6 and add a stat or a derived value (like Combat), plus optionally an Attribue‚Äôs level, and compare the result to a target number or an opposed roll.  Things that make something easier are Edges: you get an extra die or two on your dice roll, and you keep the highest two.  Things that make something harder, like trying to use two weapons at once without training, gives you Obstacles: an extra die or two on your dice roll, but you keep the two &lt;em&gt;lowest&lt;/em&gt; rolls.  Edges cancel out Obstacles and vice versa.  Combat is theater of the mind.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Demoicity&lt;/em&gt;‚Äôs version of &lt;em&gt;BESM&lt;/em&gt;‚Äôs Attributes are quite stripped down.  There are only nine: Adaptability, Damage, Demonicity, Fighting, Knacks, Movement, Resistance, Resources, and Skills.  These are bought in levels as usual, but associated with each are a number of Foci (as many as one has levels in the Attribute), which gives the character a special ability.  Demonicity is the Attribute that allows a character to do most of the more impressive supernatural things, for instance.  A few of its Foci are Healing, Meld (mere with inanimate objects), and Shadow Form.  The Fighting Attribute makes a character more proficient at combat than their Stats would suggest, and it‚Äôs Foci specify which kinds of Fighting you are better at (Melee or Ranged), or makes it easier to do certain things in combat (Blind Fighting, Two Weapons).  Generally, an Attribute‚Äôs level adds to dice rolls for things associated with it, while having an appropriate Foci means that you get an Edge.  After every session characters get a few points to increase their Stats and Attributes.&lt;/p&gt;
&lt;p&gt;The rulebook is only 32 pages long and has a thicker card stock cover.  It is accompanied by six one page adventures with related art on the back and by six pre-generated characters with an image of the character on the back, all on card stock.  There are also four six-sided dice.  The box everything comes in seems sturdy.  In general the production values are quite good.&lt;/p&gt;
&lt;p&gt;People who are confident with their improvisation skills can probably run the adventures easily, but those who like more details will probably want to do a bit more preparation. The adventures appear designed to be easily linked into a six episode mini-campaign, or can form the backbone of a longer campaign if the GM writes their own adventures.&lt;/p&gt;
&lt;p&gt;I like the inclusion of the pre-generated characters and the one page adventures.  They allow a gaming group to pick the game and start playing with little or no preparation.  And the simplified rules make it easy to learn the game, and to create characters if the gaming group doesn't want to use the pre-generated characters.  I think this makes it an excellent pick-up-and-play game.&lt;/p&gt;
&lt;p&gt;I would like to have seen something like the adventure generators from various Savage Worlds setting books or Toon and its supplements.  They allow the GM who is stuck for ideas to come up with something quickly when inspiration is lacking. But it would have been difficult to fit in the constraints of the product.  Perhaps on another sheet of card stock, since I can‚Äôt see deleting anything from the rulebook?  BESM and Tri-Stat generally have very little procedural support for coming up with NPCs, scenes, adventures, etc., and I think an adventure generator would be a useful addition. Of course, having the example adventures to give an idea of what &lt;em&gt;Demonicity&lt;/em&gt; adventures would be like is very useful.&lt;/p&gt;
&lt;p&gt;All in all, I quite like &lt;em&gt;Demonicity&lt;/em&gt; and hope to play it soon.  My only reservations are about the price of this game and the other two Tri-Stat boxed games, &lt;em&gt;Pixies&lt;/em&gt; and &lt;em&gt;Wyrms&lt;/em&gt;.  Forty-five retail dollars Canadian for the &lt;a href="http://dyskami.ca/tristat.html"&gt;physical product&lt;/a&gt; seems like a lot.  The &lt;a href="https://www.drivethrurpg.com/product/369442/Demonicity-RolePlaying-Adventures-TriStat-System"&gt;PDF&lt;/a&gt; seems more reasonable at 15 dollars.&lt;/p&gt;</description><category>demonicity</category><category>dyskami</category><category>rpg</category><category>tri-stat</category><guid>https://tkurtbond.github.io/posts/2022/12/02/demonicity-a-tri-stat-boxed-game-by-dyskami/</guid><pubDate>Sat, 03 Dec 2022 03:54:07 GMT</pubDate></item><item><title>Splitting Strings on a Delimiter in the Ada Programming Language</title><link>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 13:30:34 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I did a search for ‚Äúsplitting strings on a delimiter in the Ada
programming language‚Äù recently I did not get many useful results.
Eventually I stumbled over &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-String_005fSplit-g-strspl-ads.html#GNAT-String_005fSplit-g-strspl-ads"&gt;GNAT.String_Split&lt;/a&gt; which is an
instantiation of the generic package &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-Array_005fSplit-g-arrspl-ads.html#GNAT-Array_005fSplit-g-arrspl-ads"&gt;GNAT.Array_Split&lt;/a&gt;.  I also
finally &lt;a class="reference external" href="https://blog.adacore.com/new-strings-package-in-gnatcoll"&gt;found&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings_impl.ads"&gt;GNATCOLL.Strings_Impl&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings.ads"&gt;GNATCOLL.Strings&lt;/a&gt;, its
default instantiation, which looks especially interesting, contains
a split implementation, and which seems to be designed to be a more
efficient string implementation than  than &lt;code class="docutils literal"&gt;Ada.Strings.Unbounded&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, those are all a little complicated, so it might be
appropriate to show a simpler implementation.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;String&lt;/code&gt; type in Ada is a array of characters.  Once
declared, a &lt;code class="docutils literal"&gt;String&lt;/code&gt; variable always has the same length.  That
means that all the strings in an array of strings have to be the same
length.  However, an &lt;code class="docutils literal"&gt;access&lt;/code&gt; (Ada's version of a
pointer) to a &lt;code class="docutils literal"&gt;String&lt;/code&gt; can point to a string of any length, so for
this version we'll return an array of pointers to &lt;code class="docutils literal"&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;String&lt;/code&gt; are defined in &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-3.html"&gt;Ada.Strings.Fixed&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-1" name="rest_code_8de299f986024aa8b20af2c599efcf72-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-2" name="rest_code_8de299f986024aa8b20af2c599efcf72-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-3" name="rest_code_8de299f986024aa8b20af2c599efcf72-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-4" name="rest_code_8de299f986024aa8b20af2c599efcf72-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-5" name="rest_code_8de299f986024aa8b20af2c599efcf72-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-6" name="rest_code_8de299f986024aa8b20af2c599efcf72-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-6"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Ada.Text_IO contains a type, Count, that would conflict with&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-7" name="rest_code_8de299f986024aa8b20af2c599efcf72-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-7"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- the function Ada.Strings.Fixed.Count, so don't "use Ada.Text_IO;"&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-8" name="rest_code_8de299f986024aa8b20af2c599efcf72-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-8"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- instead, make a package the gives it a shorter name, and use all its&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-9" name="rest_code_8de299f986024aa8b20af2c599efcf72-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-9"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- procedures with that as the prefix.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-10" name="rest_code_8de299f986024aa8b20af2c599efcf72-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;ATIO&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="nc"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-11" name="rest_code_8de299f986024aa8b20af2c599efcf72-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;String_Ptr&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-12" name="rest_code_8de299f986024aa8b20af2c599efcf72-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-13" name="rest_code_8de299f986024aa8b20af2c599efcf72-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-14" name="rest_code_8de299f986024aa8b20af2c599efcf72-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-14"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Allocate a new String in a storage pool, initializing it to S, and&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-15" name="rest_code_8de299f986024aa8b20af2c599efcf72-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-15"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- returning an access to it (a pointer).&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-16" name="rest_code_8de299f986024aa8b20af2c599efcf72-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-16"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;  &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-17" name="rest_code_8de299f986024aa8b20af2c599efcf72-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;'(&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-18" name="rest_code_8de299f986024aa8b20af2c599efcf72-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-18"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-19" name="rest_code_8de299f986024aa8b20af2c599efcf72-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-19"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-20" name="rest_code_8de299f986024aa8b20af2c599efcf72-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-20"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-21" name="rest_code_8de299f986024aa8b20af2c599efcf72-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-22" name="rest_code_8de299f986024aa8b20af2c599efcf72-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-22"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-23" name="rest_code_8de299f986024aa8b20af2c599efcf72-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-23"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-24" name="rest_code_8de299f986024aa8b20af2c599efcf72-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-24"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-25" name="rest_code_8de299f986024aa8b20af2c599efcf72-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-25"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-26" name="rest_code_8de299f986024aa8b20af2c599efcf72-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-27" name="rest_code_8de299f986024aa8b20af2c599efcf72-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-28" name="rest_code_8de299f986024aa8b20af2c599efcf72-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-28"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-29" name="rest_code_8de299f986024aa8b20af2c599efcf72-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-30" name="rest_code_8de299f986024aa8b20af2c599efcf72-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-30"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-31" name="rest_code_8de299f986024aa8b20af2c599efcf72-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-31"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-32" name="rest_code_8de299f986024aa8b20af2c599efcf72-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-32"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-33" name="rest_code_8de299f986024aa8b20af2c599efcf72-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-33"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-34" name="rest_code_8de299f986024aa8b20af2c599efcf72-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-34"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-35" name="rest_code_8de299f986024aa8b20af2c599efcf72-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-35"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-36" name="rest_code_8de299f986024aa8b20af2c599efcf72-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-36"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-37" name="rest_code_8de299f986024aa8b20af2c599efcf72-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-38" name="rest_code_8de299f986024aa8b20af2c599efcf72-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-39" name="rest_code_8de299f986024aa8b20af2c599efcf72-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-39"&gt;&lt;/a&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-40" name="rest_code_8de299f986024aa8b20af2c599efcf72-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-41" name="rest_code_8de299f986024aa8b20af2c599efcf72-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-41"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-42" name="rest_code_8de299f986024aa8b20af2c599efcf72-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-42"&gt;&lt;/a&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-43" name="rest_code_8de299f986024aa8b20af2c599efcf72-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-43"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-44" name="rest_code_8de299f986024aa8b20af2c599efcf72-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-44"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-45" name="rest_code_8de299f986024aa8b20af2c599efcf72-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-46" name="rest_code_8de299f986024aa8b20af2c599efcf72-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-46"&gt;&lt;/a&gt;      &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-47" name="rest_code_8de299f986024aa8b20af2c599efcf72-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-47"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-48" name="rest_code_8de299f986024aa8b20af2c599efcf72-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-48"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-49" name="rest_code_8de299f986024aa8b20af2c599efcf72-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-49"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-50" name="rest_code_8de299f986024aa8b20af2c599efcf72-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-50"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-51" name="rest_code_8de299f986024aa8b20af2c599efcf72-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-51"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-52" name="rest_code_8de299f986024aa8b20af2c599efcf72-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-52"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-53" name="rest_code_8de299f986024aa8b20af2c599efcf72-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-53"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-54" name="rest_code_8de299f986024aa8b20af2c599efcf72-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-55" name="rest_code_8de299f986024aa8b20af2c599efcf72-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-56" name="rest_code_8de299f986024aa8b20af2c599efcf72-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-57" name="rest_code_8de299f986024aa8b20af2c599efcf72-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-58" name="rest_code_8de299f986024aa8b20af2c599efcf72-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-59" name="rest_code_8de299f986024aa8b20af2c599efcf72-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-60" name="rest_code_8de299f986024aa8b20af2c599efcf72-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-61" name="rest_code_8de299f986024aa8b20af2c599efcf72-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-61"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-62" name="rest_code_8de299f986024aa8b20af2c599efcf72-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-63" name="rest_code_8de299f986024aa8b20af2c599efcf72-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                 &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-64" name="rest_code_8de299f986024aa8b20af2c599efcf72-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-65" name="rest_code_8de299f986024aa8b20af2c599efcf72-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-65"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-66" name="rest_code_8de299f986024aa8b20af2c599efcf72-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-67" name="rest_code_8de299f986024aa8b20af2c599efcf72-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-68" name="rest_code_8de299f986024aa8b20af2c599efcf72-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-68"&gt;&lt;/a&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-69" name="rest_code_8de299f986024aa8b20af2c599efcf72-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-70" name="rest_code_8de299f986024aa8b20af2c599efcf72-70" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-70"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-71" name="rest_code_8de299f986024aa8b20af2c599efcf72-71" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-71"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-72" name="rest_code_8de299f986024aa8b20af2c599efcf72-72" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-72"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-73" name="rest_code_8de299f986024aa8b20af2c599efcf72-73" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-73"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-74" name="rest_code_8de299f986024aa8b20af2c599efcf72-74" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-74"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-75" name="rest_code_8de299f986024aa8b20af2c599efcf72-75" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-75"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8de299f986024aa8b20af2c599efcf72-76" name="rest_code_8de299f986024aa8b20af2c599efcf72-76" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_8de299f986024aa8b20af2c599efcf72-76"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; type in Ada has a maximum capacity and a
current length.  You instantiate a new package for each different
maximum capacity that you want, producing a different type for each.
You can assign any string smaller than or equal to the maximum length,
and the current length is recorded.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-4.html"&gt;Ada.Strings.Bounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-1" name="rest_code_815fa694f1204207b2907468f83ad164-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-2" name="rest_code_815fa694f1204207b2907468f83ad164-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-3" name="rest_code_815fa694f1204207b2907468f83ad164-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Bounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-4" name="rest_code_815fa694f1204207b2907468f83ad164-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-5" name="rest_code_815fa694f1204207b2907468f83ad164-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-6" name="rest_code_815fa694f1204207b2907468f83ad164-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-7" name="rest_code_815fa694f1204207b2907468f83ad164-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-8" name="rest_code_815fa694f1204207b2907468f83ad164-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Strings.Bounded.Generic_Bounded_Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Max&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 128&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-9" name="rest_code_815fa694f1204207b2907468f83ad164-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-10" name="rest_code_815fa694f1204207b2907468f83ad164-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String_IO&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt; &lt;span class="nc"&gt;Bounded_IO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;B_String&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-11" name="rest_code_815fa694f1204207b2907468f83ad164-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-12" name="rest_code_815fa694f1204207b2907468f83ad164-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-13" name="rest_code_815fa694f1204207b2907468f83ad164-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-14" name="rest_code_815fa694f1204207b2907468f83ad164-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-14"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-15" name="rest_code_815fa694f1204207b2907468f83ad164-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-15"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-16" name="rest_code_815fa694f1204207b2907468f83ad164-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-16"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-17" name="rest_code_815fa694f1204207b2907468f83ad164-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-18" name="rest_code_815fa694f1204207b2907468f83ad164-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-19" name="rest_code_815fa694f1204207b2907468f83ad164-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-20" name="rest_code_815fa694f1204207b2907468f83ad164-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-21" name="rest_code_815fa694f1204207b2907468f83ad164-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-22" name="rest_code_815fa694f1204207b2907468f83ad164-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-23" name="rest_code_815fa694f1204207b2907468f83ad164-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-24" name="rest_code_815fa694f1204207b2907468f83ad164-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-25" name="rest_code_815fa694f1204207b2907468f83ad164-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-26" name="rest_code_815fa694f1204207b2907468f83ad164-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-26"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-27" name="rest_code_815fa694f1204207b2907468f83ad164-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-27"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-28" name="rest_code_815fa694f1204207b2907468f83ad164-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-28"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-29" name="rest_code_815fa694f1204207b2907468f83ad164-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-30" name="rest_code_815fa694f1204207b2907468f83ad164-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-31" name="rest_code_815fa694f1204207b2907468f83ad164-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-31"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-32" name="rest_code_815fa694f1204207b2907468f83ad164-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-33" name="rest_code_815fa694f1204207b2907468f83ad164-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-33"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-34" name="rest_code_815fa694f1204207b2907468f83ad164-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-34"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-35" name="rest_code_815fa694f1204207b2907468f83ad164-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-36" name="rest_code_815fa694f1204207b2907468f83ad164-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-36"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-37" name="rest_code_815fa694f1204207b2907468f83ad164-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-38" name="rest_code_815fa694f1204207b2907468f83ad164-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-38"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-39" name="rest_code_815fa694f1204207b2907468f83ad164-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-39"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-40" name="rest_code_815fa694f1204207b2907468f83ad164-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-41" name="rest_code_815fa694f1204207b2907468f83ad164-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-41"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-42" name="rest_code_815fa694f1204207b2907468f83ad164-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-43" name="rest_code_815fa694f1204207b2907468f83ad164-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-44" name="rest_code_815fa694f1204207b2907468f83ad164-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-44"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-45" name="rest_code_815fa694f1204207b2907468f83ad164-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-46" name="rest_code_815fa694f1204207b2907468f83ad164-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-47" name="rest_code_815fa694f1204207b2907468f83ad164-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-47"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-48" name="rest_code_815fa694f1204207b2907468f83ad164-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-49" name="rest_code_815fa694f1204207b2907468f83ad164-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-50" name="rest_code_815fa694f1204207b2907468f83ad164-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-51" name="rest_code_815fa694f1204207b2907468f83ad164-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-52" name="rest_code_815fa694f1204207b2907468f83ad164-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-53" name="rest_code_815fa694f1204207b2907468f83ad164-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-54" name="rest_code_815fa694f1204207b2907468f83ad164-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-55" name="rest_code_815fa694f1204207b2907468f83ad164-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-56" name="rest_code_815fa694f1204207b2907468f83ad164-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-57" name="rest_code_815fa694f1204207b2907468f83ad164-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-57"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-58" name="rest_code_815fa694f1204207b2907468f83ad164-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-59" name="rest_code_815fa694f1204207b2907468f83ad164-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-60" name="rest_code_815fa694f1204207b2907468f83ad164-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-61" name="rest_code_815fa694f1204207b2907468f83ad164-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-61"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-62" name="rest_code_815fa694f1204207b2907468f83ad164-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-63" name="rest_code_815fa694f1204207b2907468f83ad164-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-64" name="rest_code_815fa694f1204207b2907468f83ad164-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-65" name="rest_code_815fa694f1204207b2907468f83ad164-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-66" name="rest_code_815fa694f1204207b2907468f83ad164-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-67" name="rest_code_815fa694f1204207b2907468f83ad164-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_815fa694f1204207b2907468f83ad164-68" name="rest_code_815fa694f1204207b2907468f83ad164-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_815fa694f1204207b2907468f83ad164-68"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; type in Ada grows dynamically as needed,
but is not as time efficient as fixed strings or bounded strings.
For this version, we'll use &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-18-2.html"&gt;Ada.Containers.Vectors&lt;/a&gt; for a
dynamically expending vector, rather than a fixed size vector.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-5.html"&gt;Ada.Strings.Unbounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-1" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-2" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-3" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_Io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-4" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-5" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Containers.Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-6" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-7" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;Unbounded_String_Vectors&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-8" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Containers.Vectors&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;Natural&lt;span class="p"&gt;,&lt;/span&gt; Unbounded_String&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-9" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-10" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-11" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-12" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-12"&gt;&lt;/a&gt;                &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="n"&gt;To_Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-13" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-13"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;subtype&lt;/span&gt; &lt;span class="kt"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-14" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-15" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-15"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-16" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-16"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-17" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-18" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-19" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-20" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-21" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-22" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-23" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-24" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-25" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-26" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-26"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-27" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-27"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-28" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-28"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-29" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-29"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-30" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-31" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-32" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-32"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-33" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-33"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-34" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-35" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-35"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-36" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-36"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-37" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-37"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-38" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-39" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-39"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-40" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-40"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-41" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-41"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;First_Index&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Last_Index&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-42" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-43" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-44" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-44"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-45" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-45"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-46" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-46"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-47" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-48" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-49" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-50" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-51" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-52" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-53" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-54" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-55" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-56" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-57" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-58" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-58"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-59" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-60" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-61" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-62" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-62"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-63" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-64" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-65" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-66" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-67" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-68" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-68"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-69" name="rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_f6e64d36c6c44e0f80fe2bdb50872b0e-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ada</category><category>programming</category><category>splitting strings</category><category>splitting strings in ada</category><guid>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</guid><pubDate>Fri, 05 Aug 2022 15:10:39 GMT</pubDate></item><item><title>Using the old version of Ada Mode for Emacs</title><link>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 14:33:55 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of things to like about the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language;
it seems to have a solid core of users, enough to support multiple
commercial implementations and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Free_software"&gt;free/libre software&lt;/a&gt; implementation
that is part of the &lt;a class="reference external" href="https://gcc.gnu.org/"&gt;GNU Compiler Collection&lt;/a&gt;.  I occasionally use it
myself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However:&lt;/strong&gt; I'm sure that the current version of &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; for
&lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; (available as an &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;ELPA&lt;/a&gt; &lt;a class="reference external" href="https://elpa.gnu.org/packages/ada-mode.html"&gt;package&lt;/a&gt;, and thus not included in
&lt;span class="app"&gt;Emacs&lt;/span&gt; itself), which provides smart editing for the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;
programming language, and uses an external parser for the indentation,
fontification&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#fontification" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, and navigation engine, is wonderful
if you can get it working, but I have &lt;strong&gt;never&lt;/strong&gt; been able to get it to
work.  My most recent try was today on Fedora 36 using GNAT 12.1.1
20220507 (Red Hat 12.1.1-1).&lt;/p&gt;
&lt;p&gt;Here's what happened when I tried to build the Ada code for the
parser, which is supplied as part of the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-mode&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ ./build.sh
ada_mode_wisi_parse.gpr:44:26: warning: object directory "obj" not found
Setup
   [mkdir]        object directory for project Ada_Mode_Wisi_Parse
Compile
   [Ada]          ada_mode_wisi_lalr_parse.ads
   [Ada]          ada_mode_wisi_lr1_parse.ads
   [Ada]          run_ada_lalr_parse.ads
   [Ada]          run_ada_lr1_parse.ads
   [Ada]          gpr_mode_wisi_parse.ads
   [Ada]          run_gpr_parse.ads
   [Ada]          gpr_query.adb
   [C]            wisitoken_grammar_re2c.c
   [C]            ada_re2c.c
   [C]            gpr_re2c.c
   [Ada]          ada_process_actions.adb
   [Ada]          ada_process_lr1_main.adb
   [Ada]          gen_run_wisi_lr_text_rep_parse.adb
   [Ada]          run_wisi_common_parse.adb
   [Ada]          wisi.adb
gnatcoll-sql.adb:742:07: error: ambiguous expression (cannot resolve "Append")
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:280, instance at gnatcoll-sql.ads:1109
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:270, instance at gnatcoll-sql.ads:1109

   compilation of gpr_query.adb failed

gprbuild: *** compilation phase failed&lt;/pre&gt;
&lt;p&gt;Sigh.  Without the external parser the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; is
completely unworkable: it doesn't even do indentation correctly, much
less do fontification.&lt;/p&gt;
&lt;p&gt;However, when I did some Ada work a number of years ago, I was ok
with the version that used to be in &lt;span class="app"&gt;Emacs&lt;/span&gt; itself.  So I dug it
out of the &lt;a class="reference external" href="https://savannah.gnu.org/git/?group=emacs"&gt;Emacs git repository&lt;/a&gt; at &lt;a class="reference external" href="https://savannah.gnu.org"&gt;savannah.gnu.org&lt;/a&gt;.  Basically,
I cloned the git repository and then figured out what commit it was
deleted in by doing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git rev-list HEAD -n 1 -- lisp/progmodes/ada-mode.el
a13c64204c8ead966789abf8efe176e4f2d4f599&lt;/pre&gt;
&lt;p&gt;Then I checked out the files involved:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git checkout a13c64204c8ead966789abf8efe176e4f2d4f599^ lisp/progmodes/ada-mode.el lisp/progmodes/ada-prj.el lisp/progmodes/ada-stmt.el lisp/progmodes/ada-xref.el doc/misc/ada-mode.texi&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;^&lt;/code&gt; at the end of the commit hash says to get the previous
commit.&lt;/p&gt;
&lt;p&gt;You'll also need &lt;span class="file"&gt;doc/docstyle.texi&lt;/span&gt; and
&lt;span class="file"&gt;doc/doclicense.texi&lt;/span&gt; if you want to build documentation from
&lt;span class="file"&gt;ada-mode.texi&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And I've put the files in a &lt;a class="reference external" href="https://tkurtbond.github.io/emacs/old-ada-mode.zip"&gt;zip file&lt;/a&gt; for anybody who is in the same
situation as I was, along with the generated documentation files
&lt;span class="file"&gt;.info&lt;/span&gt;, &lt;span class="file"&gt;.html&lt;/span&gt;, and &lt;span class="file"&gt;.pdf&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Just put them somewhere on your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;load-path&lt;/span&gt;&lt;/code&gt; and add &lt;code class="docutils literal"&gt;(autoload
&lt;span class="pre"&gt;'ada-mode&lt;/span&gt; &lt;span class="pre"&gt;"ada-mode")&lt;/span&gt;&lt;/code&gt; to your emacs config file.&lt;/p&gt;
&lt;p&gt;I'm sure the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; has a lot more useful features, and
I'd love to use it, but
this at least lets me edit with automatic indentation, formatting, and
fontification.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="fontification" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;‚ÄòFontification‚Äô is the process of displaying source code with
different font properties (such as color and typeface) for
differing syntactic roles.  &lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; and many other editors do this
to make it easier to distinguish different parts of the source
code, to help prevent errors.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!--  --&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ada</category><category>ada-mode</category><category>ada-mode.el</category><category>emacs</category><category>free/libre software</category><guid>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</guid><pubDate>Sun, 10 Jul 2022 02:20:40 GMT</pubDate></item><item><title>The School of Niklaus Wirth: The Art of Simplicity</title><link>https://tkurtbond.github.io/posts/2022/07/04/the-school-of-niklaus-wirth-the-art-of-simplicity/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I've just finished &lt;a class="reference external" href="https://www.amazon.com/School-Niklaus-Wirth-Art-Simplicity/dp/1558607234"&gt;The School of Niklaus Wirth: The Art of
Simplicity&lt;/a&gt;, by Laszlo Boszormenyi (Editor), Jurg Gutknecht
(Editor), and Gustav Pomberger (Editor).&lt;/p&gt;
&lt;p&gt;This was an excellent retrospective of Niklaus Wirth's work, covering
the many important (and sometimes neglected) innovations he and his
coworkers created.  Although it was published in 2000 it is still a
very interesting and inspiring read.&lt;/p&gt;
&lt;p&gt;Niklaus Wirth is perhaps best known for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)"&gt;Pascal&lt;/a&gt;.  I learned Pascal
early on in my computing career, and found it much more to my taste
than BASIC, the language I had the most experience with previously.  I
programmed in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Apple_Pascal"&gt;Apple Pascal&lt;/a&gt; (based on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/UCSD_Pascal"&gt;UCSD Pascal&lt;/a&gt;) on the Apple
II+, and used Pascal on the original Macintosh.  Much of my
instruction at college used Oregon Software's Pascal 2 system for
VAX/VMS.  I also had an opportunity to use Pascal at work, using
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Turbo_Pascal"&gt;Turbo Pascal&lt;/a&gt; on MS-DOS.  While I found the expressiveness and power
of C very attractive, I still found the simpler syntax and safer type
system of Pascal very worthwhile, and missed it when writing C.&lt;/p&gt;
&lt;p&gt;However, I found Wirth's later programming language, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; (see the
&lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon.Report.pdf"&gt;original&lt;/a&gt; and &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon07.Report.pdf"&gt;revised&lt;/a&gt; language reports, and at archive.org: &lt;a class="reference external" href="https://web.archive.org/web/20220511145109/https://people.inf.ethz.ch/wirth/Oberon/Oberon.Report.pdf"&gt;OO&lt;/a&gt;,
&lt;a class="reference external" href="https://web.archive.org/web/20220601054803/https://people.inf.ethz.ch/wirth/Oberon/Oberon07.Report.pdf"&gt;OR&lt;/a&gt;), and the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(operating_system)"&gt;operating system&lt;/a&gt; it was developed for, also called
Oberon, to be even more interesting.  While I never used the Ceres
computer on which Oberon originally ran, I &lt;strong&gt;did&lt;/strong&gt; used the later
versions of the Oberon system that ran hosted on Linux.  I was
particularly inspired by the further development of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;,
designed by Wirth and Hanspeter M√∂ssenb√∂ck (see the language report,
&lt;a class="reference external" href="https://link.springer.com/content/pdf/bbm%3A978-3-642-97479-3%2F1.pdf"&gt;O2A&lt;/a&gt;, &lt;a class="reference external" href="http://www.math.bas.bg/bantchev/place/oberon/Oberon2-Report.pdf"&gt;O2B&lt;/a&gt;), and used in a wonderful book, &lt;cite&gt;Object-Oriented
Programming in Oberon-2&lt;/cite&gt;, also by M√∂ssenb√∂ck (&lt;a class="reference external" href="http://norayr.am/papers/oop_in_oberon-2_book.pdf"&gt;OOP1&lt;/a&gt;, &lt;a class="reference external" href="https://ssw.jku.at/Research/Books/Oberon2.pdf"&gt;OOP2&lt;/a&gt;, and at
archive.org: &lt;a class="reference external" href="https://web.archive.org/web/20220704171021/http://norayr.am/papers/oop_in_oberon-2_book.pdf"&gt;OOP1A&lt;/a&gt;, &lt;a class="reference external" href="https://web.archive.org/web/20220704033614/https://ssw.jku.at/Research/Books/Oberon2.pdf"&gt;OOP2A&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Unfortunately most of my work at that time involved Unix heavily, and
it was difficult to write Oberon programs that interacted directly
with Unix, because Oberon's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/API"&gt;API&lt;/a&gt;s were quite different than those of
Unix and C.  (I've since found some Oberon compilers that work a
little better on Unix machines, but most Oberon software continues to
be specific to the Oberon system.&lt;/p&gt;
&lt;p&gt;Alas, Oberon was indeed &lt;a class="reference external" href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.90.7173&amp;amp;rep=rep1&amp;amp;type=pdf"&gt;the overlooked jewel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wish more people had taken more lessons from Niklaus Wirth when designing
the programming languages and operating systems that turned out to
dominate the computer systems of today.&lt;/p&gt;</description><category>c</category><category>ceres</category><category>lilith</category><category>modula-2</category><category>niklaus wirth</category><category>oberon</category><category>pascal</category><category>recent reading</category><category>unix</category><guid>https://tkurtbond.github.io/posts/2022/07/04/the-school-of-niklaus-wirth-the-art-of-simplicity/</guid><pubDate>Mon, 04 Jul 2022 15:33:38 GMT</pubDate></item><item><title>Anime 5E: Fifth Edition Fantasy Role-Playing Adventures</title><link>https://tkurtbond.github.io/posts/2022/06/14/anime-5e-fifth-edition-fantasy-role-playing-adventures/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Do you like D&amp;amp;D 5E, but would like to have it with with point-based
character generation, effects-based rules, and an Anime
flavour?  Well &lt;em&gt;Anime 5E: Fifth Edition Fantasy
Role-Playing Adventures&lt;/em&gt; is what you want.&lt;/p&gt;
&lt;p&gt;My physical copies of &lt;em&gt;Anime 5E: Fifth Edition Fantasy Role-Playing
Adventures&lt;/em&gt; (&lt;a class="reference external" href="http://www.dyskami.ca/anime5e.html"&gt;home page&lt;/a&gt;, &lt;a class="reference external" href="https://www.kickstarter.com/projects/dyskami/anime-5e-fifth-edition-fantasy-role-playing-reimagined"&gt;Kickstarter&lt;/a&gt;, and &lt;a class="reference external" href="https://www.drivethrurpg.com/product/359098/Anime-5E-Fifth-Edition-Fantasy-RolePlaying-Adventures"&gt;DriveThruRPG page&lt;/a&gt;)
from &lt;a class="reference external" href="http://www.dyskami.ca/index.html"&gt;Dyskami Publishing Company&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Mark_C._MacKinnon"&gt;Mark C. MacKinnon&lt;/a&gt; came
today, and I have only had a chance to briefly skim the pocket
edition, but I'm pleased at what they managed to fit into the small
package of 384 pages and a physical size of approximately 12.5cm wide
√ó 18.9cm tall √ó 2.25cm thick (4¬†15/16in wide √ó 7¬†13/32in tall √ó
27/32in thick) and still have the text be large enough to read.&lt;/p&gt;
&lt;p&gt;Here's a picture of the Pocket Edition, with another picture with my
hand covering the book for size comparison:&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://tkurtbond.github.io/images/Anime-5E-pocket-edition.jpg"&gt;&lt;img alt="Anime 5E pocket edition" src="https://tkurtbond.github.io/images/Anime-5E-pocket-edition.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="https://tkurtbond.github.io/images/Anime-5E-pocket-edition-size-comparison.jpg"&gt;&lt;img alt="Anime 5E pocket edition with hand for size comparison" src="https://tkurtbond.github.io/images/Anime-5E-pocket-edition-size-comparison.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p&gt;While I agree that adding the flexibility of Dynamic Powers attribute
as magic (p.¬†154) is very interesting I would like to have seen a
little guidance for using the rest of the attributes as spells using
the Deplete limiter (p.¬†237) and the optional Energy rules (p.¬†280);
I've seen the similar rules in BESM (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Big_Eyes,_Small_Mouth"&gt;BESM1&lt;/a&gt;, &lt;a class="reference external" href="https://www.dyskami.ca/besm.html"&gt;BESM2&lt;/a&gt;) used very well.&lt;/p&gt;
&lt;p&gt;I'll have to wait until I get a chance to peruse the hardback version
to comment on the art.&lt;/p&gt;
&lt;p&gt;Later: I just have to add: &lt;strong&gt;OMG! Battle Cabbits!&lt;/strong&gt; (On p.¬†367.) So
cute!  Now, if they only turned into spaceships as well...&lt;/p&gt;
&lt;p&gt;I also liked the Items chapter, especially the ‚ÄúRing of Power‚Äù.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2022-06-15 02:36:59 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</description><category>5e</category><category>anime</category><category>anime 5e</category><category>besm</category><category>cabbit</category><category>dyskami</category><category>mark mackinnon</category><category>pocket edition</category><guid>https://tkurtbond.github.io/posts/2022/06/14/anime-5e-fifth-edition-fantasy-role-playing-adventures/</guid><pubDate>Wed, 15 Jun 2022 03:34:40 GMT</pubDate></item><item><title>Lisp-style trampolines in Common Lisp, C, Ada, Oberon-2, and Revised Oberon</title><link>https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2023-02-14 06:33:58 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Are you familiar with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#High-level_programming"&gt;lisp-style trampolines&lt;/a&gt;?  A trampoline is a
loop that iteratively invokes functions that return functions.  The
previous link will lead you through &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#cite_note-Baker_1995-1"&gt;CONS Should Not CONS Its
Arguments, Part II: Cheney on the M.T.A.&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/214448.214454"&gt;PDF version&lt;/a&gt;; see p. 17
in the original publication, but that is the first page of the PDF
that link eventually leads to), which, while saying you should just go
ahead and convert to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Continuation-passing_style"&gt;Continuation-passing style&lt;/a&gt; form (CPS),
mentions in passing &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/151333.151343"&gt;No assembly required: compiling standard ML to C&lt;/a&gt;,
(see p. 168 in the original publication, which is the page 8 of the
PDF that link eventually leads to) which leads you to &lt;a class="reference external" href="https://dspace.mit.edu/handle/1721.1/6913"&gt;RABBIT: A
Compiler for SCHEME&lt;/a&gt;, where the concept is discussed under the name
the "SCHEME UUO handler" (see p. 23‚Äì24).&lt;/p&gt;
&lt;p&gt;Why is this useful?  It allows you to compile a language that requires
proper &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Tail_call"&gt;tail call&lt;/a&gt; optimization to one that does not provide that.
For instance, if you wanted to compile Scheme, which requires proper
tail call optimization, to Common Lisp, which does not require proper
tail call optimization, you can't just translate Scheme functions
directly into Common Lisp functions, because tail calls allocate stack
space, and eventually the stack will run out of space.&lt;/p&gt;
&lt;p&gt;Here's an example that will run forever in any standard confirming
Scheme, &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/forever.scm"&gt;forever.scm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code scheme"&gt;&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-1" name="rest_code_84d18bb82c9245079f916413acea697f-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever, because with tail call optimization, the stack&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-2" name="rest_code_84d18bb82c9245079f916413acea697f-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; never runs out!&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-3" name="rest_code_84d18bb82c9245079f916413acea697f-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-4" name="rest_code_84d18bb82c9245079f916413acea697f-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-5" name="rest_code_84d18bb82c9245079f916413acea697f-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-6" name="rest_code_84d18bb82c9245079f916413acea697f-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;set!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-7" name="rest_code_84d18bb82c9245079f916413acea697f-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-8" name="rest_code_84d18bb82c9245079f916413acea697f-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-9" name="rest_code_84d18bb82c9245079f916413acea697f-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-10" name="rest_code_84d18bb82c9245079f916413acea697f-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/not_forever.lisp"&gt;not_forever.lisp&lt;/a&gt;, the same thing in Common Lisp:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-1" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse until the stack space runs out.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-2" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defparameter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-3" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-4" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-5" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;incf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-6" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #~d~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-7" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-8" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-9" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, some Common Lisp implementations don't do tail call
optimization, and some &lt;strong&gt;do&lt;/strong&gt;.  Some don't do tail call optimization
unless you compile the functions in question.&lt;/p&gt;
&lt;p&gt;So, for instance, if I load that file into GNU CLISP 2.49.92, the
function executes about 4668 times and then &lt;span class="app"&gt;CLISP&lt;/span&gt; dies with the
error message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;*** - Lisp stack overflow. RESET&lt;/pre&gt;
&lt;p&gt;However if I compile that file in &lt;span class="app"&gt;CLISP&lt;/span&gt; with the Common Lisp function
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;compile-file&lt;/span&gt;&lt;/code&gt; and then load the resulting &lt;span class="file"&gt;.fas&lt;/span&gt; file into
&lt;span class="app"&gt;CLISP&lt;/span&gt;, it will run forever, because &lt;span class="app"&gt;CLISP&lt;/span&gt; does tail call
optimization when it compiles code.&lt;/p&gt;
&lt;p&gt;Furthermore, if I load that file into &lt;span class="app"&gt;SBCL&lt;/span&gt; it will run forever,
because &lt;span class="app"&gt;SBCL&lt;/span&gt; does tail call optimization by default.&lt;/p&gt;
&lt;p&gt;&lt;span class="app"&gt;ECL&lt;/span&gt; is another Common Lisp system where if you load that file
into  an interactive session it will die with stack overflow, but if
you compile that file into an executable it will run forever.&lt;/p&gt;
&lt;p&gt;So, suppose you wanted to translate the Scheme code into Common Lisp,
for an implementation that does not do tail call optimization.  You'd
use a trampoline to make sure the stack doesn't overflow.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline.lisp"&gt;trampoline.lisp&lt;/a&gt;, a trampoline in Common Lisp that runs
through three functions and then stops, for simplicity:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-1" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Demonstrate lisp-style trampolines.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-2" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-3" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-4" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-5" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-6" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-7" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-8" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-9" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-10" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-11" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-12" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-13" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-14" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-15" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-16" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline_forever.lisp"&gt;trampoline_forever.lisp&lt;/a&gt;, a trampoline in Common Lisp that
runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-1" name="rest_code_7f4f2788001244718951d6be254361ef-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever without running out of stack space.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-2" name="rest_code_7f4f2788001244718951d6be254361ef-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-3" name="rest_code_7f4f2788001244718951d6be254361ef-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-4" name="rest_code_7f4f2788001244718951d6be254361ef-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-5" name="rest_code_7f4f2788001244718951d6be254361ef-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-6" name="rest_code_7f4f2788001244718951d6be254361ef-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-7" name="rest_code_7f4f2788001244718951d6be254361ef-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-8" name="rest_code_7f4f2788001244718951d6be254361ef-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-9" name="rest_code_7f4f2788001244718951d6be254361ef-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-10" name="rest_code_7f4f2788001244718951d6be254361ef-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-11" name="rest_code_7f4f2788001244718951d6be254361ef-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-12" name="rest_code_7f4f2788001244718951d6be254361ef-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-13" name="rest_code_7f4f2788001244718951d6be254361ef-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-14" name="rest_code_7f4f2788001244718951d6be254361ef-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-15" name="rest_code_7f4f2788001244718951d6be254361ef-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-16" name="rest_code_7f4f2788001244718951d6be254361ef-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-17" name="rest_code_7f4f2788001244718951d6be254361ef-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"trampoline call #~s~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-18" name="rest_code_7f4f2788001244718951d6be254361ef-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you can do the same things in C.  First, here's
&lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/not_forever.c"&gt;not_forever.c&lt;/a&gt;, a program in C that will (usually) die with a stack
overflow:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-1" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-2" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-2"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   Unless the compiler does tail-call optimization. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-3" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-4" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-5" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="cm"&gt;/* Number of times f has been called. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-6" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-7" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-8" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-9" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-10" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-11" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-12" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-13" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-14" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-14"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-15" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-16" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-17" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-18" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I say usually, because tail call optimization is not required by the
standard, and many C compilers do not do it.  For instance, &lt;span class="app"&gt;gcc&lt;/span&gt;
doesn't do tail call optimization &lt;strong&gt;unless&lt;/strong&gt; you specify
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-foptimize-sibling-calls&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O2&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O3&lt;/span&gt;&lt;/code&gt;, or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-Os&lt;/span&gt;&lt;/code&gt;.  If I
don't specify any of those options, on my system that program dies
with the error &lt;code class="docutils literal"&gt;Segmentation fault: 11&lt;/code&gt; after call #523932.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline.c"&gt;trampoline.c&lt;/a&gt;, the limited trampoline in C:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-1" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Demonstrate lisp-style trampolines. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-2" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-3" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-4" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-5" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-6" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-7" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-7"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-8" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-9" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-10" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-11" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-12" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-13" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-14" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-14"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-15" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-16" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-17" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-18" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-19" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-20" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-20"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-21" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-21"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-22" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-23" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-24" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-25" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-25"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-26" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-27" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-28" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-28"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-29" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-29"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-30" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-31" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-32" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-33" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-34" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-35" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-35"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice this works by converting pointers to functions to pointers to void
‚Äî it doesn't even require any explicit casting!&lt;/p&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline_forever.c"&gt;trampoline_forever.c&lt;/a&gt;, the trampoline that runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-1" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse forever without running out of stack spacc. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-2" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-3" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-4" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-5" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-6" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* Forward declaration. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-7" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-8" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-8"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-9" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-9"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-10" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-11" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-12" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-13" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-14" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-15" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-15"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-16" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-16"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-17" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-18" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-19" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-20" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-21" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-22" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-22"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-23" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-23"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-24" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-25" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-26" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-27" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-28" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-29" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-30" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-30"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-31" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-31"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-32" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-32"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-33" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-34" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-35" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-36" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-37" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-37"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, here's where C's weak typing lets it get away with things that
more strongly typed languages don't.  Notice the declaration of the
trampoline type:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_b8f72867189842d5aee7e2120c9677c9-1" name="rest_code_b8f72867189842d5aee7e2120c9677c9-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b8f72867189842d5aee7e2120c9677c9-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id="mentioning-recursive-types"&gt;Notice how it returns a &lt;code class="docutils literal"&gt;void *&lt;/code&gt;, instead of something more
specific?  That's because if it tried to return something more
specific, it would have to a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;: that is to say, while
defining the type &lt;code class="docutils literal"&gt;trampoline&lt;/code&gt;, you would use a reference to the
type while defining the type.  It would look something like this:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_4fe951e9389a4f3f96603405bf40f114-1" name="rest_code_4fe951e9389a4f3f96603405bf40f114-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_4fe951e9389a4f3f96603405bf40f114-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and that results in &lt;span class="app"&gt;gcc&lt;/span&gt; issuing the following error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;error: unknown type name 'trampoline'&lt;/pre&gt;
&lt;p&gt;Very few traditional programming languages allow this.  It isn't a
problem in Scheme or Common Lisp because those languages use strong
dynamic typing, where the types are checked at runtime.&lt;/p&gt;
&lt;p&gt;So how do you do this in languages with strong static typing?&lt;/p&gt;
&lt;p&gt;Well, let's try this in some of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; programming language
dialects.  &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; was designed and implemented by Niklaus Wirth
(&lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/"&gt;NW1&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Niklaus_Wirth"&gt;NW2&lt;/a&gt;) as a simplification and generalization of his earlier
languages &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)"&gt;Pascal&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula"&gt;Modula&lt;/a&gt;, and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula-2"&gt;Modula-2&lt;/a&gt;.  (Here's &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon.Report.pdf"&gt;The Programming
Language Oberon (1990)&lt;/a&gt;, the original Oberon language report, in PDF
for reference.)  I find the original Oberon admirable for its
simplicity, strong typing, understandable syntax, and its introduction
of &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; (which organizes &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Record_(computer_science)"&gt;record types&lt;/a&gt; in a
inheritance hierarchy, which with the use of procedure variables
enables object oriented programming in a particularly straightforward
and flexible way) but struggle with its minimalism and how its
standard libraries differ in paradigm from the standard Unix
libraries, since Oberon was used to implement a new operating system,
the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(operating_system)"&gt;Oberon System&lt;/a&gt; with its own completely unique &lt;a class="reference external" href="https://en.wikipedia.org/wiki/API"&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; has a number of dialects. I'm most fond of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;, which
was the second language in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; family, developed by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hanspeter_M%C3%B6ssenb%C3%B6ck"&gt;Hanspeter
M√∂ssenb√∂ck&lt;/a&gt; and Niklaus Wirth.  It is a little less minimalist than
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt;, and among a few other things adds type-bound procedures to
the record hierarchy provided by &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt;, providing a
appealingly simple and direct design for object-oriented programming
that was later adopted by the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language in a more
complicated and subtle version, as might be expected by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;'s
plethora of design goals and constraints.  (Here's a couple of papers
that mention it: &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/122028.122033"&gt;Object-oriented programming through type
extension in Ada 9X&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/pdf/10.1145/122028.122033"&gt;ADAOO1PDF&lt;/a&gt;) and &lt;a class="reference external" href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.167.7445&amp;amp;rank=1"&gt;Integrating Object-Oriented
Programming and Protected Objects in Ada 95&lt;/a&gt; (&lt;a class="reference external" href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.167.7445&amp;amp;rep=rep1&amp;amp;type=pdf"&gt;ADAOO2PDF&lt;/a&gt;).  I wish I
knew of a reference that discussed explicitly the process of choosing
&lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; and how they were adopted and adapted in
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Here's a copy of the Oberon-2 language report in PDF (&lt;a class="reference external" href="https://tkurtbond.github.io/Oberon-2/Oberon2.pdf"&gt;O2PDF&lt;/a&gt;) and HTML
(&lt;a class="reference external" href="https://web.archive.org/web/20151104101932/https://cseweb.ucsd.edu/~wgg/CSE131B/oberon2.htm"&gt;O2HTML&lt;/a&gt;), for reference.&lt;/p&gt;
&lt;p&gt;Anyway, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt; has procedure types and procedure variables, so one
would think it would be simple to implement trampolines in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;,
without messing about with pointers.  It turns out to be more
complicated than one would think.&lt;/p&gt;
&lt;p&gt;I'm using &lt;a class="reference external" href="https://github.com/vishaps/voc"&gt;Vishap Oberon&lt;/a&gt;, a free and open source Oberon-2 compiler,
by the way.&lt;/p&gt;
&lt;p&gt;First, here's &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/trampolines/oberon-2/NotForever.Mod"&gt;NotForever.Mod&lt;/a&gt;, the standard program with a recursive
function procedure that will overflow the stack.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-1" name="rest_code_fc9a98abdb874526a5663b45519f0e46-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-2" name="rest_code_fc9a98abdb874526a5663b45519f0e46-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-3" name="rest_code_fc9a98abdb874526a5663b45519f0e46-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;LONGINT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;               &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-4" name="rest_code_fc9a98abdb874526a5663b45519f0e46-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-5" name="rest_code_fc9a98abdb874526a5663b45519f0e46-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-6" name="rest_code_fc9a98abdb874526a5663b45519f0e46-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-7" name="rest_code_fc9a98abdb874526a5663b45519f0e46-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-7"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-8" name="rest_code_fc9a98abdb874526a5663b45519f0e46-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-9" name="rest_code_fc9a98abdb874526a5663b45519f0e46-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-10" name="rest_code_fc9a98abdb874526a5663b45519f0e46-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-11" name="rest_code_fc9a98abdb874526a5663b45519f0e46-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-12" name="rest_code_fc9a98abdb874526a5663b45519f0e46-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-13" name="rest_code_fc9a98abdb874526a5663b45519f0e46-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-14" name="rest_code_fc9a98abdb874526a5663b45519f0e46-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-15" name="rest_code_fc9a98abdb874526a5663b45519f0e46-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-15"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On my system, this program dies with with the error &lt;code class="docutils literal"&gt;Segmentation
fault: 11&lt;/code&gt; after call #524008.&lt;/p&gt;
&lt;p&gt;Now on to trampolines.  In theory we should be able to declare a type
that is a function procedure that returns other function procedures.
Here's the first attempt at the limited trampoline,
&lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/trampolines/oberon-2/TrampolineBroken.Mod"&gt;TrampolineBroken.Mod&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-1" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Fail to demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-2" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-3" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-4" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;(* This is an error. *)&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-5" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-6" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-7" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-8" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-9" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-10" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-11" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-12" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-13" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-14" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-15" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-16" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-17" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-18" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-19" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-20" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-21" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-22" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-23" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-24" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-25" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-26" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-27" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-28" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-29" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-30" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-31" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, trying to compile this dies with the following error
message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;TrampolineBroken.Mod  Compiling TrampolineBroken.

   4:   TYPE Thunk = PROCEDURE (): Thunk;
                             ^
    pos   126  err 244  cyclic type definition not allowed

Module compilation failed.&lt;/pre&gt;
&lt;p&gt;As mentioned &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#mentioning-recursive-types"&gt;above&lt;/a&gt;, this is a case of a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;.  Well, drat.&lt;/p&gt;
&lt;p&gt;At this point the immediate reaction is to look at the C version and
try to hack up something analogous using functionality from
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;'s &lt;code class="docutils literal"&gt;SYSTEM&lt;/code&gt; module, but that way lies madness, difficulty,
and type errors.  Instead, you have to step back and think about
things from another viewpoint.  The problem is that we can't declare a
type for a function procedure that returns another function procedure
of its type, because that is recursive.  Instead of trying for a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;, what if we switched to storing the next procedure
to be run in a global variable, &lt;code class="docutils literal"&gt;next&lt;/code&gt;, and having each procedure in
the chain set that to the procedure that should run next?  That should
work!&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/Trampoline.Mod"&gt;Trampoline.Mod&lt;/a&gt;, a version that works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-1" name="rest_code_b18c417661b945119d40f62fc4772cd8-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-2" name="rest_code_b18c417661b945119d40f62fc4772cd8-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-3" name="rest_code_b18c417661b945119d40f62fc4772cd8-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-4" name="rest_code_b18c417661b945119d40f62fc4772cd8-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-5" name="rest_code_b18c417661b945119d40f62fc4772cd8-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-6" name="rest_code_b18c417661b945119d40f62fc4772cd8-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-7" name="rest_code_b18c417661b945119d40f62fc4772cd8-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-8" name="rest_code_b18c417661b945119d40f62fc4772cd8-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-9" name="rest_code_b18c417661b945119d40f62fc4772cd8-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-10" name="rest_code_b18c417661b945119d40f62fc4772cd8-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-11" name="rest_code_b18c417661b945119d40f62fc4772cd8-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-12" name="rest_code_b18c417661b945119d40f62fc4772cd8-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-13" name="rest_code_b18c417661b945119d40f62fc4772cd8-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-14" name="rest_code_b18c417661b945119d40f62fc4772cd8-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-15" name="rest_code_b18c417661b945119d40f62fc4772cd8-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-16" name="rest_code_b18c417661b945119d40f62fc4772cd8-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-17" name="rest_code_b18c417661b945119d40f62fc4772cd8-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-18" name="rest_code_b18c417661b945119d40f62fc4772cd8-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-19" name="rest_code_b18c417661b945119d40f62fc4772cd8-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-20" name="rest_code_b18c417661b945119d40f62fc4772cd8-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-21" name="rest_code_b18c417661b945119d40f62fc4772cd8-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-22" name="rest_code_b18c417661b945119d40f62fc4772cd8-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-23" name="rest_code_b18c417661b945119d40f62fc4772cd8-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-24" name="rest_code_b18c417661b945119d40f62fc4772cd8-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-25" name="rest_code_b18c417661b945119d40f62fc4772cd8-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-26" name="rest_code_b18c417661b945119d40f62fc4772cd8-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-27" name="rest_code_b18c417661b945119d40f62fc4772cd8-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-28" name="rest_code_b18c417661b945119d40f62fc4772cd8-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-29" name="rest_code_b18c417661b945119d40f62fc4772cd8-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-30" name="rest_code_b18c417661b945119d40f62fc4772cd8-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-31" name="rest_code_b18c417661b945119d40f62fc4772cd8-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/TrampolineForever.Mod"&gt;TrampolineForever.Mod&lt;/a&gt;, which also works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-1" name="rest_code_00a54386e0f8447da92fb93b9e147a37-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-2" name="rest_code_00a54386e0f8447da92fb93b9e147a37-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-3" name="rest_code_00a54386e0f8447da92fb93b9e147a37-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-4" name="rest_code_00a54386e0f8447da92fb93b9e147a37-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-5" name="rest_code_00a54386e0f8447da92fb93b9e147a37-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-6" name="rest_code_00a54386e0f8447da92fb93b9e147a37-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-7" name="rest_code_00a54386e0f8447da92fb93b9e147a37-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-8" name="rest_code_00a54386e0f8447da92fb93b9e147a37-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-9" name="rest_code_00a54386e0f8447da92fb93b9e147a37-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-10" name="rest_code_00a54386e0f8447da92fb93b9e147a37-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-11" name="rest_code_00a54386e0f8447da92fb93b9e147a37-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-12" name="rest_code_00a54386e0f8447da92fb93b9e147a37-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-13" name="rest_code_00a54386e0f8447da92fb93b9e147a37-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-14" name="rest_code_00a54386e0f8447da92fb93b9e147a37-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-15" name="rest_code_00a54386e0f8447da92fb93b9e147a37-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-16" name="rest_code_00a54386e0f8447da92fb93b9e147a37-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-17" name="rest_code_00a54386e0f8447da92fb93b9e147a37-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-18" name="rest_code_00a54386e0f8447da92fb93b9e147a37-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-19" name="rest_code_00a54386e0f8447da92fb93b9e147a37-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-20" name="rest_code_00a54386e0f8447da92fb93b9e147a37-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-21" name="rest_code_00a54386e0f8447da92fb93b9e147a37-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-22" name="rest_code_00a54386e0f8447da92fb93b9e147a37-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-23" name="rest_code_00a54386e0f8447da92fb93b9e147a37-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-24" name="rest_code_00a54386e0f8447da92fb93b9e147a37-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-25" name="rest_code_00a54386e0f8447da92fb93b9e147a37-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-26" name="rest_code_00a54386e0f8447da92fb93b9e147a37-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-27" name="rest_code_00a54386e0f8447da92fb93b9e147a37-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-28" name="rest_code_00a54386e0f8447da92fb93b9e147a37-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-29" name="rest_code_00a54386e0f8447da92fb93b9e147a37-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-30" name="rest_code_00a54386e0f8447da92fb93b9e147a37-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-31" name="rest_code_00a54386e0f8447da92fb93b9e147a37-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-32" name="rest_code_00a54386e0f8447da92fb93b9e147a37-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-33" name="rest_code_00a54386e0f8447da92fb93b9e147a37-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-34" name="rest_code_00a54386e0f8447da92fb93b9e147a37-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-35" name="rest_code_00a54386e0f8447da92fb93b9e147a37-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-36" name="rest_code_00a54386e0f8447da92fb93b9e147a37-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-37" name="rest_code_00a54386e0f8447da92fb93b9e147a37-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-38" name="rest_code_00a54386e0f8447da92fb93b9e147a37-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-39" name="rest_code_00a54386e0f8447da92fb93b9e147a37-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wirth has continued to work on Oberon, producing an even more
minimalist revision, often know as Oberon-07, or &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.
(Here's the &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon07.Report.pdf"&gt;The Programming Language Oberon-07 (Revised Oberon)&lt;/a&gt; in
PDF, for reference.)  Unfortunately, he removed forward declarations
and the &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; type, which means we have to make some minor
changes.&lt;/p&gt;
&lt;p&gt;I'm using OBNC (&lt;a class="reference external" href="https://miasap.se/obnc/"&gt;OBNC1&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/GunterMueller/OBNC"&gt;OBNC2&lt;/a&gt;) for &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/NotForever.Mod"&gt;Revised Oberon NotForever.Mod&lt;/a&gt;, with &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; replaced
by &lt;code class="docutils literal"&gt;INTEGER&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-1" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-2" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-3" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-4" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-4"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;(* Alas, no more LONGINT. *)&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-5" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-6" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-7" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-8" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-9" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-10" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-11" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-12" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-13" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-13"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-14" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-15" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-15"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-16" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-16"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/Trampoline.Mod"&gt;Revised Oberon Trampoline.Mod&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-1" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-2" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-3" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-4" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-5" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-6" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-7" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-8" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-9" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-10" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-11" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-12" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-13" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-14" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-15" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-16" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-17" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-18" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-19" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-20" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-21" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-22" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-23" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-24" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-25" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-26" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-27" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-28" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-29" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-30" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-31" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/TrampolineForever.Mod"&gt;Revised Oberon TrampolineForever.Mod&lt;/a&gt;, with a workaround
for the removal of forward declarations of procedures:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-1" name="rest_code_f972f94080c0424d902f7bfe1a106d86-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-2" name="rest_code_f972f94080c0424d902f7bfe1a106d86-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-3" name="rest_code_f972f94080c0424d902f7bfe1a106d86-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-4" name="rest_code_f972f94080c0424d902f7bfe1a106d86-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-5" name="rest_code_f972f94080c0424d902f7bfe1a106d86-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-6" name="rest_code_f972f94080c0424d902f7bfe1a106d86-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-7" name="rest_code_f972f94080c0424d902f7bfe1a106d86-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-8" name="rest_code_f972f94080c0424d902f7bfe1a106d86-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-9" name="rest_code_f972f94080c0424d902f7bfe1a106d86-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-10" name="rest_code_f972f94080c0424d902f7bfe1a106d86-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-11" name="rest_code_f972f94080c0424d902f7bfe1a106d86-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-12" name="rest_code_f972f94080c0424d902f7bfe1a106d86-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-13" name="rest_code_f972f94080c0424d902f7bfe1a106d86-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-14" name="rest_code_f972f94080c0424d902f7bfe1a106d86-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-15" name="rest_code_f972f94080c0424d902f7bfe1a106d86-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-16" name="rest_code_f972f94080c0424d902f7bfe1a106d86-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-16"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-17" name="rest_code_f972f94080c0424d902f7bfe1a106d86-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-18" name="rest_code_f972f94080c0424d902f7bfe1a106d86-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-19" name="rest_code_f972f94080c0424d902f7bfe1a106d86-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-20" name="rest_code_f972f94080c0424d902f7bfe1a106d86-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-21" name="rest_code_f972f94080c0424d902f7bfe1a106d86-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-22" name="rest_code_f972f94080c0424d902f7bfe1a106d86-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-22"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-23" name="rest_code_f972f94080c0424d902f7bfe1a106d86-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-24" name="rest_code_f972f94080c0424d902f7bfe1a106d86-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-25" name="rest_code_f972f94080c0424d902f7bfe1a106d86-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-26" name="rest_code_f972f94080c0424d902f7bfe1a106d86-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-27" name="rest_code_f972f94080c0424d902f7bfe1a106d86-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-28" name="rest_code_f972f94080c0424d902f7bfe1a106d86-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-29" name="rest_code_f972f94080c0424d902f7bfe1a106d86-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-30" name="rest_code_f972f94080c0424d902f7bfe1a106d86-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-31" name="rest_code_f972f94080c0424d902f7bfe1a106d86-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-31"&gt;&lt;/a&gt;  &lt;span class="n"&gt;forward&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-32" name="rest_code_f972f94080c0424d902f7bfe1a106d86-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-33" name="rest_code_f972f94080c0424d902f7bfe1a106d86-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-34" name="rest_code_f972f94080c0424d902f7bfe1a106d86-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-35" name="rest_code_f972f94080c0424d902f7bfe1a106d86-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-36" name="rest_code_f972f94080c0424d902f7bfe1a106d86-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-37" name="rest_code_f972f94080c0424d902f7bfe1a106d86-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-38" name="rest_code_f972f94080c0424d902f7bfe1a106d86-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-39" name="rest_code_f972f94080c0424d902f7bfe1a106d86-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that with forward declarations removed, we just declare a
procedure variable, &lt;code class="docutils literal"&gt;forward&lt;/code&gt;, initialize it before starting the
trampoline, and refer to it instead of &lt;code class="docutils literal"&gt;foo&lt;/code&gt; in procedure &lt;code class="docutils literal"&gt;baz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And of course, since we mentioned &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; above, we should do a version
in that.  I'm using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GNAT"&gt;GNAT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/not_forever.adb"&gt;not_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-1" name="rest_code_836a7a1d0698484baf4d1ec23891d551-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-2" name="rest_code_836a7a1d0698484baf4d1ec23891d551-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;        &lt;span class="c1"&gt;-- recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-3" name="rest_code_836a7a1d0698484baf4d1ec23891d551-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-3"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-4" name="rest_code_836a7a1d0698484baf4d1ec23891d551-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times f has been called.&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-5" name="rest_code_836a7a1d0698484baf4d1ec23891d551-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-6" name="rest_code_836a7a1d0698484baf4d1ec23891d551-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-6"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-7" name="rest_code_836a7a1d0698484baf4d1ec23891d551-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-8" name="rest_code_836a7a1d0698484baf4d1ec23891d551-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-9" name="rest_code_836a7a1d0698484baf4d1ec23891d551-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-10" name="rest_code_836a7a1d0698484baf4d1ec23891d551-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-11" name="rest_code_836a7a1d0698484baf4d1ec23891d551-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-12" name="rest_code_836a7a1d0698484baf4d1ec23891d551-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-13" name="rest_code_836a7a1d0698484baf4d1ec23891d551-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-14" name="rest_code_836a7a1d0698484baf4d1ec23891d551-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-14"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-15" name="rest_code_836a7a1d0698484baf4d1ec23891d551-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-16" name="rest_code_836a7a1d0698484baf4d1ec23891d551-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-16"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-17" name="rest_code_836a7a1d0698484baf4d1ec23891d551-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-17"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; has exceptions, we actually catch the exception that
happens when the stack runs out of space:&lt;/p&gt;
&lt;pre class="literal-block"&gt;STORAGE_ERROR raised with i =  262002&lt;/pre&gt;
&lt;p&gt;Again, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; would have the same problem with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;s as
the Oberon dialects.  Don't look at the C version and wander off into
forest of &lt;code class="docutils literal"&gt;Ada.Unchecked_Conversion&lt;/code&gt; because that's unsafe, or the
thicket of &lt;code class="docutils literal"&gt;System.Address_To_Access_Conversions&lt;/code&gt;, because that
one's also unsafe and more complicated (and the simple approach didn't
work, when I tried it).  Instead, do the same thing as we did in the
Oberon dialects, and move to a global variable instead of returning
the values from the functions.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline.adb"&gt;trampoline.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-1" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-2" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;         &lt;span class="c1"&gt;-- Demonstrate lisp-style trampolines.&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-3" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-4" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-5" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-6" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-7" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-7"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-8" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-8"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-9" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-10" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-11" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-11"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-12" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-13" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-13"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-14" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-14"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-15" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-16" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-17" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-17"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-18" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-19" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-19"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-20" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-20"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-21" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-22" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-23" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-23"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-24" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-25" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-25"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-26" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-27" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-27"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-28" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-28"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-29" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-29"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-30" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline_forever.adb"&gt;trampoline_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-1" name="rest_code_9229f112156e442b95ccf996fab3d103-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-2" name="rest_code_9229f112156e442b95ccf996fab3d103-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-3" name="rest_code_9229f112156e442b95ccf996fab3d103-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;-- Recurse forever without running out of stack space.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-4" name="rest_code_9229f112156e442b95ccf996fab3d103-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-4"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-5" name="rest_code_9229f112156e442b95ccf996fab3d103-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times through the trampoline.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-6" name="rest_code_9229f112156e442b95ccf996fab3d103-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-7" name="rest_code_9229f112156e442b95ccf996fab3d103-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-7"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-8" name="rest_code_9229f112156e442b95ccf996fab3d103-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-9" name="rest_code_9229f112156e442b95ccf996fab3d103-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-9"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-10" name="rest_code_9229f112156e442b95ccf996fab3d103-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-11" name="rest_code_9229f112156e442b95ccf996fab3d103-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-11"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- forward declaration.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-12" name="rest_code_9229f112156e442b95ccf996fab3d103-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-13" name="rest_code_9229f112156e442b95ccf996fab3d103-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-13"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-14" name="rest_code_9229f112156e442b95ccf996fab3d103-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-15" name="rest_code_9229f112156e442b95ccf996fab3d103-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-16" name="rest_code_9229f112156e442b95ccf996fab3d103-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-17" name="rest_code_9229f112156e442b95ccf996fab3d103-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-18" name="rest_code_9229f112156e442b95ccf996fab3d103-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-19" name="rest_code_9229f112156e442b95ccf996fab3d103-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-19"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-20" name="rest_code_9229f112156e442b95ccf996fab3d103-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-21" name="rest_code_9229f112156e442b95ccf996fab3d103-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-22" name="rest_code_9229f112156e442b95ccf996fab3d103-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-23" name="rest_code_9229f112156e442b95ccf996fab3d103-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-24" name="rest_code_9229f112156e442b95ccf996fab3d103-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-25" name="rest_code_9229f112156e442b95ccf996fab3d103-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-25"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-26" name="rest_code_9229f112156e442b95ccf996fab3d103-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-27" name="rest_code_9229f112156e442b95ccf996fab3d103-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-28" name="rest_code_9229f112156e442b95ccf996fab3d103-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-29" name="rest_code_9229f112156e442b95ccf996fab3d103-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-30" name="rest_code_9229f112156e442b95ccf996fab3d103-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-31" name="rest_code_9229f112156e442b95ccf996fab3d103-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-32" name="rest_code_9229f112156e442b95ccf996fab3d103-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-33" name="rest_code_9229f112156e442b95ccf996fab3d103-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-33"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-34" name="rest_code_9229f112156e442b95ccf996fab3d103-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-35" name="rest_code_9229f112156e442b95ccf996fab3d103-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-35"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-36" name="rest_code_9229f112156e442b95ccf996fab3d103-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-37" name="rest_code_9229f112156e442b95ccf996fab3d103-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-37"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-38" name="rest_code_9229f112156e442b95ccf996fab3d103-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-38"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-39" name="rest_code_9229f112156e442b95ccf996fab3d103-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-39"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-40" name="rest_code_9229f112156e442b95ccf996fab3d103-40" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-40"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-41" name="rest_code_9229f112156e442b95ccf996fab3d103-41" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-41"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;Of course, languages with more sophisticated type systems have other
ways of dealing with things, but I haven't investigated them.  I did
stumble across an &lt;a class="reference external" href="https://gist.github.com/rapha/119788"&gt;example&lt;/a&gt; in OCaml (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/OCaml"&gt;OCAML1&lt;/a&gt;, &lt;a class="reference external" href="https://ocaml.org/"&gt;OCAML2&lt;/a&gt;).&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;If you want to play around with this, the code is in a
&lt;a class="reference external" href="https://github.com/tkurtbond/trampolines"&gt;repository&lt;/a&gt; at &lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ada</category><category>c</category><category>cheney on the m.t.a.</category><category>clisp</category><category>common lisp</category><category>continuation-passing style</category><category>cps</category><category>ecl</category><category>gcc</category><category>github</category><category>gnat</category><category>hanspeter m√∂ssenb√∂ck</category><category>lisp-style trampolines</category><category>modula</category><category>modula-2</category><category>niklaus wirth</category><category>no assembly required</category><category>oberon system</category><category>oberon-2</category><category>oberon-07</category><category>obnc</category><category>ocaml</category><category>pascal</category><category>rabbit</category><category>record types</category><category>revised oberon</category><category>sbcl</category><category>scheme</category><category>tail call</category><category>tail call optimization</category><category>trampolines</category><category>type extensions</category><category>uuo handler</category><category>vishap oberon</category><guid>https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/</guid><pubDate>Tue, 14 Jun 2022 19:49:55 GMT</pubDate></item></channel></rss>