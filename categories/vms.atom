<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about vms)</title>
  <id>https://tkurtbond.github.io/categories/vms.atom</id>
  <updated>2022-02-25T17:11:40Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/vms.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/vms/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>POISE DMS-Plus, another Description</title>
    <id>https://tkurtbond.github.io/posts/2022/02/25/poise-dms-plus-another-description/</id>
    <updated>2022-02-25T10:19:37-05:00</updated>
    <published>2022-02-25T10:19:37-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/02/25/poise-dms-plus-another-description/"/>
    <summary type="html">&lt;p&gt;I found a better description of the POISE DMS-Plus; alas, the original
&lt;a class="reference external" href="http://www2.esp-tulsa.com/featuredmsplus.htm"&gt;link&lt;/a&gt; is broken now, but it is still accessible from &lt;a class="reference external" href="https://web.archive.org/web/20180814152701/http://www2.esp-tulsa.com/featuredmsplus.htm"&gt;archive.org&lt;/a&gt;
&lt;a class="reference external" href="https://web.archive.org/web/20180814152701/http://www2.esp-tulsa.com/featuredmsplus.htm"&gt;here&lt;/a&gt;.  It is from the time when POISE was still owned by Campus
America, but they seem to had added a Tulsa to the end of the name,
and I don't remember that version of the company.  Oh, I forgot to
mention that the POISE DMS-Plus runs on OpenVMS.  I use it on VAX/VMS
v5.5-2 on an emulated VAX that I maintain.&lt;/p&gt;
&lt;p&gt;I'll quote it below in it's entirety:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DMS-Plus®&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DMS-Plus is a 4GL (fourth generation language) with its own database
management system that is the foundation of POISE application software
systems. POISE PRODUCTSistrative software applications and DMS-Plus run
under the OpenVMS operating system on Compaq’sVAX families and Alpha
computers.&lt;/p&gt;
&lt;p&gt;DMS-Plus offers the freedom to choose where control of the
PRODUCTSistrative system should be depending on your institution’s
needs. Control may be given to a central data processing center, or
departments may be autonomous.&lt;/p&gt;
&lt;p&gt;The benefits of a DMS-Plus approach to PRODUCTSistrative processing
include greater flexibility and speed, and simplicity in implementing
changes. Users have the freedom to organize, access, and manipulate
information to meet their needs, freeing the data processing center to
become a more flexible and responsive information and resource center.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Features&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;DMS-Plus provides the following capabilities and productivity tools:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Report Generators for easy sorting, selecting, and printing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Screen Generators for easy data entry, update, and review&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PRODUCTSistrative Systems Query (ASQ) for retrieving data from the
database using English-like commands.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Menu Processor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Manipulation for inserting, updating, and deleting data in the
database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Definition for adding new elements to the database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Control for accessing data by persons who have been granted
access&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Import/Export capability via ASCII file formats&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WordPerfect Interface&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Oracle Rdb for Open VMS and Open Alpha AXP commuting environments. In
addition, it incorporates industry standards such as SQL. By including
support for Oracle Rdb in POISE application software, Campus America
provides investment protection. You may take advantage of new and
sophisticated features while continuing to use the 4 GL tools of
DMS-Plus.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Housing&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;DMS-Plus includes a wide range of reporting tools that can produce both
ad hoc and routine reports. These tools include a columnar report
writer, a forms writer, a label printing program, and an English-like
query language.&lt;/p&gt;
&lt;p&gt;All tools are designed for the everyday user and may be used without the
help of a programming staff. These tools include on-line help.&lt;/p&gt;
&lt;p&gt;DMS-Plus includes a wide range of reporting tools that can produce both
ad hoc and routine reports. These tools include a columnar report
writer, a forms, writer, a label printing program, and an English-like
query language.&lt;/p&gt;
&lt;p&gt;All tools are designed for the everyday user and may be used without the
help of a programming staff. These tools include on -line help.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;LIST OF DMS-PLUS FUNCTIONS&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The following is a list of the DMS-Plus functions with a brief
description of each:&lt;/p&gt;
&lt;div class="docutils container"&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;ADD&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Enters new records into a new database&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;ASQ&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Inquires by English-like query language.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;BLANK&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Blanks (or fills) requested fields.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;CALCULATE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Performs calculations on field information.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;CARD/TAPE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Provides data import/export capabilities.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;COMPARE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Compares two databases for match/non-match of records.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;DELETE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Deletes database records.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;DESCRIBE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Creates, modifies, defines databases and associated
fields.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;EXCHANGE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Creates WordPerfect and WPS files.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;MENU&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Accesses the DMS-Plus Menu Processor.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;FORM&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Produces specially formatted reports, personalized
letters.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;KEY&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Reconstructs keyed file indices.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;LABEL&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Prints labels in a variety of formats.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;POINTER&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Creates a pointer file index by record selection, key,
or field contents.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;PRINT&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Accesses the standard report generator.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;PURGE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Purges deleted records.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;QUEBATCH&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Generates job stream files.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;REORDER&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Reorders existing pointer files.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;ROTATE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Rotates field data from one database into another.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;SAVE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Saves (or recalls) pointer files.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;SCOPE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Processes field data using screen formats for entry,
update, delete or inquiry.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;SCREEN&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Creates and maintains SCOPE screen formats.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;SEARCH&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Scans a database and allows updating.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;SORT&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Creates pointer files by record selection and/or
ordering.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;TRANSFER&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Transfers (copies) data between databases.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;UPDATE&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Updates existing records in a database.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;XTAB&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Performs cross tabulations with field data.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;DMS-Plus provides a set of tools to establish databases and to
manipulate the data within them. Simple steps for the use of DMS-Plus
are shown below:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Step 1: Create a database, DMS-Plus DESCRIBE is used to create a
database. When the database is created, it is empty. Records may be
added to it by any of several DMS-Plus functions: SCOPE, ADD,
TRANSFER, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Use the database. After records(data) are added in one or
more databases, you perform the following procedures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Query the database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generate reports&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Post (move / update) data from one database to another&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Perform calculations on data in the database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exercise various combinations of the above actions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Print labels, personalized letters, reports, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Continue manipulating data. New records may be added, old
records may be deleted, and / or data within existing records may be
updated. Operations in Step 2 may be repeated.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In summary, after a database has been created, you may devote your
attention to adding, updating, and manipulating data for specific
purposes. If necessary, field descriptions in the data base may be
changed or new fields added. Also, the number and size is included in
the database may be increased if the need arises.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On-Site Training:&lt;/strong&gt; Extensive on-site training classes are provided
during initial installation to train personnel in the use of DMS-Plus
and application software. Training is included in the license price.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Classroom Training:&lt;/strong&gt; Classroom training is provided at Campus America
training facilities for "hands-on" instruction on a regularly scheduled
bases. Training is included in the license price.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contract Training:&lt;/strong&gt; Optional on-site workshops, classroom training
and consulting services are available in addition to the training that
is included with the license price of Campus America software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subscription Service:&lt;/strong&gt; Subscribers to DMS-Plus and POISE application
software receive support and services which promote the successful use
of POISE PRODUCTSistrative systems in educational institutions. These
services include: normal corrections to software, periodic enhancements;
telephone support (to help users diagnose and answer questions),
technical support assistance, and contract programming services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; Reference and technical manuals are provided and may
be reproduced by licensee for intern Reference manuals include detailed
explanations and liberal use of illustrated examples. Documentation also
includes procedural guidelines documenting the step by step operation of
the system. Detailed database descriptions are provided which include
notes describing the purpose and function of each standard field (data
element) in the databases. Technical reference materials include clear
and concise tables with cross-references to procedures, menus and
databases.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On-line Help:&lt;/strong&gt; On-line help is included with the software.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;11415 East 19th Street&lt;/div&gt;
&lt;div class="line"&gt;Suite B&lt;/div&gt;
&lt;div class="line"&gt;Tulsa, OK 74128-6412&lt;/div&gt;
&lt;div class="line"&gt;Phone: 918-437-4920&lt;/div&gt;
&lt;div class="line"&gt;Fax: 918-437-3533&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="mailto:webmaster@campus-tulsa.com"&gt;webmaster@campus-tulsa.com&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.campus-tulsa.com"&gt;http://www.campus-tulsa.com&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Campus America is a registered service mark of Campus America,
Inc. POISE and DMS-Plus are registered service marks and
trademarks of Campus America, Inc. VAX and OpenVMS are registered
trademarks of Digital Equipment Corporation which is owned by
Compaq, Inc. Campus America believes the information on this site
is accurate as of the production date. Such information is subject
to change without notice. Campus America is not responsible for
inadvertent errors. ©1998 Campus America, Inc.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    <category term="campus-america" label="campus america"/>
    <category term="dms-plus" label="dms-plus"/>
    <category term="openvms" label="openvms"/>
    <category term="poise" label="poise"/>
    <category term="vms" label="vms"/>
  </entry>
  <entry>
    <title>POISE DMS-PLus, a Description</title>
    <id>https://tkurtbond.github.io/posts/2022/02/22/poise-dms-plus-a-description/</id>
    <updated>2022-02-22T09:49:38-05:00</updated>
    <published>2022-02-22T09:49:38-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/02/22/poise-dms-plus-a-description/"/>
    <summary type="html">&lt;p&gt;Some time ago I &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2014/11/23/poise-dms-plus/"&gt;linked&lt;/a&gt; to a description of the POISE DMS-Plus, a Data
Management System that I've used extensively since the mid 1980s.
Last time I knew it was owned by Jenzabar.  Since Jenzabar's
description of it (as part of Jenzabar PX) has vanished from their web
pages I thought it would be useful to have a description of it on my
blog.&lt;/p&gt;
&lt;p&gt;I'll include &lt;a class="reference external" href="https://web.archive.org/web/20060313120910/http://www2.esp-tulsa.com/products.htm#dmsplus"&gt;Jenzabar's description&lt;/a&gt; of the POISE DMS-Plus here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DMS-Plus&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each Jenzabar PX Administrative application module is built on
Jenzabar PX DMS-Plus®, a relational database management system (RDBMS)
using fourth-generation (4GL) language. DMS-Plus includes a powerful
report-writer, an information-retrieval system using multiple keys,
screen generation, and has multiple user levels: the operator,
intermediate user, advanced user, and application developers. It also
includes an Administrative Systems Query (ASQ or ask) language that is
designed to make the software easier to use for administrative
personnel. ASQ permits users to select, order, display, and print
information through simple English-like commands. In addition to ASQ,
another option for queries and reporting is QBF (Query By Form), a
point and select method which leads users through the data files and
query options.&lt;/p&gt;
&lt;p&gt;The benefits of a DMS-Plus approach to administrative processing
include ease of use by nontechnical personnel, a greater flexibility,
and speed and simplicity when implementing changes. It includes a
powerful data management and information retrieval facility with
right-to-use source code available. DMS-Plus includes list processing
as well as interfaces to stand-alone word processing systems. Future
enhancement to DMS-Plus are provided as part of the ongoing
subscription services. DMS-Plus is the common language for all types
of users.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DMS-Plus Highlights&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus provides Report Generators for easy sorting, selecting, and
printing along with Screen Generators for easy data entry, update,
and review.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus utilizes data manipulation for inserting, updating and
deleting data in the database. In addition to data definition for
adding new elements to the database, data control is also available
for accessing data by persons who have been granted access.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus has a menu processor, import/export capability via ASCII
file formats, a WordPerfect interface, and SQL compliant.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus is a user-oriented system that operates in a multi-user
environment. Simple English-like language prompts and responses are
used to interact with the system. By utilizing the flexibility of
DMS-Plus, each user office can determine the information collected,
can regulate work flow, can set its own schedules for updating
files, and can produce its own reports without depending on
Information System services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus supports multi-user access. These application systems use
many of the same functions and techniques that provide continuity
across user departments and also allows cross-utilization of
personnel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many applications for information management needs may be
implemented through the software provided with little or no
additional programming.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus provides an integrated base of information for
administrative data processing. Information introduced into the
system may be carried forward into all appropriate areas without
redundant entry.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;While the above describes the POISE DMS-Plus as a “relational database
management system”, it isn't really.  It does not use a relational
database.  It comes from the time &lt;strong&gt;before&lt;/strong&gt; relational databases.&lt;/p&gt;
&lt;p&gt;To me, a database is a program that controls access to a collection of
data - you can’t get to the data without asking the database program
for it.&lt;/p&gt;
&lt;p&gt;A data management system (the DMS in DMS-Plus) just lets you associate
related data together, and then multiple programs can access the
pieces, usually using a standard API implemented as a library.&lt;/p&gt;
&lt;p&gt;Before the advent of Unix, files were often much more complicated that
just a stream of bytes.  For instance, under VMS (where I've used the
POISE DMS-Plus the most) the &lt;em&gt;Record Management Services&lt;/em&gt; (RMS)
provides sequential, relative, and indexed file organization, and
fixed-length and variable-length record formats, and allows you to
access records within these files sequentially, directly by key value,
directly by relative record number, or directly by record file
address.  It was common practice for programs to each use their own
specific mix of these aspects of RMS, with the details directly coded
into the program.&lt;/p&gt;
&lt;p&gt;The advantage of the POISE DMS-Plus is it provided a suite of programs
that worked together, allowing users to describe the format of the
files they wanted, enter and modify data in those files, sort and
select data, and produce nicely formatted reports, without having to
write any code.  The programs were interactive, issuing a series of
prompts to the user for what they needed to do next, and were very
easy to learn.  If a secretary wanted to keep track of the inventory
of their office, they would run &lt;span class="command"&gt;DMS:DESCRIBE&lt;/span&gt; to describe
the fields they wanted and allocate space for the file, then run
&lt;span class="command"&gt;DMS:ADD&lt;/span&gt; to add data, &lt;span class="command"&gt;DMS:SEARCH&lt;/span&gt; to search and
update it, &lt;span class="command"&gt;DMS:SORT&lt;/span&gt; to sort and select data, and
&lt;span class="command"&gt;DMS:PRINT&lt;/span&gt; to produce a nicely formatted report.  If they
had to do a lot of data entry into the file, or it was large or
complicated, they could run &lt;span class="command"&gt;DMS:SCREEN&lt;/span&gt; to define a text
user interface screen format for interactive user input, arranging the
fields or subsets of the fields on the screen to make data entry easy,
and then run &lt;span class="command"&gt;DMS:SCOPE&lt;/span&gt; using that screen format to do data
entry.  (I keep wishing for something as easy to use as
&lt;span class="command"&gt;DMS:SCREEN&lt;/span&gt; in the area of database backed web applications,
but haven't found it yet.)&lt;/p&gt;
&lt;p&gt;POISE DMS-Plus files &lt;em&gt;were&lt;/em&gt; relational in that it was possible for
fields in one file to refer to values in fields in another file,
similar to SQL &lt;code class="docutils literal"&gt;JOIN&lt;/code&gt;s and &lt;code class="docutils literal"&gt;FOREIGN KEY&lt;/code&gt; constraints.  So, for
instance, it was possible to have a code field in one file, but on
reports include the description of the code by pulling it from a code
file, keyed by the code field.&lt;/p&gt;
&lt;p&gt;All the POISE DMS-Plus programs used a documented API, the Support
Procedure Library, which programmers could use to write programs that
accessed POISE DMS-Plus files for applications that required
sophisticated, special purpose processing.  Furthermore, they
documented the file structures they used, so it was possible to write
programs that accessed DMS-Plus files directly, if necessary.&lt;/p&gt;
&lt;p&gt;POISE, by the way, stood for “People Oriented Interactive Software for
Education”, and it probably had its greatest success in systems for
education administration, but it was a general purpose tool and I have
worked on projects using it for many other areas, including local and
state government, real estate sales management, oil and gas royalty
management, and many others.&lt;/p&gt;</summary>
    <category term="dms-plus" label="dms-plus"/>
    <category term="jenzabar-px" label="jenzabar px"/>
    <category term="openvms" label="openvms"/>
    <category term="poise" label="poise"/>
    <category term="vms" label="vms"/>
  </entry>
  <entry>
    <title>Redimensioning formal parameter arrays in OpenVMS BASIC, Revisited</title>
    <id>https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/</id>
    <updated>2022-02-05T16:08:22-05:00</updated>
    <published>2022-02-05T16:08:22-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/"/>
    <summary type="html">&lt;p&gt;I was working on a program on a VAX today, and needed to redimension
dynamically allocated arrays that are passed to an external function.
I've done this in the past (an &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt;, and the &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/"&gt;old blog
post&lt;/a&gt; that mentions it), but this time I managed to simplify my
solution, and generalize it to work with both lower and upper bounds,
and so the same function would work with multiple VMS BASIC data
types.  Here's the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;.  (How's that for thread
necromancy?)&lt;/p&gt;
&lt;p&gt;I'll include the code in this blog post, too, for ease of reference.
Here's &lt;span class="file"&gt;vax_redim_best.bas&lt;/span&gt;:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-1" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-1"&gt;&lt;/a&gt;program vax_redim_best
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-2" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-3" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-4" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-4"&gt;&lt;/a&gt;    record rec
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-5" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-5"&gt;&lt;/a&gt;        string s = 13
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-6" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-6"&gt;&lt;/a&gt;        long   i
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-7" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-7"&gt;&lt;/a&gt;    end record rec
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-8" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-9" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-9"&gt;&lt;/a&gt;    ! Don't declare the parameters, and everything works, even passing
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-10" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-10"&gt;&lt;/a&gt;    ! different types.
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-11" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-11"&gt;&lt;/a&gt;    external sub redim
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-12" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-13" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-13"&gt;&lt;/a&gt;    declare long stat, i
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-14" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-14"&gt;&lt;/a&gt;    i = 1
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-15" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-15"&gt;&lt;/a&gt;    dim rec rec(1 to i)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-16" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-16"&gt;&lt;/a&gt;    print "lbound (rec) at start: "; lbound (rec)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-17" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-17"&gt;&lt;/a&gt;    print "ubound (rec) at start: "; ubound (rec)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-18" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-18"&gt;&lt;/a&gt;    call redim (rec(), 3, 10)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-19" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-19"&gt;&lt;/a&gt;    print "lbound (rec) after redim: "; lbound (rec)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-20" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-20" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-20"&gt;&lt;/a&gt;    print "ubound (rec) after redim: "; ubound (rec)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-21" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-21" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-22" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-22" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-22"&gt;&lt;/a&gt;    dim string s(1 to i)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-23" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-23" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-23"&gt;&lt;/a&gt;    print "lbound (s) at start: "; lbound (s)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-24" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-24" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-24"&gt;&lt;/a&gt;    print "ubound (s) at start: "; ubound (s)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-25" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-25" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-25"&gt;&lt;/a&gt;    call redim (s(), 3, 10)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-26" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-26" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-26"&gt;&lt;/a&gt;    print "lbound (s) after redim: "; lbound (s)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-27" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-27" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-27"&gt;&lt;/a&gt;    print "ubound (s) after redim: "; ubound (s)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-28" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-28" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-29" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-29" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-29"&gt;&lt;/a&gt;    dim long l(1 to i)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-30" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-30" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-30"&gt;&lt;/a&gt;    print "lbound (l) at start: "; lbound (l)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-31" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-31" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-31"&gt;&lt;/a&gt;    print "ubound (l) at start: "; ubound (l)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-32" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-32" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-32"&gt;&lt;/a&gt;    call redim (l(), 3, 10)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-33" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-33" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-33"&gt;&lt;/a&gt;    print "lbound (l) after redim: "; lbound (l)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-34" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-34" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-34"&gt;&lt;/a&gt;    print "ubound (l) after redim: "; ubound (l)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-35" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-35" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-36" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-36" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-36"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-37" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-37" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-37"&gt;&lt;/a&gt;end program ! vax_redim_best
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-38" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-38" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-39" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-39" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-39"&gt;&lt;/a&gt;function long redim (long s, long low, long high)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-40" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-40" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-40"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-41" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-41" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-41"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-42" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-42" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-42"&gt;&lt;/a&gt;    external long function bas$rt_dim_bounds (long by value, long by value, long by value)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-43" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-43" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-43"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-44" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-44" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-44"&gt;&lt;/a&gt;    r = bas$rt_dim_bounds (loc (s), low, high)
&lt;a id="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-45" name="rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-45" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_6eba0952b94c4edbb9b40a4e5b83d30b-45"&gt;&lt;/a&gt;end function r ! redim
&lt;/pre&gt;&lt;p&gt;I'll just point out, which I failed to do in the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt; or
the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;, that you have to use a &lt;strong&gt;variable&lt;/strong&gt; when using
the VMS BASIC &lt;code class="docutils literal"&gt;dim&lt;/code&gt; statement or you get a fatal runtime error.  Ooops.&lt;/p&gt;
&lt;p&gt;So use:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_26b2815174b54523a5ceec96af01be3b-1" name="rest_code_26b2815174b54523a5ceec96af01be3b-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_26b2815174b54523a5ceec96af01be3b-1"&gt;&lt;/a&gt;declare long i
&lt;a id="rest_code_26b2815174b54523a5ceec96af01be3b-2" name="rest_code_26b2815174b54523a5ceec96af01be3b-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_26b2815174b54523a5ceec96af01be3b-2"&gt;&lt;/a&gt;i = 5
&lt;a id="rest_code_26b2815174b54523a5ceec96af01be3b-3" name="rest_code_26b2815174b54523a5ceec96af01be3b-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_26b2815174b54523a5ceec96af01be3b-3"&gt;&lt;/a&gt;dim string s(1 to i) ! Notice that last thing is the variable, i
&lt;a id="rest_code_26b2815174b54523a5ceec96af01be3b-4" name="rest_code_26b2815174b54523a5ceec96af01be3b-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_26b2815174b54523a5ceec96af01be3b-4"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;p&gt;If you had said:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_3f0b64e85b99403e964d3a0cf0789c16-1" name="rest_code_3f0b64e85b99403e964d3a0cf0789c16-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_3f0b64e85b99403e964d3a0cf0789c16-1"&gt;&lt;/a&gt;dim string s(1 to 5) ! Notice that last thing is a constant, 5
&lt;a id="rest_code_3f0b64e85b99403e964d3a0cf0789c16-2" name="rest_code_3f0b64e85b99403e964d3a0cf0789c16-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_3f0b64e85b99403e964d3a0cf0789c16-2"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;p&gt;You'd have gotten the following error:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-1" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-1"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-2" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-2"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-3" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-3"&gt;&lt;/a&gt;-BAS-I-FROMOD, In module Y
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-4" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-4"&gt;&lt;/a&gt;%TRACE-F-TRACEBACK, symbolic stack dump follows
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-5" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-5"&gt;&lt;/a&gt;module name     routine name                     line       rel PC    abs PC
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-6" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-7" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-7"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-8" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-8"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-9" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-9"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-10" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-10"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-11" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-11"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-12" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-12"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-13" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-13"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-14" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-14"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-15" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-15"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-16" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-16"&gt;&lt;/a&gt;                                                           0004A352  0004A352
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-17" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-17"&gt;&lt;/a&gt;                                                           00054E37  00054E37
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-18" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-18"&gt;&lt;/a&gt;ALT_REDIM       ALT_REDIM                          43      0000002E  00000AC2
&lt;a id="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-19" name="rest_code_8c35555bb135451a8b3d4d6b3513e7e1-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_8c35555bb135451a8b3d4d6b3513e7e1-19"&gt;&lt;/a&gt;Y               Y                                  24      0000015D  0000095D
&lt;/pre&gt;&lt;p&gt;Don't actually submit an SPR, of course: you did it to yourself by
using an undocumented VMS BASIC internal runtime function.&lt;/p&gt;
&lt;p&gt;Oh, I don't have access to an Alpha these days, so I haven't tried it
there, but I imagine using something named &lt;code class="docutils literal"&gt;DBASIC$RT_DIM_BOUNDS&lt;/code&gt;
instead of &lt;code class="docutils literal"&gt;DBASIC$RT_DIM&lt;/code&gt; would likely work there.&lt;/p&gt;</summary>
    <category term="alpha" label="alpha"/>
    <category term="basic" label="basic"/>
    <category term="hacks" label="hacks"/>
    <category term="usenet" label="usenet"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
  </entry>
  <entry>
    <title>troff Memorandum Macros documentation</title>
    <id>https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/</id>
    <updated>2021-07-15T15:57:09-04:00</updated>
    <published>2021-07-15T15:57:09-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/"/>
    <summary type="html">&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Look &lt;a class="reference external" href="https://tkurtbond.github.io/troff/mm-all.pdf"&gt;here&lt;/a&gt; for documentation for the &lt;span class="app"&gt;Documenter's Workbench&lt;/span&gt; &lt;span class="app"&gt;mm&lt;/span&gt; Memorandum
Macros for &lt;span class="app"&gt;groff&lt;/span&gt;, based on the original paper &lt;cite&gt;MM - Memorandum
Macros&lt;/cite&gt;.  If you read that far there is a &lt;a class="reference internal" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#bonus"&gt;bonus&lt;/a&gt; at the end.&lt;/p&gt;
&lt;p&gt;When I learned &lt;span class="app"&gt;troff&lt;/span&gt; it was actually on a VAX running VMS (used
by &lt;a class="reference external" href="http://www.mpl.com/"&gt;MPL Corporation&lt;/a&gt;) using a port of &lt;span class="app"&gt;troff&lt;/span&gt; called
&lt;span class="app"&gt;xroff&lt;/span&gt; &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#who-produced-xroff" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, probably around 1986.  (The VAX
also had TeX and LaTeX, and I used them too.  Both supported the DEC
LNO3 laserprinter that MPL had.)  While I don't know who produced
&lt;span class="app"&gt;xroff&lt;/span&gt; and can't find anything out about it on the Internet, it
was a complete port of &lt;span class="app"&gt;troff&lt;/span&gt; to VMS, including all the standard
utilities and macro packages, including documentation for &lt;span class="app"&gt;ms&lt;/span&gt;,
&lt;span class="app"&gt;me&lt;/span&gt;, and, significantly for this post &lt;span class="app"&gt;mm&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;span class="app"&gt;mm&lt;/span&gt; documentation was the paper &lt;cite&gt;MM - Memorandum Macros&lt;/cite&gt;, by
D. W. Smith, J. R. Mashey, E. C. Pariser, and N. W. Smith, AT&amp;amp;T Bell
Laboratories, June 1980.  I tried out all the macro packages, but
found &lt;span class="app"&gt;mm&lt;/span&gt; most to my liking.  I think a large part of that was the
&lt;span class="app"&gt;mm&lt;/span&gt; documentation — it described the many features of that macro
package pretty well, in a user guide sort of way, teaching you how to
use the features as it went along, rather than being a pure reference
manual.  And I found &lt;span class="app"&gt;mm&lt;/span&gt; most comparable in features to LaTeX of the
troff macro packages.  While configuring &lt;span class="app"&gt;mm&lt;/span&gt; documents is somewhat
quirky &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#quirky" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, I felt that the added features over those found in
&lt;span class="app"&gt;me&lt;/span&gt; and &lt;span class="app"&gt;ms&lt;/span&gt; made it worthwhile.  So I wrote a lot of
documents using &lt;span class="app"&gt;mm&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Years later when I first got access to &lt;span class="app"&gt;groff&lt;/span&gt; on Unix machines
(early 90s?) the documentation supplied with it for &lt;span class="app"&gt;mm&lt;/span&gt; was the
&lt;span class="man"&gt;groff_mm(7)&lt;/span&gt; man page.  It was very complete as a reference, but
very poor for teaching you how to use &lt;span class="app"&gt;mm&lt;/span&gt;.  I continued to use &lt;span class="app"&gt;mm&lt;/span&gt;
off and on, but I think the lack of the user guide documentation of
the &lt;span class="app"&gt;mm&lt;/span&gt; paper made &lt;span class="app"&gt;mm&lt;/span&gt; less popular among the users of &lt;span class="app"&gt;groff&lt;/span&gt;
than it could have been.  So when modern features for PDF appeared for
groff later on (the &lt;span class="app"&gt;pdfmark&lt;/span&gt; macros), they were adapted to
&lt;span class="app"&gt;ms&lt;/span&gt; but not &lt;span class="app"&gt;mm&lt;/span&gt;.  (&lt;span class="app"&gt;me&lt;/span&gt; was left out, as well.)  I was sad
to see &lt;span class="app"&gt;mm&lt;/span&gt;'s apparently low popularity, and the &lt;span class="app"&gt;mm&lt;/span&gt; paper apparently
is not available on the Internet in a form that copyright allows to be
copied around, unlike the papers on &lt;span class="app"&gt;ms&lt;/span&gt; and &lt;span class="app"&gt;me&lt;/span&gt;, which
come with &lt;span class="app"&gt;groff&lt;/span&gt;.  I suspect this is because &lt;span class="app"&gt;mm&lt;/span&gt; was used
heavily in AT&amp;amp;T's &lt;span class="app"&gt;Documenter's Workbench&lt;/span&gt;, a commercial product that was distributed
separately from UNIX System V, if I understand correctly.&lt;/p&gt;
&lt;p&gt;However, eventually the sources to the &lt;span class="app"&gt;Documenter's Workbench&lt;/span&gt; became available under
the Eclipse Public License, and they are &lt;a class="reference external" href="https://github.com/n-t-roff/DWB3.3"&gt;available&lt;/a&gt; in the &lt;a class="reference external" href="https://github.com/n-t-roff"&gt;n-t-roff&lt;/a&gt;
github repository (along with &lt;a class="reference external" href="http://n-t-roff.github.io/heirloom/doctools.html"&gt;Heirloom Docutils&lt;/a&gt;, a descendant of
the original &lt;span class="app"&gt;ditroff&lt;/span&gt; with native UTF-8 input and easy use of
fonts).  This includes the &lt;a class="reference external" href="https://github.com/n-t-roff/DWB3.3/tree/master/doc/mm"&gt;source&lt;/a&gt; to documentation that is derived
from the &lt;span class="app"&gt;mm&lt;/span&gt; paper!  Unfortunately, I haven't been able to find a PDF
of this on the Internet.&lt;/p&gt;
&lt;p&gt;I think that having this available might help those who might want to
try out &lt;span class="app"&gt;mm&lt;/span&gt;, or are returning to it after a long break, so I've
posted a version that I built a while ago &lt;a class="reference external" href="https://tkurtbond.github.io/troff/mm-all.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;p id="bonus"&gt;As a bonus for reading down this far, here is how I add PDF
outline/table-of-contents entries for sections in &lt;span class="app"&gt;groff&lt;/span&gt; &lt;span class="app"&gt;mm&lt;/span&gt;,
using the &lt;code class="docutils literal"&gt;HZ&lt;/code&gt; user-defined heading exit macro (see
&lt;span class="man"&gt;groff_mm(7)&lt;/span&gt;):&lt;/p&gt;
&lt;pre class="code nroff"&gt;&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-1" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-1" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="c"&gt;\" pdf outline fold level&lt;/span&gt;
&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-2" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-2" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-2"&gt;&lt;/a&gt;.&lt;span class="k"&gt;nr&lt;/span&gt; &lt;span class="s"&gt;PDFOUTLINE.FOLDLEVEL&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-3" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-3" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="c"&gt;\" start out in outline view&lt;/span&gt;
&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-4" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-4" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-4"&gt;&lt;/a&gt;.&lt;span class="k"&gt;pdfview&lt;/span&gt; &lt;span class="s"&gt;/PageMode&lt;/span&gt; &lt;span class="s"&gt;/UseOutlines&lt;/span&gt;
&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-5" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-5" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-5"&gt;&lt;/a&gt;.&lt;span class="k"&gt;de&lt;/span&gt; &lt;span class="s"&gt;HZ&lt;/span&gt;
&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-6" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-6" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-6"&gt;&lt;/a&gt;.&lt;span class="k"&gt;pdfhref&lt;/span&gt; &lt;span class="s"&gt;O&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;$2&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;*[}0]&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;$3&lt;/span&gt;
&lt;a id="rest_code_9e7676661e9b4b8d9debab9ecade55ed-7" name="rest_code_9e7676661e9b4b8d9debab9ecade55ed-7" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_9e7676661e9b4b8d9debab9ecade55ed-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And here's how to do it in &lt;a class="reference external" href="http://n-t-roff.github.io/heirloom/doctools.html"&gt;Heirloom Docutils&lt;/a&gt; &lt;span class="app"&gt;troff&lt;/span&gt;:&lt;/p&gt;
&lt;pre class="code nroff"&gt;&lt;a id="rest_code_e64eac8c421149bfb35cd110998d2322-1" name="rest_code_e64eac8c421149bfb35cd110998d2322-1" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_e64eac8c421149bfb35cd110998d2322-1"&gt;&lt;/a&gt;.&lt;span class="k"&gt;de&lt;/span&gt; &lt;span class="s"&gt;HY&lt;/span&gt;
&lt;a id="rest_code_e64eac8c421149bfb35cd110998d2322-2" name="rest_code_e64eac8c421149bfb35cd110998d2322-2" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_e64eac8c421149bfb35cd110998d2322-2"&gt;&lt;/a&gt;.&lt;span class="k"&gt;nr&lt;/span&gt; &lt;span class="s"&gt;HYtmp&lt;/span&gt; &lt;span class="s"&gt;(\\$1-1)&lt;/span&gt;
&lt;a id="rest_code_e64eac8c421149bfb35cd110998d2322-3" name="rest_code_e64eac8c421149bfb35cd110998d2322-3" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_e64eac8c421149bfb35cd110998d2322-3"&gt;&lt;/a&gt;&lt;span class="se"&gt;\\&lt;/span&gt;X'PDFMark: Bookmark &lt;span class="se"&gt;\\&lt;/span&gt;n[HYtmp] &lt;span class="se"&gt;\\&lt;/span&gt;$3'
&lt;a id="rest_code_e64eac8c421149bfb35cd110998d2322-4" name="rest_code_e64eac8c421149bfb35cd110998d2322-4" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#rest_code_e64eac8c421149bfb35cd110998d2322-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This version uses the &lt;code class="docutils literal"&gt;HY&lt;/code&gt; user-defined heading exit macro and
doesn't include the section numbers.&lt;/p&gt;
&lt;p&gt;I'm not sure why the two use different macros.  All I can say is that
I wrote them at different times for slightly different purposes.&lt;/p&gt;
&lt;aside class="footnote brackets" id="who-produced-xroff" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;While I still maintain a descendant of the VAX I where I used
&lt;span class="app"&gt;xroff&lt;/span&gt; (emulated using &lt;a class="reference external" href="https://www.stromasys.com/solutions/charon-vax/"&gt;Charon-VAX&lt;/a&gt;), sometime in the past the
&lt;span class="app"&gt;xroff&lt;/span&gt; software disappeared from it.  I have no idea what
happened to it.  I blame user PDL!&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="quirky" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2021/07/15/troff-memorandum-macros-documentation/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;The page offset, page width, and page length have to be set before
the &lt;span class="app"&gt;mm&lt;/span&gt; macros were loaded, so while on Unix it is easy to set those
values on the command line, on VMS due to oddities in its command line
it was easiest to use &lt;code class="docutils literal"&gt;.so&lt;/code&gt; and load the macros directly&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2021-07-17 19:09:27 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="charon-vax" label="charon-vax"/>
    <category term="documenters-workbench" label="documenter's workbench"/>
    <category term="dwb" label="dwb"/>
    <category term="groff" label="groff"/>
    <category term="memorandum-macros" label="memorandum macros"/>
    <category term="mm" label="mm"/>
    <category term="troff" label="troff"/>
    <category term="vms" label="vms"/>
    <category term="xroff" label="xroff"/>
  </entry>
  <entry>
    <title>FILETAP</title>
    <id>https://tkurtbond.github.io/posts/2004/01/09/2004-01-09/</id>
    <updated>2004-01-09T00:00:00-05:00</updated>
    <published>2004-01-09T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2004/01/09/2004-01-09/"/>
    <summary type="html">&lt;p&gt;I had to do some maintenance on the &lt;span class="app"&gt;FILETAP&lt;/span&gt; program today.
I last worked on it in 1988, as far as I can tell.  The last time it
was compiled was in 1990 (going by the file dates) but I doubt that
anybody had changed the code since 1988 when I last worked on it.
It's written to use the POISE SPL API, the Support Procedure Library.&lt;/p&gt;
&lt;p&gt;As it turned out, the only reason it needed recompiled now is that one
of MPL's POISE users finally found a use for field-and-record level
security and the enhanced security features only work if the program
is linked against the shared library (&lt;span class="file"&gt;.EXE&lt;/span&gt;) and not the statically
linked library (&lt;span class="file"&gt;.OLB&lt;/span&gt;).  And the program required no code changes to
get it to work.&lt;/p&gt;
&lt;p&gt;So where's the maintenance? It turns out that there are actually two
version of this program, &lt;span class="app"&gt;TFILETAP&lt;/span&gt; and &lt;span class="app"&gt;FILETAP&lt;/span&gt;,
and it's not obvious &lt;em&gt;why&lt;/em&gt; there are two versions.  &lt;span class="app"&gt;FILETAP&lt;/span&gt;
is the version that appears to be used the most, but
&lt;span class="app"&gt;TFILETAP&lt;/span&gt; is slightly different (mostly because it opens the
key file for exclusive access).  Unfortunately, as I've lamented
several times in the past, we weren't using any sort of revision
control back then, much less configuration control, so there is no
history of changes, much less an explicit reason for the changes.  Oh
well.  I guess I'll have to look at it some more later.&lt;/p&gt;</summary>
    <category term="dms-plus" label="dms-plus"/>
    <category term="filetap" label="filetap"/>
    <category term="old-blog" label="old blog"/>
    <category term="poise" label="poise"/>
    <category term="spl" label="spl"/>
    <category term="vms" label="vms"/>
  </entry>
  <entry>
    <title>VMS Code from the Past</title>
    <id>https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/</id>
    <updated>2003-05-08T00:00:00-05:00</updated>
    <published>2003-05-08T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/"/>
    <summary type="html">&lt;p&gt;Listening to: Hawkwind, &lt;a class="reference external" href="http://www.freedb.org/freedb_search_fmt.php?cat=rock&amp;amp;id=d50ba50e"&gt;Chronicle of the Black Sword&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've been reading a lot of VMS BASIC &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; source code from the early
1990s &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#footnote-2" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; recently, and the one lesson it has taught me is that
refactoring source code is vital for maintainability.  Much of this
source code originated in one program that was copied and edited
whenever a new program was needed, so each new program generally ended
up with a lot of rag-tag odds-and-ends code from the original program
that was not actually needed for the functionality of the new program.
Unfortunately, when one is trying to change some existing
functionality one has to look at each and every program &lt;em&gt;and figure
out if that functionality is actually implemented and used in that
program&lt;/em&gt;, and to do this you have to mentally trace the execution of
the code! The moral? When you copy code, delete everything you don't
actually use! Refactor, refactor, refactor!&lt;/p&gt;
&lt;p&gt;And why didn't we use &lt;code class="docutils literal"&gt;%INCLUDE&lt;/code&gt; more? There are hundress of lines of
external function declarations that are used time and again in several
programs; we should have put them in a couple of include files.&lt;/p&gt;
&lt;p&gt;I really wish VMS Basic allowed &lt;a class="reference external" href="http://groups.google.com/groups?q=tkb+group:comp.os.vms&amp;amp;hl=en&amp;amp;lr=&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;selm=a3db6b24.0305081211.6f867ad0%40posting.google.com&amp;amp;rnum=1"&gt;redimensioning array formal
parameters&lt;/a&gt;, but I understand why it's not allowed.  (Perhaps
there should have been a specific descriptor for arrays that can be
redimensioned?)&lt;/p&gt;
&lt;p&gt;I was shocked to rediscover that there was no way of reliably building
the system from the source code.  MMS was too expensive for us at the
time and if &lt;a class="reference external" href="http://www.madgoat.com/mmk.html"&gt;MMK&lt;/a&gt; existed we
didn't know about it.  We used a bunch of ad-hoc DCL command
procecudures to compile whatever program we were working on (most of
them were all in one source file, and linked against one library of
utility routines) and these were never collected.  So, you couldn't
easily tell if the current set of executables was actually built from
up-to-date source.  Since I've been doing the odd bit of maintenance on
this system every six months or so I finally broke down and created
&lt;code class="docutils literal"&gt;DESCRIP.MMS&lt;/code&gt; files for use with MMK, and I'm much easier in my mind
now.&lt;/p&gt;
&lt;p&gt;There were a number of things in this system that I think were well
done, though, so it hasn't been all pain looking at it again.&lt;/p&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;I'm working with it on an Alpha so I can't call it VAX BASIC
anymore.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="footnote-2" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;The original version of this system ran on PDP-11 running RSTS/E.
I've been involved in two major conversions of systems running on
PDP-11 RSTS/E to VAX/VMS, both using the POISE DMS-Plus on both RSTS/E and
VMS, with extensive homegrown applications written in VMS BASIC and
using the POISE SPL API.&lt;/p&gt;
&lt;/aside&gt;
&lt;section id="section-1"&gt;
&lt;h2&gt;2014-11-03&lt;/h2&gt;
&lt;p&gt;Here's the text of my post to comp.os.vms:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The BASIC for OpenVMS Reference Manual says, in the fifth item of the
Remarks section:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The executable DIM statement cannot be used to dimension virtual arrays,
arrays received as formal parameters, or arrays declared in COMMON, MAP,
or nonexecutable DIM statements.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://h71000.www7.hp.com/doc/73final/cobol/bas_ref_013.htm#noisn"&gt;http://h71000.www7.hp.com/doc/73final/cobol/bas_ref_013.htm#noisn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The "no formal parameters" rule is inconvienent.  It means that you
can't pass an array to a function, redimension it, fill it with values,
and then use LBOUND and UBOUND in the caller to find out its new size.&lt;/p&gt;
&lt;p&gt;Presumably it is illegal because there is no way at compile time to
know if the function will be called with a dynamic array created with
the executable DIM statement or a static array created with a
non-executable DIM statement.&lt;/p&gt;
&lt;p&gt;However, the programmer &lt;em&gt;can&lt;/em&gt; know, so it ought to be safe to
redimension the array directly when the programmer knows it was
created by an executable DIM statement.&lt;/p&gt;
&lt;p&gt;Using Alpha BASIC V1.4-000 under OpenVMS V7.2 and looking at the
listing of some code with some executable dimension statements
compiled with /LIST/MACHINE revealed the existance of DBASIC$RT_DIM
and after a little experimentation lead to a program that used
DBASIC$RT_DIM directly to redimension dynamically dimensioned arrays
in functions, included below.&lt;/p&gt;
&lt;p&gt;DBASIC$RT_DIM is not documented for users (probably by design) and
could &lt;em&gt;theoretically&lt;/em&gt; lead to flying monkeys and access violations,
and is probably bad style.  However, are there any &lt;em&gt;practical&lt;/em&gt;
reasons why this wouldn't work safely?  Are there any
conditions under which this hack would fail to work?&lt;/p&gt;
&lt;p&gt;Here is an example program:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-1" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-1" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-1"&gt;&lt;/a&gt;program redim
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-2" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-2" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-3" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-3" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-4" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-4" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-5" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-5" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-5"&gt;&lt;/a&gt;    external sub redim_in_sub (string dim())
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-6" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-6" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-6"&gt;&lt;/a&gt;    external long function my_redim (string dim(), long)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-7" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-7" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-8" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-8" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-8"&gt;&lt;/a&gt;    declare long i, r
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-9" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-9" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-10" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-10" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-10"&gt;&lt;/a&gt;    i = 10
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-11" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-11" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-11"&gt;&lt;/a&gt;    dim string vs(i) ! has to be a variable to make it an executable dim.
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-12" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-12" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-13" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-13" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-13"&gt;&lt;/a&gt;    r = my_redim (vs(), 30)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-14" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-14" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-14"&gt;&lt;/a&gt;    print "ubound(vs):"; ubound(vs)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-15" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-15" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-15"&gt;&lt;/a&gt;    for i = lbound(vs) to ubound(vs) \ vs(i) = "vs 30-" + num1$(i) \ next i
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-16" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-16" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-16"&gt;&lt;/a&gt;    gosub print_vs
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-17" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-17" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-18" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-18" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-18"&gt;&lt;/a&gt;    call redim_in_sub (vs())
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-19" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-19" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-19"&gt;&lt;/a&gt;    print "ubound(vs):"; ubound(vs)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-20" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-20" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-20"&gt;&lt;/a&gt;    gosub print_Vs
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-21" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-21" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-22" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-22" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-22"&gt;&lt;/a&gt;    exit program
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-23" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-23" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-24" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-24" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-24"&gt;&lt;/a&gt;print_vs:
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-25" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-25" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-25"&gt;&lt;/a&gt;    for i = lbound(vs) to ubound(vs) \ print i; ": "; vs(i) \ next i
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-26" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-26" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-26"&gt;&lt;/a&gt;    return ! from print_vs
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-27" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-27" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-28" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-28" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-28"&gt;&lt;/a&gt;end program ! redim
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-29" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-29" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-30" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-30" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-30"&gt;&lt;/a&gt;function long my_redim (long s by value, long n)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-31" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-31" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-31"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-32" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-32" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-32"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-33" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-33" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-33"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-34" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-34" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-34"&gt;&lt;/a&gt;    external long function dbasic$rt_dim (long by value, long by value)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-35" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-35" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-35"&gt;&lt;/a&gt;    r = dbasic$rt_dim (s, n)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-36" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-36" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-36"&gt;&lt;/a&gt;end function r ! my_redim
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-37" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-37" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-37"&gt;&lt;/a&gt;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-38" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-38" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-38"&gt;&lt;/a&gt;sub redim_in_sub (string s())
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-39" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-39" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-39"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-40" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-40" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-40"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-41" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-41" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-41"&gt;&lt;/a&gt;    external sub set_strings (string dim(), string)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-42" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-42" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-42"&gt;&lt;/a&gt;    declare long i
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-43" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-43" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-43"&gt;&lt;/a&gt;    call my_redim (s(), 40)
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-44" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-44" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-44"&gt;&lt;/a&gt;    for i = 0 to 40 \ s(i) = "redim in sub " + num1$(i) \ next i
&lt;a id="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-45" name="rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-45" href="https://tkurtbond.github.io/posts/2003/05/08/2003-05-08-vms-code-from-the-past/#rest_code_92dfcde4c2e34b17a55b4e31a6bf66b4-45"&gt;&lt;/a&gt;end sub ! redim_in_sub
&lt;/pre&gt;&lt;p&gt;(Interestingly, a slightly different approach was necessary using VAX
BASIC V3.5 under VMS V5.5-2: using BY VALUE in function
definition statements is not allowed by this version of VAX BASIC,
and BAS$RT_DIM had to be used instead of DBASIC$RT_DIM, of course.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/section&gt;</summary>
    <category term="alpha" label="alpha"/>
    <category term="basic" label="basic"/>
    <category term="dms-plus" label="dms-plus"/>
    <category term="hacks" label="hacks"/>
    <category term="mmk" label="mmk"/>
    <category term="old-blog" label="old blog"/>
    <category term="poise" label="poise"/>
    <category term="usenet" label="usenet"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
  </entry>
</feed>
