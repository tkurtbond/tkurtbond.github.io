<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about emacs lisp)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/emacs-lisp.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Sat, 25 Apr 2020 04:06:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Converting my emacs-lisp repository to GIT and putting it online</title><link>https://tkurtbond.github.io/posts/2019/11/10/converting-my-emacs-lisp-repository-to-git-and-putting-it-online/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;I've had a &lt;a class="reference external" href="https://www.mercurial-scm.org/"&gt;mercurial&lt;/a&gt; repository for my Emacs Lisp initialization
files since Thursday, Oct 29, 2009, but had actually used it very
little.  Recently I had occasion to untangle my initialization files
somewhat — they had over 12,000 lines of code when I started, and I've
reduced that to 6,137 lines and switched over to using &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;Elpa&lt;/a&gt; packages
for as much stuff as I can.&lt;/p&gt;
&lt;p&gt;I decided I'd put it in one of the online repositories, and since I'm
already using &lt;a class="reference external" href="https://github.com/tkurtbond"&gt;github.com&lt;/a&gt; for my blog I decided to put it &lt;a class="reference external" href="https://github.com/tkurtbond/emacs-lisp"&gt;there&lt;/a&gt;.
But that meant converting it to &lt;a class="reference external" href="https://git-scm.com/"&gt;GIT&lt;/a&gt;.  I used the directions &lt;a class="reference external" href="https://git-scm.com/book/en/v2/Git-and-Other-Systems-Migrating-to-Git#_mercurial"&gt;here&lt;/a&gt;
using &lt;a class="reference external" href="https://github.com/frej/fast-export"&gt;fast-export&lt;/a&gt; which seemed to work fine.&lt;/p&gt;&lt;/div&gt;</description><category>conversion</category><category>emacs lisp</category><category>git</category><category>mercurial</category><guid>https://tkurtbond.github.io/posts/2019/11/10/converting-my-emacs-lisp-repository-to-git-and-putting-it-online/</guid><pubDate>Sun, 10 Nov 2019 19:09:17 GMT</pubDate></item><item><title>Defining keys in the C-x 8 prefix keymap</title><link>https://tkurtbond.github.io/posts/2012/10/03/defining-keys-in-the-c-x-8-prefix-keymap/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Yay!  I finally found it!&lt;/p&gt;
&lt;p&gt;Suppose you hate typing “C-x 8 RET GREEK SMALL LETTER LAMBDA” to
insert a lowercase lambda character in emacs (perhaps because you have
a dull American keyboard and aren't very savvy to input methods).  You
can add a key definition to the “C-x 8 prefix keymap”, say “gl”, so
you can type “C-x 8 g l” and insert a lowercase lambda.&lt;/p&gt;
&lt;p&gt;Here's how you might do it for “λ”, “Λ”, and “§”:&lt;/p&gt;
&lt;pre class="literal-block"&gt;(load-library "iso-transl.el")
(iso-transl-define-keys '(("gl" . [?λ])   ; greek lowercase lambda
                          ("gL" . [?Λ])   ; greek uppercase lambda
                          ("ps" . [?§]))) ; punctuation SECTION SIGN&lt;/pre&gt;&lt;/div&gt;</description><category>emacs</category><category>emacs lisp</category><category>key translation</category><category>unicode</category><guid>https://tkurtbond.github.io/posts/2012/10/03/defining-keys-in-the-c-x-8-prefix-keymap/</guid><pubDate>Thu, 04 Oct 2012 04:54:40 GMT</pubDate></item><item><title>Fun with Lisp: notf and cdrf</title><link>https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;I actually use these in Emacs Lisp, for which you'd need a
&lt;code&gt;(require 'cl))&lt;/code&gt;, but the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;define-modify-macro&lt;/span&gt;&lt;/code&gt; is
originally from Common Lisp.&lt;/p&gt;
&lt;p&gt;These are trivial, but useful.&lt;/p&gt;
&lt;pre class="code common-lisp"&gt;&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;define-modify-macro&lt;/span&gt; &lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-4"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; t&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-6"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; nil&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cadadr&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-9"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; (a (b (c nil)))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cadadr&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-11"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; (a (b (c t)))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;[1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;5]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;aref&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-14"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; [1 2 3 nil 5]&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;aref&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-16"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; [1 2 3 t 5]&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;define-modify-macro&lt;/span&gt; &lt;span class="nv"&gt;cdrf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;cdr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-19"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:a&lt;/span&gt; &lt;span class="ss"&gt;:b&lt;/span&gt; &lt;span class="ss"&gt;:c&lt;/span&gt; &lt;span class="ss"&gt;:d&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;frob&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nv"&gt;nothing-now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-21"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;member&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:a&lt;/span&gt; &lt;span class="ss"&gt;:b&lt;/span&gt; &lt;span class="ss"&gt;:c&lt;/span&gt; &lt;span class="ss"&gt;:d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-22"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;frob&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-23"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cdrf&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_4724ec1ad10d477fbf01e93712b242d2-24"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="c1"&gt;;;=&amp;gt; (1 2 3)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>common lisp</category><category>emacs lisp</category><guid>https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/</guid><pubDate>Fri, 15 Aug 2008 23:59:36 GMT</pubDate></item></channel></rss>