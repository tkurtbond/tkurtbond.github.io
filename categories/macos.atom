<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about macos)</title>
  <id>https://tkurtbond.github.io/categories/macos.atom</id>
  <updated>2021-07-26T22:51:28Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/macos.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/macos/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Making an newer version of groff work with man and emacs on macOS</title>
    <id>https://tkurtbond.github.io/posts/2021/07/26/making-an-newer-version-of-groff-work-with-man-and-emacs-on-macos/</id>
    <updated>2021-07-26T17:30:19-04:00</updated>
    <published>2021-07-26T17:30:19-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2021/07/26/making-an-newer-version-of-groff-work-with-man-and-emacs-on-macos/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;I'm posting this mostly to remind myself if I ever have to fiddle with
this again.&lt;/p&gt;
&lt;p&gt;I use a version of &lt;span class="app"&gt;groff&lt;/span&gt; installed from &lt;span class="app"&gt;git&lt;/span&gt; because some
of my documents depend on fixes that are coming out in the next
release, 1.23.0.  I install it on my macOS machine in
&lt;span class="file"&gt;/usr/local/sw/versions/groff/git&lt;/span&gt;.  (The directory hierarchy
under &lt;span class="file"&gt;/usr/local/sw/versions&lt;/span&gt; is where I put programs that I
compile from scratch, to keep them separated from the programs that
come from the operating system and/or package managers.  I often have
more than one version of a program installed, therefore the
&lt;span class="file"&gt;versions&lt;/span&gt; component of the name.)&lt;/p&gt;
&lt;p&gt;Because the &lt;span class="command"&gt;groff&lt;/span&gt; that is first in my path is the new one I
installed, and because &lt;span class="app"&gt;man&lt;/span&gt; on macOS knows to look for man pages
according to what your &lt;code class="docutils literal"&gt;PATH&lt;/code&gt; is, when I as &lt;code class="docutils literal"&gt;man groff_ms&lt;/code&gt; I get
the new man page for &lt;code class="docutils literal"&gt;groff_ms&lt;/code&gt;.  Yay!  Unfortunately, it gets
rendered with the old &lt;span class="app"&gt;groff&lt;/span&gt; that macOS supplies, version
1.19.2, which doesn't include the &lt;code class="docutils literal"&gt;.SY&lt;/code&gt; macro that current versions
of &lt;span class="app"&gt;groff&lt;/span&gt; supply in their &lt;span class="app"&gt;man&lt;/span&gt; macros, and which they
&lt;em&gt;use&lt;/em&gt; in their man pages, so it renders wrong.  A typical example is
that when it renders &lt;span class="man"&gt;groff_ms(7)&lt;/span&gt; the &lt;code class="docutils literal"&gt;groff &lt;span class="pre"&gt;-ms&lt;/span&gt;&lt;/code&gt; and
&lt;code class="docutils literal"&gt;groff &lt;span class="pre"&gt;-m&lt;/span&gt; ms&lt;/code&gt; are missing from the lines in the SYNOPSIS section.
Boo!&lt;/p&gt;
&lt;p&gt;Luckily, &lt;span class="app"&gt;man&lt;/span&gt; takes a &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt;&lt;/code&gt; option that lets you specify an
alternate configuration file (on macOS the default one is in
&lt;span class="file"&gt;/private/etc/man.conf&lt;/span&gt;), so you can supply one that specifies
the absolute path to the newer &lt;span class="app"&gt;groff&lt;/span&gt; you are using.  So I added&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_fcb14de0681f4f9b8cf423a143c4d9a2-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;man&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'man -C ~/local/etc/man.conf'&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;to the appropriate shell startup file.  And I can add&lt;/p&gt;
&lt;pre class="code emacs-lisp"&gt;&lt;a name="rest_code_c5b076f511754ce3ba5f6b6b8f0538ef-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;Man-switches&lt;/span&gt; &lt;span class="s"&gt;"-C ~/local/etc/man.conf"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;to my &lt;span class="app"&gt;emacs&lt;/span&gt; configuration so it uses the right version of
&lt;span class="app"&gt;groff&lt;/span&gt; too.&lt;/p&gt;
&lt;p&gt;But a modern &lt;span class="app"&gt;groff&lt;/span&gt; produces ANSI escapes for bold and
underline, rather than the older convention of over-striking via the
backspace character with the same character for bold or with the
underscore character for underlining.  My pager, &lt;span class="app"&gt;less&lt;/span&gt;, can deal
with that, but something in &lt;span class="app"&gt;emacs&lt;/span&gt; doesn't like that, leaving
the buffer with &lt;span class="man"&gt;groff_ms(7)&lt;/span&gt; with underlining on every line.&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2021/07/26/making-an-newer-version-of-groff-work-with-man-and-emacs-on-macos/#manual" id="id1"&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eventually I figured out that the old style over-striking via
backspaces worked just fine with emacs, so I added the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-P-c&lt;/span&gt;&lt;/code&gt; option
to the invocation of &lt;span class="app"&gt;groff&lt;/span&gt; in the NROFF definition in my
modified &lt;span class="file"&gt;man.conf&lt;/span&gt; file.  That tells &lt;span class="command"&gt;groff&lt;/span&gt; to pass
the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-c&lt;/span&gt;&lt;/code&gt; option to the &lt;span class="command"&gt;grotty&lt;/span&gt; output driver, which tells
it to use old-style backspace over-striking.&lt;/p&gt;
&lt;p&gt;This seems overly complicated.&lt;/p&gt;
&lt;p&gt;I suspect I'll need to do something different on the Linux boxes I
use.&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="manual"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://tkurtbond.github.io/posts/2021/07/26/making-an-newer-version-of-groff-work-with-man-and-emacs-on-macos/#id1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Oddly, if I direct &lt;span class="app"&gt;man&lt;/span&gt;'s output to a file, visit that file in
&lt;span class="app"&gt;emacs&lt;/span&gt;, and manually invoke the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Man-fontify-manpage&lt;/span&gt;&lt;/code&gt; function
&lt;span class="app"&gt;emacs&lt;/span&gt; uses to fontify the man page, it &lt;em&gt;doesn't&lt;/em&gt; end up
erroneously underlined.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;</summary>
    <category term="groff" label="groff"/>
    <category term="macos" label="macos"/>
    <category term="troff" label="troff"/>
  </entry>
  <entry>
    <title>Foreign File Systems on macOS: Fail!</title>
    <id>https://tkurtbond.github.io/posts/2020/02/24/foreign-file-systems-on-macos-fail/</id>
    <updated>2020-02-24T17:40:34-05:00</updated>
    <published>2020-02-24T17:40:34-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2020/02/24/foreign-file-systems-on-macos-fail/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Back sometime in March 2018 I installed &lt;a class="reference external" href="https://www.tuxera.com/"&gt;Tuxera&lt;/a&gt; &lt;a class="reference external" href="https://www.tuxera.com/products/tuxera-ntfs-for-mac/"&gt;NTFS for Mac&lt;/a&gt;.  It was
the first NTFS for Mac that I found.  I used it casually for a while
and it seemed ok.&lt;/p&gt;
&lt;p&gt;Sometime later, probably in October 2019, I decided I needed to move
110 GB of files off my Macbook Pro laptop's internal drive and onto a
external drive.  I also wanted to access this drive from Linux, and
thought I'd just use a NTFS-formatted drive so it would be readable
there.&lt;/p&gt;
&lt;p&gt;I copied the files over using rsync and there seemed to be no
problems, until I (in a fit of paranoia) ran the Unix cmp command on
all the files on the original disk and the matching files on the
NTFS-formatted drive.  There were lots of differences. Uh oh.&lt;/p&gt;
&lt;p&gt;I didn't see anything on the Internet complaining about this.&lt;/p&gt;
&lt;p&gt;So, sometime in October 2019 in I installed &lt;a class="reference external" href="https://www.paragon-drivers.com/"&gt;Paragon Software&lt;/a&gt;
&lt;a class="reference external" href="https://www.paragon-drivers.com/en/extfsmac/"&gt;extFS for Mac&lt;/a&gt;. (I see now that they have a &lt;a class="reference external" href="https://www.paragon-drivers.com/en/ntfsmac/"&gt;NTFS for Mac&lt;/a&gt;; I
haven't tried it.)&lt;/p&gt;
&lt;p&gt;I wanted to try the same thing and see if it worked more reliably with
extFS.  I originally wrote short shell scripts for this, for
consistency, so I could just change the volume name and run them
again.  Again there were lots of differences.  Uh oh.&lt;/p&gt;
&lt;p&gt;Again, I didn't see anything on the Internet complaining about this.&lt;/p&gt;
&lt;p&gt;All I was doing was running &lt;code class="docutils literal"&gt;rsync &lt;span class="pre"&gt;-avz&lt;/span&gt;&lt;/code&gt; with the appropriate
directories; it should have worked.&lt;/p&gt;
&lt;p&gt;I formatted the drive to Mac OS Extended (Journaled) and recopied the
files, and this time they all compared ok.&lt;/p&gt;
&lt;p&gt;I decided to just use &lt;a class="reference external" href="https://www.cis.upenn.edu/~bcpierce/unison/"&gt;Unison&lt;/a&gt; to sync the files to a couple of my
computers for backup and local use instead of connecting the external
drive to each computer in turn.  This is working ok for me.&lt;/p&gt;
&lt;p&gt;Maybe this was user error on my part, but it happened consistently
with both of these file systems.&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="extfs" label="extfs"/>
    <category term="macos" label="macos"/>
    <category term="ntfs" label="ntfs"/>
    <category term="paragon" label="paragon"/>
    <category term="tuxera" label="tuxera"/>
  </entry>
  <entry>
    <title>macOS Catalina doesn't have a FTP client!</title>
    <id>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</id>
    <updated>2019-11-09T22:00:04-05:00</updated>
    <published>2019-11-09T22:00:04-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Ack!  macOS Catalina doesn't have an FTP client!  Yes, I know it is
terribly insecure, but I only use it inside our firewall to access one
legacy computer system.  I was glad &lt;a class="reference external" href="https://brew.sh/"&gt;brew&lt;/a&gt; had &lt;a class="reference external" href="https://lftp.yar.ru/"&gt;LFTP&lt;/a&gt;, and I figured out
how to use active mode in &lt;code class="docutils literal"&gt;LFTP&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_7623fa8678664d3cb043fb20f44e555b-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; ftp:passive-mode off
&lt;/pre&gt;&lt;p&gt;because that machine's FTP server only works with active mode.&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="catalina" label="catalina"/>
    <category term="ftp" label="ftp"/>
    <category term="macos" label="macos"/>
  </entry>
  <entry>
    <title>Getting nxml-mode in emacs to validate DocBook 5 documents</title>
    <id>https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/</id>
    <updated>2019-11-05T20:32:24-05:00</updated>
    <published>2019-11-05T20:32:24-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;I have occasion to edit and build a DocBook 5 document under both
macOS Catalina and Fedora 30.&lt;/p&gt;
&lt;p&gt;On macOS I've used homebrew to install the docbook, docbook-xsl, and
libxslt (for xsltproc), and fop formulas, and changed my PATH to
include the directory where brew installed &lt;code class="docutils literal"&gt;xsltproc&lt;/code&gt;. which will then
use &lt;code class="docutils literal"&gt;/usr/local/etc/xml/catalog&lt;/code&gt; to find files, in which brew installed
links to the docbook schemas and xsl stylesheets.&lt;/p&gt;
&lt;p&gt;On Fedora I've used &lt;code class="docutils literal"&gt;dnf&lt;/code&gt; to install the docbook5-schemas,
docbook5-style-xsl, and fop packages.&lt;/p&gt;
&lt;p&gt;The document builds fine on both OSes, but Emacs doesn't validate
properly against the DocBook RELAX NG schemas, because the &lt;code class="docutils literal"&gt;*.rnc&lt;/code&gt; files
supplied with Emacs (26.3 on macOS, 26.2 on Fedora) are for DocBook 4.
However, Emacs will look at a &lt;code class="docutils literal"&gt;schemas.xml&lt;/code&gt; file in the same directory
as the file you are editing to find the &lt;code class="docutils literal"&gt;*.rnc&lt;/code&gt; files.  Unfortunately,
of course, they have different locations on macOS with brew and on
Fedora.&lt;/p&gt;
&lt;p&gt;So I wrote a script, generate-schemas-xml, in bash using xmlcatalog to
look up the translation for the URI for the RELAX NG compiled schema
file and generate the &lt;code class="docutils literal"&gt;schemas.xml&lt;/code&gt; file and substitute the translation
into the file:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/generate-schemas-xml.html"&gt;generate-schemas-xml&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/generate-schemas-xml"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;schema_location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;xmlcatalog &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;"http://docbook.org/xml/5.0/rng/docbookxi.rnc"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-4"&gt;&lt;/a&gt;    grep &lt;span class="s2"&gt;"^file:///"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;'s#^file://##'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-6"&gt;&lt;/a&gt;cat &amp;gt;schemas.xml &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-7"&gt;&lt;/a&gt;&lt;span class="s"&gt;&amp;lt;locatingRules xmlns="http://thaiopensource.com/ns/locating-rules/1.0"&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-8"&gt;&lt;/a&gt;&lt;span class="s"&gt;&amp;lt;namespace ns="http://docbook.org/ns/docbook" uri="$schema_location"/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-9"&gt;&lt;/a&gt;&lt;span class="s"&gt;&amp;lt;/locatingRules&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_93e9e426edc94171999b50cc0a1cf50d-10"&gt;&lt;/a&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Then I had my Makefile generate the &lt;code class="docutils literal"&gt;schemas.xml&lt;/code&gt; file if it was missing.&lt;/p&gt;
&lt;p&gt;It was more complicated that I'd have liked, but it does work.&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="docbook-5" label="docbook 5"/>
    <category term="emacs" label="emacs"/>
    <category term="fedora" label="fedora"/>
    <category term="macos" label="macos"/>
  </entry>
</feed>
