<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about lt86 tape)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/lt86-tape.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2024 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Mon, 21 Oct 2024 19:59:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How the LBL Software Tools system organized its source files</title><link>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;One of the things I've always found interesting about the LBL Software
Tools VOS was how its source files were structured.  I'll include here
page 10 of the release notes from the release on the DECUS LT86 tape:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1"&gt;&lt;/a&gt;                            Release Notes
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4"&gt;&lt;/a&gt;                        Source File Structure
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6"&gt;&lt;/a&gt;The  source  code  for  `tool' is contained in a file [...SRC]tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7"&gt;&lt;/a&gt;(if   the   tool   is   portable   across   operating   systems)    or
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8"&gt;&lt;/a&gt;[...VMS]tool.tcs  (if  it  is  an VMS-specific tool).  This TCS source
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9"&gt;&lt;/a&gt;file contains an edit history of all changes made to the source.   The
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10"&gt;&lt;/a&gt;output  of  the  `get' utility operating on a `.tcs' file results in a
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11"&gt;&lt;/a&gt;file (tool.w) which is all of the  environment  necessary  to  rebuild
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12"&gt;&lt;/a&gt;the  tool,  provided  that the VOS is operational.  The tool.w file is
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13"&gt;&lt;/a&gt;an archive containing:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15"&gt;&lt;/a&gt;  1. All of the files "included" by the ratfor source code.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16"&gt;&lt;/a&gt;  2. The ratfor source file, tool.r.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17"&gt;&lt;/a&gt;  3. The format input for the manual entry, tool.fmt.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18"&gt;&lt;/a&gt;  4. And optionally,  any  extra  definition  files  needed  to  build
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19"&gt;&lt;/a&gt;     alternate versions of the tool (eg. sh =&amp;gt; hsh).
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21"&gt;&lt;/a&gt;As  an  example,  suppose  that  you  wish  to  change  the subroutine
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22"&gt;&lt;/a&gt;"module" in "tool".  The suggested scenario is as follows:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24"&gt;&lt;/a&gt;   $ !Fetch the file tool.tcs from the appropriate directory in the container
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25"&gt;&lt;/a&gt;   $ !file on tape into st_src
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26"&gt;&lt;/a&gt;   $ hsh
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27"&gt;&lt;/a&gt;   % get ~src/tool.tcs tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28"&gt;&lt;/a&gt;   % ar xv tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29"&gt;&lt;/a&gt;   % ar xv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30"&gt;&lt;/a&gt;   % ed module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31"&gt;&lt;/a&gt;   (make changes and write file)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32"&gt;&lt;/a&gt;   % ar uv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33"&gt;&lt;/a&gt;   % rc -v tool.r
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34"&gt;&lt;/a&gt;   % (test out new tool.  repeat last three steps until satisfied.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35"&gt;&lt;/a&gt;   % ed tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36"&gt;&lt;/a&gt;   (modify writeup to reflect changes)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37"&gt;&lt;/a&gt;   % ar uv tool.w tool.r tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38"&gt;&lt;/a&gt;   % cp tool.exe ~usr/tool.exe
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39"&gt;&lt;/a&gt;   % delta tool.w ~src/tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40"&gt;&lt;/a&gt;   (Identify in the comments the reason for the changes,
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41"&gt;&lt;/a&gt;   and which modules changed.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42"&gt;&lt;/a&gt;   % format tool.fmt &amp;gt;tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43"&gt;&lt;/a&gt;   % ar uv ~man/s1 tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44"&gt;&lt;/a&gt;   % asam &amp;lt;~man/s1 | sort &amp;gt;~man/i1
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46"&gt;&lt;/a&gt;Placing tool.exe in ~usr  causes  the  shell  to  find  your  modified
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47"&gt;&lt;/a&gt;version  of  "tool"  rather  than  the  distributed one.  The last two
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48"&gt;&lt;/a&gt;commands  above  cause  the  manual  entry  for  `tool'  to  correctly
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49"&gt;&lt;/a&gt;correspond to the utility itself.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56"&gt;&lt;/a&gt;                                 -10-
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(It should be &lt;code&gt;% get ~src/tool.tcs &amp;gt;tool.w&lt;/code&gt; with a â&amp;gt;â
before &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt; in the above procedure.  Otherwise the contents
are echoed to the terminal instead of being written to &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;So, all the source files (source code &lt;em&gt;and&lt;/em&gt; documentation) are stored
in an archive file, which contains another archive file that has just
the ratfor source, from which you extract the modules you want to work
on, and at the end update the archives in the reverse order!  This
made organizing all the source much simpler, especially considering
some of the porting targets for this software didn't have hierarchical
directory structures, only flat directories.  So when moving around
parts of the system, like when you were preparing the distribution,
you normally only dealt with the top level archives, the &lt;code class="file docutils literal"&gt;.TCS&lt;/code&gt;
files, and only worked directly with the files that were contained
within that archive and its child archives if you had to make a change
to the source files.  Very clever!&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls" src="https://tkurtbond.github.io/images/Russian-Matroshka.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Russian-Matroshka.jpg"&gt;Source 1&lt;/a&gt;)&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls, opened" src="https://tkurtbond.github.io/images/Russian-Matroshka-opened.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Matryoshka_transparent.png"&gt;Source 2&lt;/a&gt;)&lt;/p&gt;</description><category>decus</category><category>lbltools</category><category>lt86 tape</category><category>source file structure</category><category>swtools</category><category>vax</category><category>vms</category><category>vos</category><guid>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</guid><pubDate>Wed, 03 Jul 2024 20:20:40 GMT</pubDate></item><item><title>Software Tools</title><link>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;When I was in college in the 1980s the school I was at used Digital
Equipment Corporation VAXes running VMS, and didn't have any Unix
machines.  I was quite interested in Unix and the Unix philosophy, but
was frustrated by my lack of access to Unix machines.  However,
Brian W. Kernighan and P. J. Plauger wrote a couple of books about
writing tools in the Unix style: &lt;cite&gt;Software Tools&lt;/cite&gt; was in
published in 1976 and used Fortran as its portable implementation
language, while &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; was published in
1981 and used Pascal.&lt;/p&gt;
&lt;img alt="/images/swtools.jpeg" src="https://tkurtbond.github.io/images/swtools.jpeg"&gt;
&lt;p&gt;Here is a quote repeated on each book's cover:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good Programming is not learned from generalities, but by seeing
how significant programs can be made clean, easy to read, easy to
maintain and modify, human-engineered, efficient, and reliable, by
the application of common sense and good programming practices.
Careful study and imitation of good programs leads to better
writing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both books worked through writing software tools that were simpler but
still useful versions of many of the standard Unix tools.&lt;/p&gt;
&lt;p&gt;I got &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; because I knew Pascal better
than Fortran and worked through implementing each of the programs on
the college's VAX, which taught me a lot about programming and was
significant influence on me.  I later got &lt;cite&gt;Software Tools&lt;/cite&gt;
because I wanted to read the section on implementing the ratfor
processor which that book used to add additional control structures
unavailable in the Fortran of the day.&lt;/p&gt;
&lt;p&gt;I was not the only person who was influenced by these books.
Deborah K. Scherrer, Dennis E. Hall, and Joseph S. Sventek at Lawrence
Berkeley National Laboratory with help from others greatly expanded
the set of programs from the book into an entire Virtual Operating
System (VOS), and founded the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Software_Tools_Users_Group"&gt;Software Tools Users Group&lt;/a&gt; in 1976
to distribute it, eventually leading to ports on over 50 operating
systems.&lt;/p&gt;
&lt;p&gt;Luckily for me VAX/VMS was one of those operating systems, and the
port appeared on various tapes distributed by DECUS, the Digital
Equipment Computer Users' Society.  Luckily MPL Corporation, where I
worked at the time, always got the DECUS tapes and had a Fortran
compiler, so I could install it there.  I found it a very useful and
usable computing environment.&lt;/p&gt;
&lt;p&gt;Anyway, I retain a fondness for that software, known variously as
LBLTOOLS, LBL SWTOOLS, and SWTOOLS VOS, and have begun using the version
from the &lt;a class="reference external" href="https://www.digiater.nl/openvms/decus/zips_vms_attributes/lt86a.zip"&gt;DECUS VAX Languages &amp;amp; Tools SIG tape from 1986&lt;/a&gt;
again on the (emulated) VAX I maintain at work.  This gave me the
opportunity create a &lt;a class="reference external" href="https://tkurtbond.github.io/swtoolsman.pdf"&gt;PDF with the documentation&lt;/a&gt;
for that version, which I'm making available here for the curious.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;âI really enjoyed that book.  The first computer book I read where
I thought my world was larger after reading it.â â C. Paul Bond&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2024-10-21 15:59:04 EDT&lt;/em&gt;
â Updated PDF with slight changes to structure and better bookmarks.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</description><category>brian w. kernighan</category><category>decus</category><category>fortran</category><category>lbltools</category><category>lt86 tape</category><category>p.j. plauger</category><category>pascal</category><category>ratfor</category><category>software tools</category><category>swtools</category><category>vax</category><category>vms</category><category>vos</category><guid>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</guid><pubDate>Wed, 03 Jul 2024 13:59:31 GMT</pubDate></item></channel></rss>