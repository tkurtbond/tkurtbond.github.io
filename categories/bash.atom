<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about bash)</title>
  <id>https://tkurtbond.github.io/categories/bash.atom</id>
  <updated>2022-02-25T15:17:52Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/bash.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/bash/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Sorting words separated by commas</title>
    <id>https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/</id>
    <updated>2021-07-16T13:05:09-04:00</updated>
    <published>2021-07-16T13:05:09-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/"/>
    <summary type="html">&lt;p&gt;I often have lists of "words", separated by commas, possibly on
multiple lines, like this example from a &lt;span class="file"&gt;Makefile&lt;/span&gt;:&lt;/p&gt;
&lt;pre class="code makefile"&gt;&lt;a id="rest_code_ea304562d0f049a5a948b50d1059a9f5-1" name="rest_code_ea304562d0f049a5a948b50d1059a9f5-1" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_ea304562d0f049a5a948b50d1059a9f5-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;#    bookman, schoolbook, palatino, times,&lt;/span&gt;
&lt;a id="rest_code_ea304562d0f049a5a948b50d1059a9f5-2" name="rest_code_ea304562d0f049a5a948b50d1059a9f5-2" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_ea304562d0f049a5a948b50d1059a9f5-2"&gt;&lt;/a&gt;&lt;span class="c"&gt;#    helvetica, helvetica-narrow, optima, cormorant-garamond,&lt;/span&gt;
&lt;a id="rest_code_ea304562d0f049a5a948b50d1059a9f5-3" name="rest_code_ea304562d0f049a5a948b50d1059a9f5-3" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_ea304562d0f049a5a948b50d1059a9f5-3"&gt;&lt;/a&gt;&lt;span class="c"&gt;#    or ebgaramond.&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;I find these lists are always getting out of order, or they end up
with some short lines and some long lines.  I want to be able to
reformat them automatically, like this:&lt;/p&gt;
&lt;pre class="code makefile"&gt;&lt;a id="rest_code_c727b6376a544a4ea8187867091461a7-1" name="rest_code_c727b6376a544a4ea8187867091461a7-1" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_c727b6376a544a4ea8187867091461a7-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;#    bookman, cormorant-garamond, ebgaramond, helvetica, helvetica-narrow,&lt;/span&gt;
&lt;a id="rest_code_c727b6376a544a4ea8187867091461a7-2" name="rest_code_c727b6376a544a4ea8187867091461a7-2" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_c727b6376a544a4ea8187867091461a7-2"&gt;&lt;/a&gt;&lt;span class="c"&gt;#    optima, palatino, schoolbook, or times.&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;So, I wrote three scripts to deal with them,
&lt;span class="command"&gt;sort-with-commas&lt;/span&gt;, &lt;span class="command"&gt;strip-leading-hash&lt;/span&gt; to get rid
of the leading hashes and spaces, and &lt;span class="command"&gt;prefix&lt;/span&gt; to put the
leading hashes and spaces back.&lt;/p&gt;
&lt;p&gt;Now, above I said "words", because really it's anything separated by
commas, so the "words" can contain space, etc.&lt;/p&gt;
&lt;p&gt;Also, notice that the period after "ebgaramond" and the "or" before
"ebgaramond"` in the original list disappear, and an "or " appears
before the new end of the list, "times", and a period follows it.  And
you can have have the same situation with "and".  So, the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/code&gt;
option to &lt;span class="command"&gt;sort-with-commas&lt;/span&gt; adds a period after the last
word, the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-a&lt;/span&gt;&lt;/code&gt; option adds and "and " before the last word, and the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt;&lt;/code&gt; option adds an "or " before the last word.  If you are sorting
only part of a list, you want to have a comma after the last "word",
so there is the option &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/code&gt; for that.  And to remove the the period
from the original list, so it doesn't end up in the middle of the new
list, or to remove "and " or "or ", there is the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-r&lt;/span&gt;&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;The default is to return the sorted list as one long line, but you can
easily reformat it to multiple lines by running it through the Unix
command &lt;span class="command"&gt;fmt&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Although in this case the list is prefixed with a "#" and some spaces
because it comes from a comment in a Makefile, you have to remove
those to sort the list.  I wrote the script
&lt;span class="command"&gt;strip-leading-hash&lt;/span&gt; to do that, too, rather than having to
remember the &lt;span class="command"&gt;sed&lt;/span&gt; command to so that all the time.&lt;/p&gt;
&lt;p&gt;So, to sort the original list I'd run the command&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_67613cfdaf4843ac94e36be2cc6af9de-1" name="rest_code_67613cfdaf4843ac94e36be2cc6af9de-1" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_67613cfdaf4843ac94e36be2cc6af9de-1"&gt;&lt;/a&gt;strip-leading-hash &lt;span class="p"&gt;|&lt;/span&gt; sort-with-commas -r -p -o &lt;span class="p"&gt;|&lt;/span&gt; fmt &lt;span class="p"&gt;|&lt;/span&gt; prefix &lt;span class="s2"&gt;"#    "&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;which means “strip the leading hashes and spaces, remove the trailing
period and the "and " or "or ", add a final period after the last word,
add an "or " before the final word, reformat as a paragraph, and
prefix the lines with the hash and spaces.”&lt;/p&gt;
&lt;p&gt;When I use this I'm usually in &lt;span class="app"&gt;emacs&lt;/span&gt; and using &lt;span class="key"&gt;M-|&lt;/span&gt; to
run it on the region (the currently selected text), often with the
&lt;span class="key"&gt;C-u&lt;/span&gt; to replace the region with results.&lt;/p&gt;
&lt;p&gt;Here's the main script, &lt;span class="file"&gt;sort-with-commas&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/sort-with-commas.html"&gt;sort-with-commas&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/sort-with-commas"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-1" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-1" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-2" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-2" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;###############################################################################&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-3" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-3" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Sort a list of words that are seperated by commas, optionally followed by&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-4" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-4" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# a newline into a single line seperated by commas followed by spaces.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-5" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-5" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-6" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-6" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# For example: it translates (ignore the "# +" at the beginning of lines)&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-7" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-7" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#    bookman, schoolbook,palatino,&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-8" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-8" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#    times, helvetica, helvetica-narrow,&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-9" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-9" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# to&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-10" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-10" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-10"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#    bookman, helvetica, helvetica-narrow, palatino, schoolbook, times&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-11" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-11" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-11"&gt;&lt;/a&gt;&lt;span class="c1"&gt;###############################################################################&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-12" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-12" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-13" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-13" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-13"&gt;&lt;/a&gt;&lt;span class="nv"&gt;AND_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off                     &lt;span class="c1"&gt;# Insert "and " before last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-14" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-14" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-14"&gt;&lt;/a&gt;&lt;span class="nv"&gt;FINAL_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off                   &lt;span class="c1"&gt;# Leave "," after last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-15" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-15" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-15"&gt;&lt;/a&gt;&lt;span class="nv"&gt;OR_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off                      &lt;span class="c1"&gt;# Insert "or " before last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-16" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-16" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-16"&gt;&lt;/a&gt;&lt;span class="nv"&gt;PERIOD_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off                  &lt;span class="c1"&gt;# Insert a final period after last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-17" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-17" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-17"&gt;&lt;/a&gt;&lt;span class="nv"&gt;REMOVE_AND_OR_PERIOD_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-18" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-18" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-19" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-19" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-20" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-20" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-20"&gt;&lt;/a&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-21" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-21" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-21"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;"?afhopr"&lt;/span&gt; opt
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-22" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-22" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-22"&gt;&lt;/a&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-23" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-23" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-23"&gt;&lt;/a&gt;    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$opt&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-24" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-24" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-24"&gt;&lt;/a&gt;        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="se"&gt;\?&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;h&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;let&lt;/span&gt; errors++ &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-25" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-25" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-25"&gt;&lt;/a&gt;        &lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;AND_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-26" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-26" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-26"&gt;&lt;/a&gt;        &lt;span class="o"&gt;(&lt;/span&gt;f&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;FINAL_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-27" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-27" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-27"&gt;&lt;/a&gt;        &lt;span class="o"&gt;(&lt;/span&gt;o&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;OR_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-28" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-28" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-28"&gt;&lt;/a&gt;        &lt;span class="o"&gt;(&lt;/span&gt;p&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;PERIOD_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-29" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-29" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-29"&gt;&lt;/a&gt;        &lt;span class="o"&gt;(&lt;/span&gt;r&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;REMOVE_AND_OR_PERIOD_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-30" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-30" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-30"&gt;&lt;/a&gt;    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-31" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-31" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-31"&gt;&lt;/a&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-32" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-32" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-33" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-33" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-33"&gt;&lt;/a&gt;&lt;span class="nb"&gt;shift&lt;/span&gt; &lt;span class="k"&gt;$((&lt;/span&gt;OPTIND-1&lt;span class="k"&gt;))&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-34" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-34" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-35" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-35" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-35"&gt;&lt;/a&gt;&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;/span&gt; &amp;gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$errors&lt;/span&gt; &amp;gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-36" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-36" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-36"&gt;&lt;/a&gt;    cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-37" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-37" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-37"&gt;&lt;/a&gt;&lt;span class="s"&gt;usage: sort-with-commas [OPTION]&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-38" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-38" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-39" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-39" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-39"&gt;&lt;/a&gt;&lt;span class="s"&gt;This reads its standard input and sorts a line or multiple lines with&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-40" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-40" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-40"&gt;&lt;/a&gt;&lt;span class="s"&gt;"words" separated by commas, then reassembles the line, words&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-41" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-41" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-41"&gt;&lt;/a&gt;&lt;span class="s"&gt;separated by a comma and s space, optionally leaving a final comma&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-42" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-42" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-42"&gt;&lt;/a&gt;&lt;span class="s"&gt;after the last word, or a period, and optionally putting "and " or "or&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-43" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-43" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-43"&gt;&lt;/a&gt;&lt;span class="s"&gt;" before the last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-44" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-44" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-44"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-45" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-45" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-45"&gt;&lt;/a&gt;&lt;span class="s"&gt;Options&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-46" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-46" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-47" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-47" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-47"&gt;&lt;/a&gt;&lt;span class="s"&gt;-? -h   This message.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-48" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-48" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-48"&gt;&lt;/a&gt;&lt;span class="s"&gt;-a      Insert "and " before last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-49" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-49" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-49"&gt;&lt;/a&gt;&lt;span class="s"&gt;-f      Leave final comma after last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-50" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-50" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-50"&gt;&lt;/a&gt;&lt;span class="s"&gt;-o      Insert "or " before last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-51" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-51" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-51"&gt;&lt;/a&gt;&lt;span class="s"&gt;-p      Insert a period after the last word.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-52" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-52" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-52"&gt;&lt;/a&gt;&lt;span class="s"&gt;-r      Remove "and " or "or " that occur at the beginning of a "word" in the&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-53" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-53" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-53"&gt;&lt;/a&gt;&lt;span class="s"&gt;        original list.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-54" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-54" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-55" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-55" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-55"&gt;&lt;/a&gt;&lt;span class="s"&gt;Note that combining -a and -o, or -f and -p do what you say, but the results&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-56" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-56" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-56"&gt;&lt;/a&gt;&lt;span class="s"&gt;are silly.&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-57" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-57" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-57"&gt;&lt;/a&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-58" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-58" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-58"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-59" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-59" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-59"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-60" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-60" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-61" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-61" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-61"&gt;&lt;/a&gt;tr &lt;span class="s1"&gt;','&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E -e &lt;span class="s1"&gt;'s/^[ \t]+//'&lt;/span&gt; -e &lt;span class="s1"&gt;'/^$/d'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-62" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-62" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-62"&gt;&lt;/a&gt;    &lt;span class="o"&gt;([[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$REMOVE_AND_OR_PERIOD_OPT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"on"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-63" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-63" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-63"&gt;&lt;/a&gt;         sed -E -e &lt;span class="s1"&gt;'s/^(and|or)[ \t]+//'&lt;/span&gt; -e &lt;span class="s1"&gt;'s/\.[ \t]*$//'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; cat&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-64" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-64" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-64"&gt;&lt;/a&gt;    sort -u &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-65" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-65" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-65"&gt;&lt;/a&gt;    sed -E -e &lt;span class="s1"&gt;'s/$/,/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-66" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-66" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-66"&gt;&lt;/a&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$AND_OPT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"on"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; sed -e &lt;span class="s1"&gt;'$s/^/and /'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; cat&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-67" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-67" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-67"&gt;&lt;/a&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$FINAL_OPT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"on"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; cat&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; sed -e &lt;span class="s1"&gt;'$s/,//'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-68" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-68" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-68"&gt;&lt;/a&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$OR_OPT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"on"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; sed -e &lt;span class="s1"&gt;'$s/^/or /'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; cat&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-69" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-69" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-69"&gt;&lt;/a&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$PERIOD_OPT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"on"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; sed -e &lt;span class="s1"&gt;'$s/$/./'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; cat&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-70" name="rest_code_e2df211bf1874f7b86bd7c095dbb68e5-70" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_e2df211bf1874f7b86bd7c095dbb68e5-70"&gt;&lt;/a&gt;    tr &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E -e &lt;span class="s1"&gt;'s/[ ]$//'&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Here's &lt;span class="file"&gt;strip-leading-hash&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/strip-leading-hash.html"&gt;strip-leading-hash&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/strip-leading-hash"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_c700a30d93684c3bb84884e1ae433595-1" name="rest_code_c700a30d93684c3bb84884e1ae433595-1" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_c700a30d93684c3bb84884e1ae433595-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_c700a30d93684c3bb84884e1ae433595-2" name="rest_code_c700a30d93684c3bb84884e1ae433595-2" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_c700a30d93684c3bb84884e1ae433595-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_c700a30d93684c3bb84884e1ae433595-3" name="rest_code_c700a30d93684c3bb84884e1ae433595-3" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_c700a30d93684c3bb84884e1ae433595-3"&gt;&lt;/a&gt;sed -E -e &lt;span class="s1"&gt;'s/^#[ \t]*//'&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And here's &lt;span class="file"&gt;prefix&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/prefix.html"&gt;prefix&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/prefix"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-1" name="rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-1" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-2" name="rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-2" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-3" name="rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-3" href="https://tkurtbond.github.io/posts/2021/07/16/sorting-words-separated-by-commas/#rest_code_2f9dd2cca5b64a478dfb3ffee2a97d06-3"&gt;&lt;/a&gt;sed &lt;span class="s2"&gt;"s/^/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/"&lt;/span&gt;
&lt;/pre&gt;</summary>
    <category term="bash" label="bash"/>
    <category term="emacs" label="emacs"/>
    <category term="script" label="script"/>
    <category term="shell" label="shell"/>
  </entry>
  <entry>
    <title>Logging the output of long commands run multiple times</title>
    <id>https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/</id>
    <updated>2021-07-07T12:47:25-04:00</updated>
    <published>2021-07-07T12:47:25-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/"/>
    <summary type="html">&lt;p&gt;I often run commands that produce a lot of output that needs to saved
for debugging, and often the commands have to be repeated multiple
times to get things to work.  For example, building software from
source, often using the familiar &lt;code class="docutils literal"&gt;./configure; make; make install&lt;/code&gt;
paradigm.&lt;/p&gt;
&lt;p&gt;So, the first thing is to try is to use the venerable &lt;span class="command"&gt;tee&lt;/span&gt; command.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_a37dc8cb8c6b41fdbab1789a1940d581-1" name="rest_code_a37dc8cb8c6b41fdbab1789a1940d581-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a37dc8cb8c6b41fdbab1789a1940d581-1"&gt;&lt;/a&gt;./configure &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee Log.configure
&lt;a id="rest_code_a37dc8cb8c6b41fdbab1789a1940d581-2" name="rest_code_a37dc8cb8c6b41fdbab1789a1940d581-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a37dc8cb8c6b41fdbab1789a1940d581-2"&gt;&lt;/a&gt;make &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee Log.make
&lt;a id="rest_code_a37dc8cb8c6b41fdbab1789a1940d581-3" name="rest_code_a37dc8cb8c6b41fdbab1789a1940d581-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a37dc8cb8c6b41fdbab1789a1940d581-3"&gt;&lt;/a&gt;make install &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee Log.make-install
&lt;/pre&gt;&lt;p&gt;To make the log files easy to find I use a &lt;span class="file"&gt;Log.&lt;/span&gt; prefix.&lt;/p&gt;
&lt;p&gt;But I often need to run the commands multiple times, and want to save
each run under a new filename, so if the filename already exists I
want to add a number to the end and then increment the number until I
find one that hasn't been used.  And I'd like the filename to have the
date in YYYY-MM-DD format, so the resulting names look like
&lt;span class="file"&gt;Log.make-install-2021-07-07_2&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So I wrote a bash function &lt;span class="command"&gt;incf&lt;/span&gt; (increment filename) to put in
&lt;span class="file"&gt;.bashrc&lt;/span&gt; that generates such a name:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-1" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-1"&gt;&lt;/a&gt;incf &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-2" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Construct a filename from PREFIX, "_YYYY-MM-DD",  optionally _N (where N&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-3" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# is 1 or greater) if the filename already exists, and optionally SUFFIX.&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-4" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Example: "incf file .tar.gz" results in "file_2021-07-07.tar.gz", or&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-5" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-5"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# "file_2021-07-07_N.tar.gz" if "file_2021-07-07.tar.gz" already exists,&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-6" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# where N is 1 or greater.&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-7" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-7"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; prefix suffix fileprefix i testname sep1 sep2
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-8" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-8" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-8"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-9" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-9" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-9"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-10" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-10" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-10"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;sep1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"_"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-11" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-11" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-11"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;sep2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"_"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-12" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-12" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-12"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;fileprefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;sep1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%F&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-13" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-13" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-13"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-14" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-14" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-14"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# The zeroth filename doesn't have the number.&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-15" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-15" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-15"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;testname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;fileprefix&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-16" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-16" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-17" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-17" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;do&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-18" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-18" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-18"&gt;&lt;/a&gt;      &lt;span class="o"&gt;[&lt;/span&gt; ! -e &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$testname&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;break&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-19" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-19" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-19"&gt;&lt;/a&gt;      &lt;span class="o"&gt;((&lt;/span&gt;i++&lt;span class="o"&gt;))&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-20" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-20" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-20"&gt;&lt;/a&gt;      &lt;span class="nv"&gt;testname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;fileprefix&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;sep2&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-21" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-21" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-22" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-22" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-22"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$testname&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c3b5ada6e3d443a79262dd937918a07c-23" name="rest_code_c3b5ada6e3d443a79262dd937918a07c-23" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c3b5ada6e3d443a79262dd937918a07c-23"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And then I wrote a bash function that uses &lt;span class="command"&gt;incf&lt;/span&gt; to generate
the &lt;span class="file"&gt;Log.&lt;/span&gt; filename, potentially in a different directory:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-1" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-1"&gt;&lt;/a&gt;logf &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-2" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Construct a filename, possibly in another directory, that starts with&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-3" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# "Log." and ends with "YYYY-MM-DD" and optionally "_N", where N is 1 or&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-4" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# greater, if the filename already exists.&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-5" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; dn bn fn
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-6" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-6"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;dn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-7" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-7"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;bn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Log.&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-8" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-8" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-8"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;fn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;incf &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$dn&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$bn&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-9" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-9" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-9"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$fn&lt;/span&gt;
&lt;a id="rest_code_63598fb78ccf46aa9236d1a23681fe30-10" name="rest_code_63598fb78ccf46aa9236d1a23681fe30-10" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_63598fb78ccf46aa9236d1a23681fe30-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And then I wrote a &lt;span class="command"&gt;log&lt;/span&gt; command that uses &lt;span class="command"&gt;logf&lt;/span&gt;
and tees its input into that file:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-1" name="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_4adf8ef2177f4e9682f3bf00c99dba39-1"&gt;&lt;/a&gt;log &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-2" name="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_4adf8ef2177f4e9682f3bf00c99dba39-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# tee the input into a log file.&lt;/span&gt;
&lt;a id="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-3" name="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_4adf8ef2177f4e9682f3bf00c99dba39-3"&gt;&lt;/a&gt;    tee &lt;span class="k"&gt;$(&lt;/span&gt;logf &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;a id="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-4" name="rest_code_4adf8ef2177f4e9682f3bf00c99dba39-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_4adf8ef2177f4e9682f3bf00c99dba39-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;So running &lt;code class="docutils literal"&gt;./configure &lt;span class="pre"&gt;2&amp;gt;&amp;amp;1&lt;/span&gt; | log ~/tmp/configure&lt;/code&gt; generates a file
&lt;span class="file"&gt;Log.configure_2021-07-07&lt;/span&gt; in the &lt;span class="file"&gt;~/tmp&lt;/span&gt; directory.&lt;/p&gt;
&lt;p&gt;But what if I specify a lot of options to the command, and would like
record if it in the log file, so if I get interrupted and then come
back some time later I can use the same command?&lt;/p&gt;
&lt;p&gt;First I wrote a base function, &lt;span class="command"&gt;cleanname&lt;/span&gt;, that takes a string and
converts it to something that should be safe to use as a filename.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-1" name="rest_code_a0bb6656cd144b43afdab347841a29f1-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-1"&gt;&lt;/a&gt;cleanname &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-2" name="rest_code_a0bb6656cd144b43afdab347841a29f1-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Clean up a string so it is (relatively) safe to use as a filename.&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-3" name="rest_code_a0bb6656cd144b43afdab347841a29f1-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-3"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; name
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-4" name="rest_code_a0bb6656cd144b43afdab347841a29f1-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-4"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$cmd&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;'s/[ =";?*&amp;amp;^%$#@!~`|()&amp;lt;&amp;gt;]/-/g'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-5" name="rest_code_a0bb6656cd144b43afdab347841a29f1-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-5"&gt;&lt;/a&gt;               sed &lt;span class="s2"&gt;"s#[/']#-#g"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/--+/-/g'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-6" name="rest_code_a0bb6656cd144b43afdab347841a29f1-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-6"&gt;&lt;/a&gt;               sed -E &lt;span class="s1"&gt;'s/(^[-.]+|-+$)//g'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-7" name="rest_code_a0bb6656cd144b43afdab347841a29f1-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-7"&gt;&lt;/a&gt;               sed -E &lt;span class="s1"&gt;'s/\.\.\.*/./g'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-8" name="rest_code_a0bb6656cd144b43afdab347841a29f1-8" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_a0bb6656cd144b43afdab347841a29f1-9" name="rest_code_a0bb6656cd144b43afdab347841a29f1-9" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_a0bb6656cd144b43afdab347841a29f1-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Then I wrote a bash function, &lt;span class="command"&gt;exlog&lt;/span&gt;, to use the whole
command with its options as part of the filename (constructed with
&lt;span class="command"&gt;cleanname&lt;/span&gt;, and also include the whole command in the log output:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-1" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-1"&gt;&lt;/a&gt;exlog &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-2" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Execute a shell command and log it to "Log.&amp;lt;cmd-as-safe-filename&amp;gt;"&lt;/span&gt;
&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-3" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-3"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cleanname &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-4" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-4"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;logf &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-5" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'Logging to %s\n'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-6" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"cmd was: &lt;/span&gt;&lt;span class="nv"&gt;$cmd&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee &lt;span class="nv"&gt;$name&lt;/span&gt;
&lt;a id="rest_code_2680bdfec5b54f849c8b65a58c73302c-7" name="rest_code_2680bdfec5b54f849c8b65a58c73302c-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_2680bdfec5b54f849c8b65a58c73302c-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;So running the command&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_ba7b7a3975924110bf0d0f0dcef36036-1" name="rest_code_ba7b7a3975924110bf0d0f0dcef36036-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_ba7b7a3975924110bf0d0f0dcef36036-1"&gt;&lt;/a&gt;exlog ../configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/Users/tkb/sw/versions/groff/git
&lt;/pre&gt;&lt;p&gt;produces the file&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_7de2021c007d42bd9d5fd5709c3c320a-1" name="rest_code_7de2021c007d42bd9d5fd5709c3c320a-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_7de2021c007d42bd9d5fd5709c3c320a-1"&gt;&lt;/a&gt;Log.configure-prefix-Users-tkb-sw-versions-groff-git_2021-07-07
&lt;/pre&gt;&lt;p&gt;and it contains the line&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_8c9e385c58634d599ecda182f6f3d524-1" name="rest_code_8c9e385c58634d599ecda182f6f3d524-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_8c9e385c58634d599ecda182f6f3d524-1"&gt;&lt;/a&gt;cmd was: ../configure --prefix=/Users/tkb/sw/versions/groff/git
&lt;/pre&gt;&lt;p&gt;and running it again produces the file&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a id="rest_code_42e4674b63444421aa8687dbb41b156e-1" name="rest_code_42e4674b63444421aa8687dbb41b156e-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42e4674b63444421aa8687dbb41b156e-1"&gt;&lt;/a&gt;Log.configure-prefix-Users-tkb-sw-versions-groff-git_2021-07-07_1
&lt;/pre&gt;&lt;p&gt;This code is available in a &lt;a class="reference external" href="https://gist.github.com/tkurtbond/23255fede737eec89b1fd0e011566cb1"&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2021-07-09 15:30:53 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%04y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="bash" label="bash"/>
    <category term="logging" label="logging"/>
    <category term="unix" label="unix"/>
  </entry>
  <entry>
    <title>Looping on 'dnf -y system-upgrade download' until it succeeds</title>
    <id>https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/</id>
    <updated>2019-11-07T21:16:59-05:00</updated>
    <published>2019-11-07T21:16:59-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/"/>
    <summary type="html">&lt;p&gt;Fedora 31 is out, and fool that I am I'm upgrading to it.
Unfortunately, my DSL connection is slow and my DSL modem router is flaky.
With over 3000 packages to download,&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_d4daa2f7e5374597b379557cdd14aaf7-1" name="rest_code_d4daa2f7e5374597b379557cdd14aaf7-1" href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_d4daa2f7e5374597b379557cdd14aaf7-1"&gt;&lt;/a&gt;dnf -y system-upgrade download --refresh --releasever&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;is bound to die in the middle at least once, if not multiple times,
and with more than 6 hours estimated for the download to run I can't
sit watching it and restarting it every time it dies.&lt;/p&gt;
&lt;p&gt;I tried running &lt;code class="docutils literal"&gt;dnf&lt;/code&gt; as the argument to a while loop, but was
unable to C-c to interrupt it when I &lt;em&gt;did&lt;/em&gt; want to kill it since
&lt;code class="docutils literal"&gt;dnf&lt;/code&gt; caught the SIGINT and the loop started the &lt;code class="docutils literal"&gt;dnf&lt;/code&gt; command
over again before I could C-c the shell.&lt;/p&gt;
&lt;p&gt;Here's the script I came up with to work around the issue:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/tryfedoraupdate.html"&gt;tryfedoraupdate&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/tryfedoraupdate"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;div class="code"&gt;&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-1"&gt;&lt;code data-line-number=" 1"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-1" name="rest_code_481d60d1831747fbbd405073ef2de7f2-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-2"&gt;&lt;code data-line-number=" 2"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-2" name="rest_code_481d60d1831747fbbd405073ef2de7f2-2"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-3"&gt;&lt;code data-line-number=" 3"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-3" name="rest_code_481d60d1831747fbbd405073ef2de7f2-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt; ! dnf -y system-upgrade download --refresh --releasever&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-4"&gt;&lt;code data-line-number=" 4"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-4" name="rest_code_481d60d1831747fbbd405073ef2de7f2-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-5"&gt;&lt;code data-line-number=" 5"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-5" name="rest_code_481d60d1831747fbbd405073ef2de7f2-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;read&lt;/span&gt; -t &lt;span class="m"&gt;30&lt;/span&gt; -p &lt;span class="s2"&gt;"Continue? (y/n) "&lt;/span&gt; reply
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-6"&gt;&lt;code data-line-number=" 6"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-6" name="rest_code_481d60d1831747fbbd405073ef2de7f2-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&amp;gt;128&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-7"&gt;&lt;code data-line-number=" 7"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-7" name="rest_code_481d60d1831747fbbd405073ef2de7f2-7"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"timed out, continuing..."&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-8"&gt;&lt;code data-line-number=" 8"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-8" name="rest_code_481d60d1831747fbbd405073ef2de7f2-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$reply&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="o"&gt;[&lt;/span&gt;Nn&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-9"&gt;&lt;code data-line-number=" 9"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-9" name="rest_code_481d60d1831747fbbd405073ef2de7f2-9"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Exiting..."&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-10"&gt;&lt;code data-line-number="10"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-10" name="rest_code_481d60d1831747fbbd405073ef2de7f2-10"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-11"&gt;&lt;code data-line-number="11"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-11" name="rest_code_481d60d1831747fbbd405073ef2de7f2-11"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-12"&gt;&lt;code data-line-number="12"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-12" name="rest_code_481d60d1831747fbbd405073ef2de7f2-12"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Continuing..."&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-13"&gt;&lt;code data-line-number="13"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-13" name="rest_code_481d60d1831747fbbd405073ef2de7f2-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_481d60d1831747fbbd405073ef2de7f2-14"&gt;&lt;code data-line-number="14"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_481d60d1831747fbbd405073ef2de7f2-14" name="rest_code_481d60d1831747fbbd405073ef2de7f2-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;This way I can stop the script easily, but if it dies itself it will
continue after a timeout.&lt;/p&gt;</summary>
    <category term="bash" label="bash"/>
    <category term="dnf" label="dnf"/>
    <category term="fedora" label="fedora"/>
  </entry>
  <entry>
    <title>Case-insenstive filename completion with bash and emacs</title>
    <id>https://tkurtbond.github.io/posts/2009/04/24/case-insenstive-filename-completion-with-bash-and-emacs/</id>
    <updated>2009-04-24T13:59:07-05:00</updated>
    <published>2009-04-24T13:59:07-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2009/04/24/case-insenstive-filename-completion-with-bash-and-emacs/"/>
    <summary type="html">&lt;p&gt;It's strange, I know, that while I like case sensitive filenames, I
don't actually want to be bothered matching the case exactly when I'm
using tab completion.  Fortunately, &lt;span class="program"&gt;emacs&lt;/span&gt; and
&lt;span class="program"&gt;bash&lt;/span&gt; both accommodate my whims.  For bash, add&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_b11e8f948e9d4c0390874d524bc90b95-1" name="rest_code_b11e8f948e9d4c0390874d524bc90b95-1" href="https://tkurtbond.github.io/posts/2009/04/24/case-insenstive-filename-completion-with-bash-and-emacs/#rest_code_b11e8f948e9d4c0390874d524bc90b95-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; completion-ignore-case on
&lt;/pre&gt;&lt;p&gt;to your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;~/.inputrc&lt;/span&gt;&lt;/code&gt; file.  For emacs, add&lt;/p&gt;
&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_8c6b3c6c99094e57846279d1be7daa5e-1" name="rest_code_8c6b3c6c99094e57846279d1be7daa5e-1" href="https://tkurtbond.github.io/posts/2009/04/24/case-insenstive-filename-completion-with-bash-and-emacs/#rest_code_8c6b3c6c99094e57846279d1be7daa5e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;read-file-name-completion-ignore-case&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;to your emacs initialization files.  Of course, if want to get rid of
all completion case sensitivity, you need&lt;/p&gt;
&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_f8cb3f86ede541a1b56a7fc49d3504c4-1" name="rest_code_f8cb3f86ede541a1b56a7fc49d3504c4-1" href="https://tkurtbond.github.io/posts/2009/04/24/case-insenstive-filename-completion-with-bash-and-emacs/#rest_code_f8cb3f86ede541a1b56a7fc49d3504c4-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;completion-ignore-case&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;too.&lt;/p&gt;</summary>
    <category term="bash" label="bash"/>
    <category term="computer" label="computer"/>
    <category term="emacs" label="emacs"/>
  </entry>
  <entry>
    <title>Cygwin setup crashes updating bash</title>
    <id>https://tkurtbond.github.io/posts/2008/11/26/cygwin-setup-crashes-updating-bash/</id>
    <updated>2008-11-26T15:57:51-05:00</updated>
    <published>2008-11-26T15:57:51-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2008/11/26/cygwin-setup-crashes-updating-bash/"/>
    <summary type="html">&lt;p&gt;Thanks to the wonders of Google and &lt;a class="reference external" href="http://rubenlaguna.com/wp/2007/11/05/cygwin-setupexe-crashes-whem-upgrading-packages/"&gt;Ruben&lt;/a&gt; I finally found the answer:
remove (you'll want to make a backup copy before you remove it,
though) &lt;code class="docutils literal"&gt;/etc/setup/bash.lst.gz&lt;/code&gt; which apparently had become
corrupted.&lt;/p&gt;
&lt;p&gt;According to a comment on that post, running &lt;code class="docutils literal"&gt;gunzip &lt;span class="pre"&gt;-t&lt;/span&gt;&lt;/code&gt; on all
files in &lt;code class="docutils literal"&gt;/etc/setup&lt;/code&gt; will tell you which setup files have been
corrupted.&lt;/p&gt;</summary>
    <category term="bash" label="bash"/>
    <category term="computer" label="computer"/>
    <category term="corrupted" label="corrupted"/>
    <category term="cygwin" label="cygwin"/>
    <category term="setupexe" label="setup.exe"/>
    <category term="tools" label="tools"/>
    <category term="upgrade" label="upgrade"/>
  </entry>
</feed>
