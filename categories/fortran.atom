<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about fortran)</title>
  <id>https://tkurtbond.github.io/categories/fortran.atom</id>
  <updated>2022-06-05T16:28:34Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/fortran.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/fortran/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Cobol and Fortran</title>
    <id>https://tkurtbond.github.io/posts/2020/12/10/cobol-and-fortran/</id>
    <updated>2020-12-10T11:06:20-05:00</updated>
    <published>2020-12-10T11:06:20-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2020/12/10/cobol-and-fortran/"/>
    <summary type="html">&lt;p&gt;I know &lt;a class="reference external" href="https://en.wikipedia.org/wiki/COBOL"&gt;Cobol&lt;/a&gt;, and have written it for work, but not for a long time,
maybe 30 years? No, I lie, I did some a decade or two ago.  It was not
my favorite programming language, but knowing it helped pay the
bills.  At my college in the mid-80s it was taught by the Business
department rather than the Computer Science department!&lt;/p&gt;
&lt;p&gt;One of my Cobol jobs was porting code from the IBM mainframes to VMS
on a Digital Equipment Corporation mini-computer, the VAX.  A more
recent one was fixing bugs and making enhancements to some student
management software at a nearby college.&lt;/p&gt;
&lt;p&gt;What little Fortran I've written was in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ratfor"&gt;ratfor&lt;/a&gt; (Rational Fortran)
dialect, on VMS, using the Software Tools package written at Lawrence
Berkeley Labs, which ported a lot of Unix tools to VMS (and IBM
mainframes) using ratfor (a dialect that was first invented on Unix to
add modern control structures to Fortran 66, and implemented
as a preprocessor).&lt;/p&gt;
&lt;p&gt;One of my favorite programming books is &lt;a class="reference external" href="https://www.amazon.com/Software-Tools-Brian-W-Kernighan/dp/020103669X/ref=sr_1_3"&gt;Software Tools&lt;/a&gt; by Brian
Kernighan and P.J. Plauger (I first read the &lt;a class="reference external" href="https://www.amazon.com/Software-Tools-Pascal-Brian-Kernighan/dp/0201103427/ref=sr_1_4"&gt;Software Tools in
Pascal&lt;/a&gt; version), which showed how to write Unix like tools
in Ratfor (because at the time Fortran was more portable than C!).  It
was the inspiration for the LBL Software tools package.  I wish I
still had the LBL Software Tools on the VAX I maintain (running on a
software emulator on Intel hardware, at much faster speeds than the
original VAX), but it was deleted to save space long ago in an era of
expensive hard drives, a decision I've long regretted!  I can find the
source online, but I can't find a binary distribution, and that VAX
doesn't have a Fortran compiler anymore, alas.&lt;/p&gt;</summary>
    <category term="cobol" label="cobol"/>
    <category term="fortran" label="fortran"/>
    <category term="ratfor" label="ratfor"/>
  </entry>
</feed>
