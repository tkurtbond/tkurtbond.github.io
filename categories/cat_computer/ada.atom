<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about ada)</title>
  <id>https://tkurtbond.github.io/categories/cat_computer/ada.atom</id>
  <updated>2023-02-04T00:36:35Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/cat_computer/ada.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/cat_computer/ada/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Maintaining the old ada-mode.el formerly distributed with Emacs</title>
    <id>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</id>
    <updated>2022-12-06T13:28:59-05:00</updated>
    <published>2022-12-06T13:28:59-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/"/>
    <summary type="html">&lt;p&gt;I wrote a &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"&gt;post&lt;/a&gt; about using the old ada-mode.el that used to be
distributed with &lt;span class="app"&gt;Emacs&lt;/span&gt; because I couldn't get the newer,
separate package &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_mono/ada-mode.html"&gt;version&lt;/a&gt; to work for me.&lt;/p&gt;
&lt;p&gt;Well, this morning when I pulled up an Ada file in &lt;span class="app"&gt;Emacs&lt;/span&gt; version
28 there were two problems:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The information to invoke ada-mode on Ada files was not in the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; variable in &lt;span class="app"&gt;Emacs&lt;/span&gt;.  That was easy
enough to fix: add &lt;span class="file"&gt;.ada&lt;/span&gt;, &lt;span class="file"&gt;.ads&lt;/span&gt;, and &lt;span class="file"&gt;.adb&lt;/span&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; (and &lt;span class="file"&gt;.gpr&lt;/span&gt;, too, since Ada mode works
for &lt;span class="app"&gt;gprbuild&lt;/span&gt; files as well):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_b91809c7171d4567bc6587fda662b705-1" name="rest_code_b91809c7171d4567bc6587fda662b705-1" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_b91809c7171d4567bc6587fda662b705-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.gpr$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ada$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ads$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.adb$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b91809c7171d4567bc6587fda662b705-2" name="rest_code_b91809c7171d4567bc6587fda662b705-2" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_b91809c7171d4567bc6587fda662b705-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'ada-mode&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That was easy enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When I tried to do any indentation &lt;span class="cmd"&gt;emacs&lt;/span&gt; reported an error,
with the error message “End position is smaller than start
position”.  Eventually I tracked this down to a call to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt;.  It turns out
that somewhere after &lt;span class="app"&gt;Emacs&lt;/span&gt; version 27.2 was released the
&lt;span class="app"&gt;Emacs&lt;/span&gt; developers added a check to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; to
ensure that the &lt;code class="docutils literal"&gt;FROM&lt;/code&gt; argument (which indicates where in the
buffer to start parsing) was less than the &lt;code class="docutils literal"&gt;TO&lt;/code&gt; argument (which
indicates where in the buffer to &lt;strong&gt;stop&lt;/strong&gt; parsing).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Drat.  Drat.  Drat.  Well, looking at the code it was clear that
since &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt; is explicitly searching backwards
that &lt;code class="docutils literal"&gt;TO&lt;/code&gt; would &lt;strong&gt;always&lt;/strong&gt; be smaller than &lt;code class="docutils literal"&gt;FROM&lt;/code&gt;.  So I could
just transpose the s-expressions that found those two values.  I
tried it, and it worked!&lt;/p&gt;
&lt;p&gt;At that point I realized that I had committed to maintain the old
version of ada-mode, at least for myself, and that I'd already talked
about it on my blog and it was small step from there to setting up a
GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt; with the old code, adding an &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/1"&gt;issue&lt;/a&gt; describing the
problem, adding a &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/7ee6fe55862ec615c7fe23d881adfee2d0094770"&gt;commit&lt;/a&gt; with the fix, and then writing this blog
post.&lt;/p&gt;
&lt;p&gt;Somewhere, someone is laughing and enjoying the schadenfreude.  Maybe
this will help someone else.&lt;/p&gt;
&lt;p&gt;And since I already have a GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt;, I ought to document the
first &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/2"&gt;problem&lt;/a&gt; and since it is a documentation problem, put a mention
in the &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/67a79caacd851120fee2bca4704938a2f27e1bba"&gt;README&lt;/a&gt;.&lt;/p&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="ada-mode" label="ada-mode"/>
    <category term="ada-modeel" label="ada-mode.el"/>
    <category term="emacs" label="emacs"/>
  </entry>
  <entry>
    <title>Splitting Strings on a Delimiter in the Ada Programming Language</title>
    <id>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</id>
    <updated>2022-08-05T11:10:39-04:00</updated>
    <published>2022-08-05T11:10:39-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 13:30:34 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I did a search for “splitting strings on a delimiter in the Ada
programming language” recently I did not get many useful results.
Eventually I stumbled over &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-String_005fSplit-g-strspl-ads.html#GNAT-String_005fSplit-g-strspl-ads"&gt;GNAT.String_Split&lt;/a&gt; which is an
instantiation of the generic package &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-Array_005fSplit-g-arrspl-ads.html#GNAT-Array_005fSplit-g-arrspl-ads"&gt;GNAT.Array_Split&lt;/a&gt;.  I also
finally &lt;a class="reference external" href="https://blog.adacore.com/new-strings-package-in-gnatcoll"&gt;found&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings_impl.ads"&gt;GNATCOLL.Strings_Impl&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings.ads"&gt;GNATCOLL.Strings&lt;/a&gt;, its
default instantiation, which looks especially interesting, contains
a split implementation, and which seems to be designed to be a more
efficient string implementation than  than &lt;code class="docutils literal"&gt;Ada.Strings.Unbounded&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, those are all a little complicated, so it might be
appropriate to show a simpler implementation.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;String&lt;/code&gt; type in Ada is a array of characters.  Once
declared, a &lt;code class="docutils literal"&gt;String&lt;/code&gt; variable always has the same length.  That
means that all the strings in an array of strings have to be the same
length.  However, an &lt;code class="docutils literal"&gt;access&lt;/code&gt; (Ada's version of a
pointer) to a &lt;code class="docutils literal"&gt;String&lt;/code&gt; can point to a string of any length, so for
this version we'll return an array of pointers to &lt;code class="docutils literal"&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;String&lt;/code&gt; are defined in &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-3.html"&gt;Ada.Strings.Fixed&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-1" name="rest_code_cf34e715ae4649578cd126997566127b-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-2" name="rest_code_cf34e715ae4649578cd126997566127b-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-3" name="rest_code_cf34e715ae4649578cd126997566127b-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-4" name="rest_code_cf34e715ae4649578cd126997566127b-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-5" name="rest_code_cf34e715ae4649578cd126997566127b-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-6" name="rest_code_cf34e715ae4649578cd126997566127b-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-6"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Ada.Text_IO contains a type, Count, that would conflict with&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-7" name="rest_code_cf34e715ae4649578cd126997566127b-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-7"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- the function Ada.Strings.Fixed.Count, so don't "use Ada.Text_IO;"&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-8" name="rest_code_cf34e715ae4649578cd126997566127b-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-8"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- instead, make a package the gives it a shorter name, and use all its&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-9" name="rest_code_cf34e715ae4649578cd126997566127b-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-9"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- procedures with that as the prefix.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-10" name="rest_code_cf34e715ae4649578cd126997566127b-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;ATIO&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="nc"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-11" name="rest_code_cf34e715ae4649578cd126997566127b-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;String_Ptr&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-12" name="rest_code_cf34e715ae4649578cd126997566127b-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-13" name="rest_code_cf34e715ae4649578cd126997566127b-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-14" name="rest_code_cf34e715ae4649578cd126997566127b-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-14"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Allocate a new String in a storage pool, initializing it to S, and&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-15" name="rest_code_cf34e715ae4649578cd126997566127b-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-15"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- returning an access to it (a pointer).&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-16" name="rest_code_cf34e715ae4649578cd126997566127b-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-16"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;  &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-17" name="rest_code_cf34e715ae4649578cd126997566127b-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;'(&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-18" name="rest_code_cf34e715ae4649578cd126997566127b-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-18"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-19" name="rest_code_cf34e715ae4649578cd126997566127b-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-19"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-20" name="rest_code_cf34e715ae4649578cd126997566127b-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-20"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-21" name="rest_code_cf34e715ae4649578cd126997566127b-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-22" name="rest_code_cf34e715ae4649578cd126997566127b-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-22"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-23" name="rest_code_cf34e715ae4649578cd126997566127b-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-23"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-24" name="rest_code_cf34e715ae4649578cd126997566127b-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-24"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-25" name="rest_code_cf34e715ae4649578cd126997566127b-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-25"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-26" name="rest_code_cf34e715ae4649578cd126997566127b-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-27" name="rest_code_cf34e715ae4649578cd126997566127b-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-28" name="rest_code_cf34e715ae4649578cd126997566127b-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-28"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-29" name="rest_code_cf34e715ae4649578cd126997566127b-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-30" name="rest_code_cf34e715ae4649578cd126997566127b-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-30"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-31" name="rest_code_cf34e715ae4649578cd126997566127b-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-31"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-32" name="rest_code_cf34e715ae4649578cd126997566127b-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-32"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-33" name="rest_code_cf34e715ae4649578cd126997566127b-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-33"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-34" name="rest_code_cf34e715ae4649578cd126997566127b-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-34"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-35" name="rest_code_cf34e715ae4649578cd126997566127b-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-35"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-36" name="rest_code_cf34e715ae4649578cd126997566127b-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-36"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-37" name="rest_code_cf34e715ae4649578cd126997566127b-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-38" name="rest_code_cf34e715ae4649578cd126997566127b-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-39" name="rest_code_cf34e715ae4649578cd126997566127b-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-39"&gt;&lt;/a&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-40" name="rest_code_cf34e715ae4649578cd126997566127b-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-41" name="rest_code_cf34e715ae4649578cd126997566127b-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-41"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-42" name="rest_code_cf34e715ae4649578cd126997566127b-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-42"&gt;&lt;/a&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-43" name="rest_code_cf34e715ae4649578cd126997566127b-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-43"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-44" name="rest_code_cf34e715ae4649578cd126997566127b-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-44"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-45" name="rest_code_cf34e715ae4649578cd126997566127b-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-46" name="rest_code_cf34e715ae4649578cd126997566127b-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-46"&gt;&lt;/a&gt;      &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-47" name="rest_code_cf34e715ae4649578cd126997566127b-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-47"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-48" name="rest_code_cf34e715ae4649578cd126997566127b-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-48"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-49" name="rest_code_cf34e715ae4649578cd126997566127b-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-49"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-50" name="rest_code_cf34e715ae4649578cd126997566127b-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-50"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-51" name="rest_code_cf34e715ae4649578cd126997566127b-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-51"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-52" name="rest_code_cf34e715ae4649578cd126997566127b-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-52"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-53" name="rest_code_cf34e715ae4649578cd126997566127b-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-53"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-54" name="rest_code_cf34e715ae4649578cd126997566127b-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-55" name="rest_code_cf34e715ae4649578cd126997566127b-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-56" name="rest_code_cf34e715ae4649578cd126997566127b-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-57" name="rest_code_cf34e715ae4649578cd126997566127b-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-58" name="rest_code_cf34e715ae4649578cd126997566127b-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-59" name="rest_code_cf34e715ae4649578cd126997566127b-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-60" name="rest_code_cf34e715ae4649578cd126997566127b-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-61" name="rest_code_cf34e715ae4649578cd126997566127b-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-61"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-62" name="rest_code_cf34e715ae4649578cd126997566127b-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-63" name="rest_code_cf34e715ae4649578cd126997566127b-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                 &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-64" name="rest_code_cf34e715ae4649578cd126997566127b-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-65" name="rest_code_cf34e715ae4649578cd126997566127b-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-65"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-66" name="rest_code_cf34e715ae4649578cd126997566127b-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-67" name="rest_code_cf34e715ae4649578cd126997566127b-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-68" name="rest_code_cf34e715ae4649578cd126997566127b-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-68"&gt;&lt;/a&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-69" name="rest_code_cf34e715ae4649578cd126997566127b-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-70" name="rest_code_cf34e715ae4649578cd126997566127b-70" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-70"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-71" name="rest_code_cf34e715ae4649578cd126997566127b-71" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-71"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-72" name="rest_code_cf34e715ae4649578cd126997566127b-72" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-72"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-73" name="rest_code_cf34e715ae4649578cd126997566127b-73" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-73"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-74" name="rest_code_cf34e715ae4649578cd126997566127b-74" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-74"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-75" name="rest_code_cf34e715ae4649578cd126997566127b-75" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-75"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_cf34e715ae4649578cd126997566127b-76" name="rest_code_cf34e715ae4649578cd126997566127b-76" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_cf34e715ae4649578cd126997566127b-76"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; type in Ada has a maximum capacity and a
current length.  You instantiate a new package for each different
maximum capacity that you want, producing a different type for each.
You can assign any string smaller than or equal to the maximum length,
and the current length is recorded.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-4.html"&gt;Ada.Strings.Bounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-1" name="rest_code_19dbc17845734330801e065f4c2de944-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-2" name="rest_code_19dbc17845734330801e065f4c2de944-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-3" name="rest_code_19dbc17845734330801e065f4c2de944-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Bounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-4" name="rest_code_19dbc17845734330801e065f4c2de944-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-5" name="rest_code_19dbc17845734330801e065f4c2de944-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-6" name="rest_code_19dbc17845734330801e065f4c2de944-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-7" name="rest_code_19dbc17845734330801e065f4c2de944-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-8" name="rest_code_19dbc17845734330801e065f4c2de944-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Strings.Bounded.Generic_Bounded_Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Max&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 128&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-9" name="rest_code_19dbc17845734330801e065f4c2de944-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-10" name="rest_code_19dbc17845734330801e065f4c2de944-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String_IO&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt; &lt;span class="nc"&gt;Bounded_IO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;B_String&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-11" name="rest_code_19dbc17845734330801e065f4c2de944-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-12" name="rest_code_19dbc17845734330801e065f4c2de944-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-13" name="rest_code_19dbc17845734330801e065f4c2de944-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-14" name="rest_code_19dbc17845734330801e065f4c2de944-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-14"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-15" name="rest_code_19dbc17845734330801e065f4c2de944-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-15"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-16" name="rest_code_19dbc17845734330801e065f4c2de944-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-16"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-17" name="rest_code_19dbc17845734330801e065f4c2de944-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-18" name="rest_code_19dbc17845734330801e065f4c2de944-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-19" name="rest_code_19dbc17845734330801e065f4c2de944-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-20" name="rest_code_19dbc17845734330801e065f4c2de944-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-21" name="rest_code_19dbc17845734330801e065f4c2de944-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-22" name="rest_code_19dbc17845734330801e065f4c2de944-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-23" name="rest_code_19dbc17845734330801e065f4c2de944-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-24" name="rest_code_19dbc17845734330801e065f4c2de944-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-25" name="rest_code_19dbc17845734330801e065f4c2de944-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-26" name="rest_code_19dbc17845734330801e065f4c2de944-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-26"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-27" name="rest_code_19dbc17845734330801e065f4c2de944-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-27"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-28" name="rest_code_19dbc17845734330801e065f4c2de944-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-28"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-29" name="rest_code_19dbc17845734330801e065f4c2de944-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-30" name="rest_code_19dbc17845734330801e065f4c2de944-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-31" name="rest_code_19dbc17845734330801e065f4c2de944-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-31"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-32" name="rest_code_19dbc17845734330801e065f4c2de944-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-33" name="rest_code_19dbc17845734330801e065f4c2de944-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-33"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-34" name="rest_code_19dbc17845734330801e065f4c2de944-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-34"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-35" name="rest_code_19dbc17845734330801e065f4c2de944-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-36" name="rest_code_19dbc17845734330801e065f4c2de944-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-36"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-37" name="rest_code_19dbc17845734330801e065f4c2de944-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-38" name="rest_code_19dbc17845734330801e065f4c2de944-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-38"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-39" name="rest_code_19dbc17845734330801e065f4c2de944-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-39"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-40" name="rest_code_19dbc17845734330801e065f4c2de944-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-41" name="rest_code_19dbc17845734330801e065f4c2de944-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-41"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-42" name="rest_code_19dbc17845734330801e065f4c2de944-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-43" name="rest_code_19dbc17845734330801e065f4c2de944-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-44" name="rest_code_19dbc17845734330801e065f4c2de944-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-44"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-45" name="rest_code_19dbc17845734330801e065f4c2de944-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-46" name="rest_code_19dbc17845734330801e065f4c2de944-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-47" name="rest_code_19dbc17845734330801e065f4c2de944-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-47"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-48" name="rest_code_19dbc17845734330801e065f4c2de944-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-49" name="rest_code_19dbc17845734330801e065f4c2de944-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-50" name="rest_code_19dbc17845734330801e065f4c2de944-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-51" name="rest_code_19dbc17845734330801e065f4c2de944-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-52" name="rest_code_19dbc17845734330801e065f4c2de944-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-53" name="rest_code_19dbc17845734330801e065f4c2de944-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-54" name="rest_code_19dbc17845734330801e065f4c2de944-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-55" name="rest_code_19dbc17845734330801e065f4c2de944-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-56" name="rest_code_19dbc17845734330801e065f4c2de944-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-57" name="rest_code_19dbc17845734330801e065f4c2de944-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-57"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-58" name="rest_code_19dbc17845734330801e065f4c2de944-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-59" name="rest_code_19dbc17845734330801e065f4c2de944-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-60" name="rest_code_19dbc17845734330801e065f4c2de944-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-61" name="rest_code_19dbc17845734330801e065f4c2de944-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-61"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-62" name="rest_code_19dbc17845734330801e065f4c2de944-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-63" name="rest_code_19dbc17845734330801e065f4c2de944-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-64" name="rest_code_19dbc17845734330801e065f4c2de944-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-65" name="rest_code_19dbc17845734330801e065f4c2de944-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-66" name="rest_code_19dbc17845734330801e065f4c2de944-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-67" name="rest_code_19dbc17845734330801e065f4c2de944-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_19dbc17845734330801e065f4c2de944-68" name="rest_code_19dbc17845734330801e065f4c2de944-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_19dbc17845734330801e065f4c2de944-68"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; type in Ada grows dynamically as needed,
but is not as time efficient as fixed strings or bounded strings.
For this version, we'll use &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-18-2.html"&gt;Ada.Containers.Vectors&lt;/a&gt; for a
dynamically expending vector, rather than a fixed size vector.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-5.html"&gt;Ada.Strings.Unbounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-1" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-2" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-3" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_Io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-4" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-5" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Containers.Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-6" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-7" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;Unbounded_String_Vectors&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-8" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Containers.Vectors&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;Natural&lt;span class="p"&gt;,&lt;/span&gt; Unbounded_String&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-9" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-10" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-11" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-12" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-12"&gt;&lt;/a&gt;                &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="n"&gt;To_Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-13" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-13"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;subtype&lt;/span&gt; &lt;span class="kt"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-14" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-15" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-15"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-16" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-16"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-17" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-18" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-19" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-20" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-21" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-22" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-23" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-24" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-25" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-26" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-26"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-27" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-27"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-28" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-28"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-29" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-29"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-30" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-31" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-32" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-32"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-33" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-33"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-34" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-35" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-35"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-36" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-36"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-37" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-37"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-38" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-39" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-39"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-40" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-40"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-41" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-41"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;First_Index&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Last_Index&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-42" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-43" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-44" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-44"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-45" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-45"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-46" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-46"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-47" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-48" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-49" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-50" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-51" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-52" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-53" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-54" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-55" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-56" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-57" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-58" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-58"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-59" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-60" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-61" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-62" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-62"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-63" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-64" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-65" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-66" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-67" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-68" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-68"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_43c52450cfb94e9bb401ebcc4216e711-69" name="rest_code_43c52450cfb94e9bb401ebcc4216e711-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_43c52450cfb94e9bb401ebcc4216e711-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="programming" label="programming"/>
    <category term="splitting-strings" label="splitting strings"/>
    <category term="splitting-strings-in-ada" label="splitting strings in ada"/>
  </entry>
  <entry>
    <title>Using the old version of Ada Mode for Emacs</title>
    <id>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</id>
    <updated>2022-07-09T22:20:40-04:00</updated>
    <published>2022-07-09T22:20:40-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 14:33:55 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of things to like about the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language;
it seems to have a solid core of users, enough to support multiple
commercial implementations and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Free_software"&gt;free/libre software&lt;/a&gt; implementation
that is part of the &lt;a class="reference external" href="https://gcc.gnu.org/"&gt;GNU Compiler Collection&lt;/a&gt;.  I occasionally use it
myself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However:&lt;/strong&gt; I'm sure that the current version of &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; for
&lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; (available as an &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;ELPA&lt;/a&gt; &lt;a class="reference external" href="https://elpa.gnu.org/packages/ada-mode.html"&gt;package&lt;/a&gt;, and thus not included in
&lt;span class="app"&gt;Emacs&lt;/span&gt; itself), which provides smart editing for the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;
programming language, and uses an external parser for the indentation,
fontification&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#fontification" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, and navigation engine, is wonderful
if you can get it working, but I have &lt;strong&gt;never&lt;/strong&gt; been able to get it to
work.  My most recent try was today on Fedora 36 using GNAT 12.1.1
20220507 (Red Hat 12.1.1-1).&lt;/p&gt;
&lt;p&gt;Here's what happened when I tried to build the Ada code for the
parser, which is supplied as part of the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-mode&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ ./build.sh
ada_mode_wisi_parse.gpr:44:26: warning: object directory "obj" not found
Setup
   [mkdir]        object directory for project Ada_Mode_Wisi_Parse
Compile
   [Ada]          ada_mode_wisi_lalr_parse.ads
   [Ada]          ada_mode_wisi_lr1_parse.ads
   [Ada]          run_ada_lalr_parse.ads
   [Ada]          run_ada_lr1_parse.ads
   [Ada]          gpr_mode_wisi_parse.ads
   [Ada]          run_gpr_parse.ads
   [Ada]          gpr_query.adb
   [C]            wisitoken_grammar_re2c.c
   [C]            ada_re2c.c
   [C]            gpr_re2c.c
   [Ada]          ada_process_actions.adb
   [Ada]          ada_process_lr1_main.adb
   [Ada]          gen_run_wisi_lr_text_rep_parse.adb
   [Ada]          run_wisi_common_parse.adb
   [Ada]          wisi.adb
gnatcoll-sql.adb:742:07: error: ambiguous expression (cannot resolve "Append")
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:280, instance at gnatcoll-sql.ads:1109
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:270, instance at gnatcoll-sql.ads:1109

   compilation of gpr_query.adb failed

gprbuild: *** compilation phase failed&lt;/pre&gt;
&lt;p&gt;Sigh.  Without the external parser the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; is
completely unworkable: it doesn't even do indentation correctly, much
less do fontification.&lt;/p&gt;
&lt;p&gt;However, when I did some Ada work a number of years ago, I was ok
with the version that used to be in &lt;span class="app"&gt;Emacs&lt;/span&gt; itself.  So I dug it
out of the &lt;a class="reference external" href="https://savannah.gnu.org/git/?group=emacs"&gt;Emacs git repository&lt;/a&gt; at &lt;a class="reference external" href="https://savannah.gnu.org"&gt;savannah.gnu.org&lt;/a&gt;.  Basically,
I cloned the git repository and then figured out what commit it was
deleted in by doing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git rev-list HEAD -n 1 -- lisp/progmodes/ada-mode.el
a13c64204c8ead966789abf8efe176e4f2d4f599&lt;/pre&gt;
&lt;p&gt;Then I checked out the files involved:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git checkout a13c64204c8ead966789abf8efe176e4f2d4f599^ lisp/progmodes/ada-mode.el lisp/progmodes/ada-prj.el lisp/progmodes/ada-stmt.el lisp/progmodes/ada-xref.el doc/misc/ada-mode.texi&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;^&lt;/code&gt; at the end of the commit hash says to get the previous
commit.&lt;/p&gt;
&lt;p&gt;You'll also need &lt;span class="file"&gt;doc/docstyle.texi&lt;/span&gt; and
&lt;span class="file"&gt;doc/doclicense.texi&lt;/span&gt; if you want to build documentation from
&lt;span class="file"&gt;ada-mode.texi&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And I've put the files in a &lt;a class="reference external" href="https://tkurtbond.github.io/emacs/old-ada-mode.zip"&gt;zip file&lt;/a&gt; for anybody who is in the same
situation as I was, along with the generated documentation files
&lt;span class="file"&gt;.info&lt;/span&gt;, &lt;span class="file"&gt;.html&lt;/span&gt;, and &lt;span class="file"&gt;.pdf&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Just put them somewhere on your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;load-path&lt;/span&gt;&lt;/code&gt; and add &lt;code class="docutils literal"&gt;(autoload
&lt;span class="pre"&gt;'ada-mode&lt;/span&gt; &lt;span class="pre"&gt;"ada-mode")&lt;/span&gt;&lt;/code&gt; to your emacs config file.&lt;/p&gt;
&lt;p&gt;I'm sure the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; has a lot more useful features, and
I'd love to use it, but
this at least lets me edit with automatic indentation, formatting, and
fontification.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="fontification" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;‘Fontification’ is the process of displaying source code with
different font properties (such as color and typeface) for
differing syntactic roles.  &lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; and many other editors do this
to make it easier to distinguish different parts of the source
code, to help prevent errors.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!--  --&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="ada-mode" label="ada-mode"/>
    <category term="ada-modeel" label="ada-mode.el"/>
    <category term="emacs" label="emacs"/>
    <category term="freelibre-software" label="free/libre software"/>
  </entry>
</feed>
