<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about unix)</title>
  <id>https://tkurtbond.github.io/categories/cat_computer/unix.atom</id>
  <updated>2022-07-10T22:45:46Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/cat_computer/unix.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/cat_computer/unix/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Installing a recent version of the A2 operatinng system on UNIX</title>
    <id>https://tkurtbond.github.io/posts/2022/06/10/installing-a-recent-version-of-the-a2-operatinng-system-on-unix/</id>
    <updated>2022-06-10T11:28:40-04:00</updated>
    <published>2022-06-10T11:28:40-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/06/10/installing-a-recent-version-of-the-a2-operatinng-system-on-unix/"/>
    <summary type="html">&lt;p&gt;I recently ran across a &lt;a class="reference external" href="https://svn.inf.ethz.ch/svn/lecturers/a2/trunk/UnixAos/DarwinA2%20Installer/ReadMeFirst!.txt"&gt;document&lt;/a&gt; that explains how to install the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/A2_(operating_system)"&gt;A2&lt;/a&gt;
operating system (formerly Bluebottle, formerly Aos) in the form of
UnixAos hosted on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/MacOS"&gt;macOS&lt;/a&gt;, in the process of explaining how to make a
installer for macOS.  I think the same process will work for any
supported Unix.  [&lt;strong&gt;Later:&lt;/strong&gt; indeed, I used the &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/LinuxA2-64bit.tgz"&gt;LinuxA2-64bit.tgz&lt;/a&gt; file
and the same process worked fine on my &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Fedora_Linux"&gt;Fedora&lt;/a&gt; box.]&lt;/p&gt;
&lt;p&gt;I'll summarize what I did.&lt;/p&gt;
&lt;p&gt;I went to &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/"&gt;http://www.informatik.uni-bremen.de/~fld/UnixAos/&lt;/a&gt; and
selected the most recent revision, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/"&gt;rev.9799&lt;/a&gt; at the time of this
writing.  There I downloaded the install script, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/install.UnixA2"&gt;install.UnixA2&lt;/a&gt; and
the version for 64 bit macOS, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/DarwinA2-64bit.tgz"&gt;DarwinA2-64bit.tgz&lt;/a&gt;.  (There were also
Linux and Solaris versions for 32 and 64 bit systems.)&lt;/p&gt;
&lt;p&gt;Then I executed &lt;code class="docutils literal"&gt;chmod +x&lt;/code&gt;'ed the install script and ran it, passing
the &lt;span class="file"&gt;.tgz&lt;/span&gt; file to it.&lt;/p&gt;
&lt;p&gt;First, it asks for the installation directory, which should already
exist.  It has a default, but I installed to the directory
&lt;span class="file"&gt;/usr/local/sw/versions/aos/rev.9799&lt;/span&gt;.  Again, I had to create
that directory first.  (I don't like to write into &lt;span class="file"&gt;/usr&lt;/span&gt; or
&lt;span class="file"&gt;/usr/local&lt;/span&gt;, because those directory hierarchies are often
under the systems control.  Nobody uses &lt;span class="file"&gt;/usr/local/sw&lt;/span&gt; for
anything except me.)&lt;/p&gt;
&lt;p&gt;Second, it asks for the file name to copy the &lt;span class="file"&gt;aos&lt;/span&gt; script to.
I installed the &lt;span class="command"&gt;aos&lt;/span&gt; command to
&lt;span class="file"&gt;/Users/tkb/local/rndbin&lt;/span&gt;, (&lt;span class="file"&gt;/home/tkb/local/rndbin&lt;/span&gt; on
non-macOS systems) which is in my path.&lt;/p&gt;
&lt;p&gt;The install script assumes you are running as root, but I ran it first
as my normal user, and since the directory I was installing it to was
owned by me it seems to have worked ok, even though it complained
about &lt;span class="command"&gt;chgrp&lt;/span&gt; not being able to change the group of a &lt;em&gt;bunch&lt;/em&gt;
of files.&lt;/p&gt;
&lt;p&gt;Then when I issued the command &lt;code class="docutils literal"&gt;aos&lt;/code&gt; it started up and displayed a
window with A2 running in it.  (This requires X Windows, so you'll need
to install &lt;a class="reference external" href="https://www.xquartz.org/"&gt;XQuartz&lt;/a&gt; on macOS.)&lt;/p&gt;
&lt;p&gt;Here's a screen shot from macOS:&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Screenshot of A2 running under macOS" src="https://tkurtbond.github.io/a2-screenshot.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Screenshot of A2 running under macOS&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It seems to work ok, both on macOS and Fedora, though I haven't
investigated very much.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2022-06-12 15:39:49 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="a2" label="a2"/>
    <category term="aos" label="aos"/>
    <category term="bluebottle" label="bluebottle"/>
    <category term="fedora" label="fedora"/>
    <category term="macos" label="macos"/>
    <category term="oberon" label="oberon"/>
    <category term="unix" label="unix"/>
  </entry>
  <entry>
    <title>Logging the output of long commands run multiple times</title>
    <id>https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/</id>
    <updated>2021-07-07T12:47:25-04:00</updated>
    <published>2021-07-07T12:47:25-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/"/>
    <summary type="html">&lt;p&gt;I often run commands that produce a lot of output that needs to saved
for debugging, and often the commands have to be repeated multiple
times to get things to work.  For example, building software from
source, often using the familiar &lt;code class="docutils literal"&gt;./configure; make; make install&lt;/code&gt;
paradigm.&lt;/p&gt;
&lt;p&gt;So, the first thing is to try is to use the venerable &lt;span class="command"&gt;tee&lt;/span&gt; command.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_84af93dc118d4c5a92f018bbf26cf435-1" name="rest_code_84af93dc118d4c5a92f018bbf26cf435-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_84af93dc118d4c5a92f018bbf26cf435-1"&gt;&lt;/a&gt;./configure &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee Log.configure
&lt;a id="rest_code_84af93dc118d4c5a92f018bbf26cf435-2" name="rest_code_84af93dc118d4c5a92f018bbf26cf435-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_84af93dc118d4c5a92f018bbf26cf435-2"&gt;&lt;/a&gt;make &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee Log.make
&lt;a id="rest_code_84af93dc118d4c5a92f018bbf26cf435-3" name="rest_code_84af93dc118d4c5a92f018bbf26cf435-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_84af93dc118d4c5a92f018bbf26cf435-3"&gt;&lt;/a&gt;make install &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee Log.make-install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make the log files easy to find I use a &lt;span class="file"&gt;Log.&lt;/span&gt; prefix.&lt;/p&gt;
&lt;p&gt;But I often need to run the commands multiple times, and want to save
each run under a new filename, so if the filename already exists I
want to add a number to the end and then increment the number until I
find one that hasn't been used.  And I'd like the filename to have the
date in YYYY-MM-DD format, so the resulting names look like
&lt;span class="file"&gt;Log.make-install-2021-07-07_2&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So I wrote a bash function &lt;span class="command"&gt;incf&lt;/span&gt; (increment filename) to put in
&lt;span class="file"&gt;.bashrc&lt;/span&gt; that generates such a name:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-1" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-1"&gt;&lt;/a&gt;incf &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-2" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Construct a filename from PREFIX, "_YYYY-MM-DD",  optionally _N (where N&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-3" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# is 1 or greater) if the filename already exists, and optionally SUFFIX.&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-4" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Example: "incf file .tar.gz" results in "file_2021-07-07.tar.gz", or&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-5" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-5"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# "file_2021-07-07_N.tar.gz" if "file_2021-07-07.tar.gz" already exists,&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-6" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# where N is 1 or greater.&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-7" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-7"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; prefix suffix fileprefix i testname sep1 sep2
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-8" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-8" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-8"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-9" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-9" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-9"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-10" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-10" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-10"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;sep1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"_"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-11" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-11" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-11"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;sep2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"_"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-12" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-12" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-12"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;fileprefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;sep1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%F&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-13" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-13" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-13"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-14" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-14" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-14"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# The zeroth filename doesn't have the number.&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-15" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-15" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-15"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;testname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;fileprefix&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-16" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-16" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-17" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-17" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;do&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-18" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-18" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-18"&gt;&lt;/a&gt;      &lt;span class="o"&gt;[&lt;/span&gt; ! -e &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$testname&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;break&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-19" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-19" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-19"&gt;&lt;/a&gt;      &lt;span class="o"&gt;((&lt;/span&gt;i++&lt;span class="o"&gt;))&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-20" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-20" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-20"&gt;&lt;/a&gt;      &lt;span class="nv"&gt;testname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;fileprefix&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;sep2&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;suffix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-21" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-21" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-22" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-22" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-22"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$testname&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-23" name="rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-23" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_effd1a8bb6114b47bac21f8bde5b0a3e-23"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then I wrote a bash function that uses &lt;span class="command"&gt;incf&lt;/span&gt; to generate
the &lt;span class="file"&gt;Log.&lt;/span&gt; filename, potentially in a different directory:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-1" name="rest_code_c8418add62f6492b97318d07e343d55c-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-1"&gt;&lt;/a&gt;logf &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-2" name="rest_code_c8418add62f6492b97318d07e343d55c-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Construct a filename, possibly in another directory, that starts with&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-3" name="rest_code_c8418add62f6492b97318d07e343d55c-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# "Log." and ends with "YYYY-MM-DD" and optionally "_N", where N is 1 or&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-4" name="rest_code_c8418add62f6492b97318d07e343d55c-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# greater, if the filename already exists.&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-5" name="rest_code_c8418add62f6492b97318d07e343d55c-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; dn bn fn
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-6" name="rest_code_c8418add62f6492b97318d07e343d55c-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-6"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;dn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-7" name="rest_code_c8418add62f6492b97318d07e343d55c-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-7"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;bn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Log.&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-8" name="rest_code_c8418add62f6492b97318d07e343d55c-8" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-8"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;fn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;incf &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$dn&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$bn&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-9" name="rest_code_c8418add62f6492b97318d07e343d55c-9" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-9"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$fn&lt;/span&gt;
&lt;a id="rest_code_c8418add62f6492b97318d07e343d55c-10" name="rest_code_c8418add62f6492b97318d07e343d55c-10" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_c8418add62f6492b97318d07e343d55c-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then I wrote a &lt;span class="command"&gt;log&lt;/span&gt; command that uses &lt;span class="command"&gt;logf&lt;/span&gt;
and tees its input into that file:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_8ccf119a97574d82a00e10e912d2dafc-1" name="rest_code_8ccf119a97574d82a00e10e912d2dafc-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_8ccf119a97574d82a00e10e912d2dafc-1"&gt;&lt;/a&gt;log &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_8ccf119a97574d82a00e10e912d2dafc-2" name="rest_code_8ccf119a97574d82a00e10e912d2dafc-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_8ccf119a97574d82a00e10e912d2dafc-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# tee the input into a log file.&lt;/span&gt;
&lt;a id="rest_code_8ccf119a97574d82a00e10e912d2dafc-3" name="rest_code_8ccf119a97574d82a00e10e912d2dafc-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_8ccf119a97574d82a00e10e912d2dafc-3"&gt;&lt;/a&gt;    tee &lt;span class="k"&gt;$(&lt;/span&gt;logf &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;a id="rest_code_8ccf119a97574d82a00e10e912d2dafc-4" name="rest_code_8ccf119a97574d82a00e10e912d2dafc-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_8ccf119a97574d82a00e10e912d2dafc-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So running &lt;code class="docutils literal"&gt;./configure &lt;span class="pre"&gt;2&amp;gt;&amp;amp;1&lt;/span&gt; | log ~/tmp/configure&lt;/code&gt; generates a file
&lt;span class="file"&gt;Log.configure_2021-07-07&lt;/span&gt; in the &lt;span class="file"&gt;~/tmp&lt;/span&gt; directory.&lt;/p&gt;
&lt;p&gt;But what if I specify a lot of options to the command, and would like
record if it in the log file, so if I get interrupted and then come
back some time later I can use the same command?&lt;/p&gt;
&lt;p&gt;First I wrote a base function, &lt;span class="command"&gt;cleanname&lt;/span&gt;, that takes a string and
converts it to something that should be safe to use as a filename.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-1" name="rest_code_42d9581801ac430f819be0ad73e85a1c-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-1"&gt;&lt;/a&gt;cleanname &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-2" name="rest_code_42d9581801ac430f819be0ad73e85a1c-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Clean up a string so it is (relatively) safe to use as a filename.&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-3" name="rest_code_42d9581801ac430f819be0ad73e85a1c-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-3"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; name
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-4" name="rest_code_42d9581801ac430f819be0ad73e85a1c-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-4"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$cmd&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;'s/[ =";?*&amp;amp;^%$#@!~`|()&amp;lt;&amp;gt;]/-/g'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-5" name="rest_code_42d9581801ac430f819be0ad73e85a1c-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-5"&gt;&lt;/a&gt;               sed &lt;span class="s2"&gt;"s#[/']#-#g"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -E &lt;span class="s1"&gt;'s/--+/-/g'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-6" name="rest_code_42d9581801ac430f819be0ad73e85a1c-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-6"&gt;&lt;/a&gt;               sed -E &lt;span class="s1"&gt;'s/(^[-.]+|-+$)//g'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-7" name="rest_code_42d9581801ac430f819be0ad73e85a1c-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-7"&gt;&lt;/a&gt;               sed -E &lt;span class="s1"&gt;'s/\.\.\.*/./g'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-8" name="rest_code_42d9581801ac430f819be0ad73e85a1c-8" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_42d9581801ac430f819be0ad73e85a1c-9" name="rest_code_42d9581801ac430f819be0ad73e85a1c-9" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_42d9581801ac430f819be0ad73e85a1c-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I wrote a bash function, &lt;span class="command"&gt;exlog&lt;/span&gt;, to use the whole
command with its options as part of the filename (constructed with
&lt;span class="command"&gt;cleanname&lt;/span&gt;, and also include the whole command in the log output:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-1" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-1"&gt;&lt;/a&gt;exlog &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-2" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-2" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Execute a shell command and log it to "Log.&amp;lt;cmd-as-safe-filename&amp;gt;"&lt;/span&gt;
&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-3" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-3" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-3"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cleanname &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-4" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-4" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-4"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;logf &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-5" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-5" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'Logging to %s\n'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-6" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-6" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"cmd was: &lt;/span&gt;&lt;span class="nv"&gt;$cmd&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee &lt;span class="nv"&gt;$name&lt;/span&gt;
&lt;a id="rest_code_44a76e8f2aca4c04affdcd40d377d809-7" name="rest_code_44a76e8f2aca4c04affdcd40d377d809-7" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_44a76e8f2aca4c04affdcd40d377d809-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So running the command&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_282dd1105b9f41869499b9d703a2acfd-1" name="rest_code_282dd1105b9f41869499b9d703a2acfd-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_282dd1105b9f41869499b9d703a2acfd-1"&gt;&lt;/a&gt;exlog ../configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/Users/tkb/sw/versions/groff/git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;produces the file&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_3b26b643dd6f42abae1b4aad32def2bd-1" name="rest_code_3b26b643dd6f42abae1b4aad32def2bd-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_3b26b643dd6f42abae1b4aad32def2bd-1"&gt;&lt;/a&gt;Log.configure-prefix-Users-tkb-sw-versions-groff-git_2021-07-07
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and it contains the line&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_f47bbe52b1634dfc969d45da77307d26-1" name="rest_code_f47bbe52b1634dfc969d45da77307d26-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_f47bbe52b1634dfc969d45da77307d26-1"&gt;&lt;/a&gt;cmd was: ../configure --prefix=/Users/tkb/sw/versions/groff/git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and running it again produces the file&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_6d2b59b7eb9245c983b9fd0e4c5e3c9b-1" name="rest_code_6d2b59b7eb9245c983b9fd0e4c5e3c9b-1" href="https://tkurtbond.github.io/posts/2021/07/07/logging-the-output-of-long-commands-run-multiple-times/#rest_code_6d2b59b7eb9245c983b9fd0e4c5e3c9b-1"&gt;&lt;/a&gt;Log.configure-prefix-Users-tkb-sw-versions-groff-git_2021-07-07_1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code is available in a &lt;a class="reference external" href="https://gist.github.com/tkurtbond/23255fede737eec89b1fd0e011566cb1"&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2021-07-09 15:30:53 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%04y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="bash" label="bash"/>
    <category term="logging" label="logging"/>
    <category term="unix" label="unix"/>
  </entry>
</feed>
