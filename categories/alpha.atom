<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about alpha)</title>
  <id>https://tkurtbond.github.io/categories/alpha.atom</id>
  <updated>2023-02-06T15:22:23Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/alpha.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/alpha/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Redimensioning formal parameter arrays in OpenVMS BASIC, Revisited</title>
    <id>https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/</id>
    <updated>2022-02-05T16:08:22-05:00</updated>
    <published>2022-02-05T16:08:22-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/"/>
    <summary type="html">&lt;p&gt;I was working on a program on a VAX today, and needed to redimension
dynamically allocated arrays that are passed to an external function.
I've done this in the past (an &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt;, and the &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/"&gt;old blog
post&lt;/a&gt; that mentions it), but this time I managed to simplify my
solution, and generalize it to work with both lower and upper bounds,
and so the same function would work with multiple VMS BASIC data
types.  Here's the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;.  (How's that for thread
necromancy?)&lt;/p&gt;
&lt;p&gt;I'll include the code in this blog post, too, for ease of reference.
Here's &lt;span class="file"&gt;vax_redim_best.bas&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-1" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-1"&gt;&lt;/a&gt;program vax_redim_best
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-2" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-3" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-4" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-4"&gt;&lt;/a&gt;    record rec
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-5" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-5"&gt;&lt;/a&gt;        string s = 13
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-6" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-6"&gt;&lt;/a&gt;        long   i
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-7" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-7"&gt;&lt;/a&gt;    end record rec
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-8" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-9" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-9"&gt;&lt;/a&gt;    ! Don't declare the parameters, and everything works, even passing
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-10" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-10"&gt;&lt;/a&gt;    ! different types.
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-11" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-11"&gt;&lt;/a&gt;    external sub redim
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-12" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-13" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-13"&gt;&lt;/a&gt;    declare long stat, i
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-14" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-14"&gt;&lt;/a&gt;    i = 1
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-15" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-15"&gt;&lt;/a&gt;    dim rec rec(1 to i)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-16" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-16"&gt;&lt;/a&gt;    print "lbound (rec) at start: "; lbound (rec)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-17" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-17"&gt;&lt;/a&gt;    print "ubound (rec) at start: "; ubound (rec)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-18" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-18"&gt;&lt;/a&gt;    call redim (rec(), 3, 10)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-19" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-19"&gt;&lt;/a&gt;    print "lbound (rec) after redim: "; lbound (rec)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-20" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-20" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-20"&gt;&lt;/a&gt;    print "ubound (rec) after redim: "; ubound (rec)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-21" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-21" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-22" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-22" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-22"&gt;&lt;/a&gt;    dim string s(1 to i)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-23" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-23" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-23"&gt;&lt;/a&gt;    print "lbound (s) at start: "; lbound (s)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-24" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-24" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-24"&gt;&lt;/a&gt;    print "ubound (s) at start: "; ubound (s)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-25" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-25" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-25"&gt;&lt;/a&gt;    call redim (s(), 3, 10)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-26" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-26" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-26"&gt;&lt;/a&gt;    print "lbound (s) after redim: "; lbound (s)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-27" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-27" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-27"&gt;&lt;/a&gt;    print "ubound (s) after redim: "; ubound (s)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-28" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-28" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-29" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-29" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-29"&gt;&lt;/a&gt;    dim long l(1 to i)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-30" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-30" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-30"&gt;&lt;/a&gt;    print "lbound (l) at start: "; lbound (l)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-31" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-31" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-31"&gt;&lt;/a&gt;    print "ubound (l) at start: "; ubound (l)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-32" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-32" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-32"&gt;&lt;/a&gt;    call redim (l(), 3, 10)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-33" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-33" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-33"&gt;&lt;/a&gt;    print "lbound (l) after redim: "; lbound (l)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-34" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-34" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-34"&gt;&lt;/a&gt;    print "ubound (l) after redim: "; ubound (l)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-35" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-35" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-36" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-36" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-36"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-37" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-37" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-37"&gt;&lt;/a&gt;end program ! vax_redim_best
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-38" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-38" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-39" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-39" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-39"&gt;&lt;/a&gt;function long redim (long s, long low, long high)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-40" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-40" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-40"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-41" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-41" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-41"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-42" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-42" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-42"&gt;&lt;/a&gt;    external long function bas$rt_dim_bounds (long by value, long by value, long by value)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-43" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-43" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-43"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-44" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-44" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-44"&gt;&lt;/a&gt;    r = bas$rt_dim_bounds (loc (s), low, high)
&lt;a id="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-45" name="rest_code_e8e9ba8bc084464db6a0cb9257cabe97-45" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_e8e9ba8bc084464db6a0cb9257cabe97-45"&gt;&lt;/a&gt;end function r ! redim
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll just point out, which I failed to do in the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt; or
the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;, that you have to use a &lt;strong&gt;variable&lt;/strong&gt; when using
the VMS BASIC &lt;code class="docutils literal"&gt;dim&lt;/code&gt; statement or you get a fatal runtime error.  Ooops.&lt;/p&gt;
&lt;p&gt;So use:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_ccf7f02586e44025af22cb42236fbd7c-1" name="rest_code_ccf7f02586e44025af22cb42236fbd7c-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ccf7f02586e44025af22cb42236fbd7c-1"&gt;&lt;/a&gt;declare long i
&lt;a id="rest_code_ccf7f02586e44025af22cb42236fbd7c-2" name="rest_code_ccf7f02586e44025af22cb42236fbd7c-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ccf7f02586e44025af22cb42236fbd7c-2"&gt;&lt;/a&gt;i = 5
&lt;a id="rest_code_ccf7f02586e44025af22cb42236fbd7c-3" name="rest_code_ccf7f02586e44025af22cb42236fbd7c-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ccf7f02586e44025af22cb42236fbd7c-3"&gt;&lt;/a&gt;dim string s(1 to i) ! Notice that last thing is the variable, i
&lt;a id="rest_code_ccf7f02586e44025af22cb42236fbd7c-4" name="rest_code_ccf7f02586e44025af22cb42236fbd7c-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ccf7f02586e44025af22cb42236fbd7c-4"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you had said:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_ead207d7b213440b8316eacc39841d45-1" name="rest_code_ead207d7b213440b8316eacc39841d45-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ead207d7b213440b8316eacc39841d45-1"&gt;&lt;/a&gt;dim string s(1 to 5) ! Notice that last thing is a constant, 5
&lt;a id="rest_code_ead207d7b213440b8316eacc39841d45-2" name="rest_code_ead207d7b213440b8316eacc39841d45-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ead207d7b213440b8316eacc39841d45-2"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'd have gotten the following error:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-1" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-1"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-2" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-2"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-3" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-3"&gt;&lt;/a&gt;-BAS-I-FROMOD, In module Y
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-4" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-4"&gt;&lt;/a&gt;%TRACE-F-TRACEBACK, symbolic stack dump follows
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-5" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-5"&gt;&lt;/a&gt;module name     routine name                     line       rel PC    abs PC
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-6" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-7" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-7"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-8" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-8"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-9" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-9"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-10" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-10"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-11" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-11"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-12" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-12"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-13" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-13"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-14" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-14"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-15" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-15"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-16" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-16"&gt;&lt;/a&gt;                                                           0004A352  0004A352
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-17" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-17"&gt;&lt;/a&gt;                                                           00054E37  00054E37
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-18" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-18"&gt;&lt;/a&gt;ALT_REDIM       ALT_REDIM                          43      0000002E  00000AC2
&lt;a id="rest_code_93f4af6566554c23a8fbe8d6d8d78821-19" name="rest_code_93f4af6566554c23a8fbe8d6d8d78821-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_93f4af6566554c23a8fbe8d6d8d78821-19"&gt;&lt;/a&gt;Y               Y                                  24      0000015D  0000095D
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't actually submit an SPR, of course: you did it to yourself by
using an undocumented VMS BASIC internal runtime function.&lt;/p&gt;
&lt;p&gt;Oh, I don't have access to an Alpha these days, so I haven't tried it
there, but I imagine using something named &lt;code class="docutils literal"&gt;DBASIC$RT_DIM_BOUNDS&lt;/code&gt;
instead of &lt;code class="docutils literal"&gt;DBASIC$RT_DIM&lt;/code&gt; would likely work there.&lt;/p&gt;</summary>
    <category term="alpha" label="alpha"/>
    <category term="basic" label="basic"/>
    <category term="hacks" label="hacks"/>
    <category term="usenet" label="usenet"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
  </entry>
  <entry>
    <title>VMS Code from the Past</title>
    <id>https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/</id>
    <updated>2003-05-08T00:00:00-05:00</updated>
    <published>2003-05-08T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/"/>
    <summary type="html">&lt;p&gt;Listening to: Hawkwind, &lt;a class="reference external" href="http://www.freedb.org/freedb_search_fmt.php?cat=rock&amp;amp;id=d50ba50e"&gt;Chronicle of the Black Sword&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've been reading a lot of VMS BASIC &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; source code from the early
1990s &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-2" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; recently, and the one lesson it has taught me is that
refactoring source code is vital for maintainability.  Much of this
source code originated in one program that was copied and edited
whenever a new program was needed, so each new program generally ended
up with a lot of rag-tag odds-and-ends code from the original program
that was not actually needed for the functionality of the new program.
Unfortunately, when one is trying to change some existing
functionality one has to look at each and every program &lt;em&gt;and figure
out if that functionality is actually implemented and used in that
program&lt;/em&gt;, and to do this you have to mentally trace the execution of
the code! The moral? When you copy code, delete everything you don't
actually use! Refactor, refactor, refactor!&lt;/p&gt;
&lt;p&gt;And why didn't we use &lt;code class="docutils literal"&gt;%INCLUDE&lt;/code&gt; more? There are hundress of lines of
external function declarations that are used time and again in several
programs; we should have put them in a couple of include files.&lt;/p&gt;
&lt;p&gt;I really wish VMS Basic allowed &lt;a class="reference external" href="http://groups.google.com/groups?q=tkb+group:comp.os.vms&amp;amp;hl=en&amp;amp;lr=&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;selm=a3db6b24.0305081211.6f867ad0%40posting.google.com&amp;amp;rnum=1"&gt;redimensioning array formal
parameters&lt;/a&gt;, but I understand why it's not allowed.  (Perhaps
there should have been a specific descriptor for arrays that can be
redimensioned?)&lt;/p&gt;
&lt;p&gt;I was shocked to rediscover that there was no way of reliably building
the system from the source code.  MMS was too expensive for us at the
time and if &lt;a class="reference external" href="http://www.madgoat.com/mmk.html"&gt;MMK&lt;/a&gt; existed we
didn't know about it.  We used a bunch of ad-hoc DCL command
procecudures to compile whatever program we were working on (most of
them were all in one source file, and linked against one library of
utility routines) and these were never collected.  So, you couldn't
easily tell if the current set of executables was actually built from
up-to-date source.  Since I've been doing the odd bit of maintenance on
this system every six months or so I finally broke down and created
&lt;code class="docutils literal"&gt;DESCRIP.MMS&lt;/code&gt; files for use with MMK, and I'm much easier in my mind
now.&lt;/p&gt;
&lt;p&gt;There were a number of things in this system that I think were well
done, though, so it hasn't been all pain looking at it again.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;I'm working with it on an Alpha so I can't call it VAX BASIC
anymore.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="footnote-2" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;The original version of this system ran on PDP-11 running RSTS/E.
I've been involved in two major conversions of systems running on
PDP-11 RSTS/E to VAX/VMS, both using the POISE DMS-Plus on both RSTS/E and
VMS, with extensive homegrown applications written in VMS BASIC and
using the POISE SPL API.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;section id="section-1"&gt;
&lt;h2&gt;2014-11-03&lt;/h2&gt;
&lt;p&gt;Here's the text of my post to comp.os.vms:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The BASIC for OpenVMS Reference Manual says, in the fifth item of the
Remarks section:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The executable DIM statement cannot be used to dimension virtual arrays,
arrays received as formal parameters, or arrays declared in COMMON, MAP,
or nonexecutable DIM statements.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://h71000.www7.hp.com/doc/73final/cobol/bas_ref_013.htm#noisn"&gt;http://h71000.www7.hp.com/doc/73final/cobol/bas_ref_013.htm#noisn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The "no formal parameters" rule is inconvienent.  It means that you
can't pass an array to a function, redimension it, fill it with values,
and then use LBOUND and UBOUND in the caller to find out its new size.&lt;/p&gt;
&lt;p&gt;Presumably it is illegal because there is no way at compile time to
know if the function will be called with a dynamic array created with
the executable DIM statement or a static array created with a
non-executable DIM statement.&lt;/p&gt;
&lt;p&gt;However, the programmer &lt;em&gt;can&lt;/em&gt; know, so it ought to be safe to
redimension the array directly when the programmer knows it was
created by an executable DIM statement.&lt;/p&gt;
&lt;p&gt;Using Alpha BASIC V1.4-000 under OpenVMS V7.2 and looking at the
listing of some code with some executable dimension statements
compiled with /LIST/MACHINE revealed the existance of DBASIC$RT_DIM
and after a little experimentation lead to a program that used
DBASIC$RT_DIM directly to redimension dynamically dimensioned arrays
in functions, included below.&lt;/p&gt;
&lt;p&gt;DBASIC$RT_DIM is not documented for users (probably by design) and
could &lt;em&gt;theoretically&lt;/em&gt; lead to flying monkeys and access violations,
and is probably bad style.  However, are there any &lt;em&gt;practical&lt;/em&gt;
reasons why this wouldn't work safely?  Are there any
conditions under which this hack would fail to work?&lt;/p&gt;
&lt;p&gt;Here is an example program:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-1" name="rest_code_d5087956f2c14fa3b559989d86f56623-1" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-1"&gt;&lt;/a&gt;program redim
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-2" name="rest_code_d5087956f2c14fa3b559989d86f56623-2" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-3" name="rest_code_d5087956f2c14fa3b559989d86f56623-3" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-4" name="rest_code_d5087956f2c14fa3b559989d86f56623-4" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-5" name="rest_code_d5087956f2c14fa3b559989d86f56623-5" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-5"&gt;&lt;/a&gt;    external sub redim_in_sub (string dim())
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-6" name="rest_code_d5087956f2c14fa3b559989d86f56623-6" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-6"&gt;&lt;/a&gt;    external long function my_redim (string dim(), long)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-7" name="rest_code_d5087956f2c14fa3b559989d86f56623-7" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-8" name="rest_code_d5087956f2c14fa3b559989d86f56623-8" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-8"&gt;&lt;/a&gt;    declare long i, r
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-9" name="rest_code_d5087956f2c14fa3b559989d86f56623-9" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-10" name="rest_code_d5087956f2c14fa3b559989d86f56623-10" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-10"&gt;&lt;/a&gt;    i = 10
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-11" name="rest_code_d5087956f2c14fa3b559989d86f56623-11" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-11"&gt;&lt;/a&gt;    dim string vs(i) ! has to be a variable to make it an executable dim.
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-12" name="rest_code_d5087956f2c14fa3b559989d86f56623-12" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-13" name="rest_code_d5087956f2c14fa3b559989d86f56623-13" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-13"&gt;&lt;/a&gt;    r = my_redim (vs(), 30)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-14" name="rest_code_d5087956f2c14fa3b559989d86f56623-14" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-14"&gt;&lt;/a&gt;    print "ubound(vs):"; ubound(vs)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-15" name="rest_code_d5087956f2c14fa3b559989d86f56623-15" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-15"&gt;&lt;/a&gt;    for i = lbound(vs) to ubound(vs) \ vs(i) = "vs 30-" + num1$(i) \ next i
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-16" name="rest_code_d5087956f2c14fa3b559989d86f56623-16" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-16"&gt;&lt;/a&gt;    gosub print_vs
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-17" name="rest_code_d5087956f2c14fa3b559989d86f56623-17" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-18" name="rest_code_d5087956f2c14fa3b559989d86f56623-18" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-18"&gt;&lt;/a&gt;    call redim_in_sub (vs())
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-19" name="rest_code_d5087956f2c14fa3b559989d86f56623-19" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-19"&gt;&lt;/a&gt;    print "ubound(vs):"; ubound(vs)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-20" name="rest_code_d5087956f2c14fa3b559989d86f56623-20" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-20"&gt;&lt;/a&gt;    gosub print_Vs
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-21" name="rest_code_d5087956f2c14fa3b559989d86f56623-21" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-22" name="rest_code_d5087956f2c14fa3b559989d86f56623-22" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-22"&gt;&lt;/a&gt;    exit program
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-23" name="rest_code_d5087956f2c14fa3b559989d86f56623-23" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-24" name="rest_code_d5087956f2c14fa3b559989d86f56623-24" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-24"&gt;&lt;/a&gt;print_vs:
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-25" name="rest_code_d5087956f2c14fa3b559989d86f56623-25" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-25"&gt;&lt;/a&gt;    for i = lbound(vs) to ubound(vs) \ print i; ": "; vs(i) \ next i
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-26" name="rest_code_d5087956f2c14fa3b559989d86f56623-26" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-26"&gt;&lt;/a&gt;    return ! from print_vs
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-27" name="rest_code_d5087956f2c14fa3b559989d86f56623-27" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-28" name="rest_code_d5087956f2c14fa3b559989d86f56623-28" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-28"&gt;&lt;/a&gt;end program ! redim
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-29" name="rest_code_d5087956f2c14fa3b559989d86f56623-29" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-30" name="rest_code_d5087956f2c14fa3b559989d86f56623-30" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-30"&gt;&lt;/a&gt;function long my_redim (long s by value, long n)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-31" name="rest_code_d5087956f2c14fa3b559989d86f56623-31" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-31"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-32" name="rest_code_d5087956f2c14fa3b559989d86f56623-32" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-32"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-33" name="rest_code_d5087956f2c14fa3b559989d86f56623-33" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-33"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-34" name="rest_code_d5087956f2c14fa3b559989d86f56623-34" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-34"&gt;&lt;/a&gt;    external long function dbasic$rt_dim (long by value, long by value)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-35" name="rest_code_d5087956f2c14fa3b559989d86f56623-35" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-35"&gt;&lt;/a&gt;    r = dbasic$rt_dim (s, n)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-36" name="rest_code_d5087956f2c14fa3b559989d86f56623-36" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-36"&gt;&lt;/a&gt;end function r ! my_redim
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-37" name="rest_code_d5087956f2c14fa3b559989d86f56623-37" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-37"&gt;&lt;/a&gt;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-38" name="rest_code_d5087956f2c14fa3b559989d86f56623-38" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-38"&gt;&lt;/a&gt;sub redim_in_sub (string s())
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-39" name="rest_code_d5087956f2c14fa3b559989d86f56623-39" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-39"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-40" name="rest_code_d5087956f2c14fa3b559989d86f56623-40" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-40"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-41" name="rest_code_d5087956f2c14fa3b559989d86f56623-41" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-41"&gt;&lt;/a&gt;    external sub set_strings (string dim(), string)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-42" name="rest_code_d5087956f2c14fa3b559989d86f56623-42" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-42"&gt;&lt;/a&gt;    declare long i
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-43" name="rest_code_d5087956f2c14fa3b559989d86f56623-43" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-43"&gt;&lt;/a&gt;    call my_redim (s(), 40)
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-44" name="rest_code_d5087956f2c14fa3b559989d86f56623-44" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-44"&gt;&lt;/a&gt;    for i = 0 to 40 \ s(i) = "redim in sub " + num1$(i) \ next i
&lt;a id="rest_code_d5087956f2c14fa3b559989d86f56623-45" name="rest_code_d5087956f2c14fa3b559989d86f56623-45" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_d5087956f2c14fa3b559989d86f56623-45"&gt;&lt;/a&gt;end sub ! redim_in_sub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Interestingly, a slightly different approach was necessary using VAX
BASIC V3.5 under VMS V5.5-2: using BY VALUE in function
definition statements is not allowed by this version of VAX BASIC,
and BAS$RT_DIM had to be used instead of DBASIC$RT_DIM, of course.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/section&gt;</summary>
    <category term="alpha" label="alpha"/>
    <category term="basic" label="basic"/>
    <category term="dms-plus" label="dms-plus"/>
    <category term="hacks" label="hacks"/>
    <category term="mmk" label="mmk"/>
    <category term="old-blog" label="old blog"/>
    <category term="poise" label="poise"/>
    <category term="usenet" label="usenet"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
  </entry>
</feed>
