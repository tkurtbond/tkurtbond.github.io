<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about computer)</title>
  <id>https://tkurtbond.github.io/categories/cat_computer.atom</id>
  <updated>2024-10-21T19:59:10Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/cat_computer.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/cat_computer/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>SWTOOLS VOS shells need GRPNAM as well as CMEXEC and DETACH for subshells</title>
    <id>https://tkurtbond.github.io/posts/2024/07/19/swtools-vos-shells-need-grpnam-as-well-as-cmexec-and-detach-for-subshells/</id>
    <updated>2024-07-19T12:03:19-04:00</updated>
    <published>2024-07-19T12:03:19-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2024/07/19/swtools-vos-shells-need-grpnam-as-well-as-cmexec-and-detach-for-subshells/"/>
    <summary type="html">&lt;p&gt;The SWTOOLS VOS provides three shells, &lt;span class="command"&gt;sh&lt;/span&gt;, &lt;span class="command"&gt;hsh&lt;/span&gt;
(which adds a history mechanism), and &lt;span class="command"&gt;esh&lt;/span&gt; (which adds
&lt;span class="command"&gt;ed&lt;/span&gt;-style editing of the history).  The release notes state
that the shells need the privileges &lt;code class="docutils literal"&gt;DETACH&lt;/code&gt; and &lt;code class="docutils literal"&gt;CMEXEC&lt;/code&gt;, but
under VMS 5.5-2 it turns out that they need the &lt;code class="docutils literal"&gt;GRPNAM&lt;/code&gt; privilege
as well.&lt;/p&gt;</summary>
    <category term="cmexec" label="cmexec"/>
    <category term="detach" label="detach"/>
    <category term="esh" label="esh"/>
    <category term="fortran" label="fortran"/>
    <category term="grpnam" label="grpnam"/>
    <category term="hsh" label="hsh"/>
    <category term="sh" label="sh"/>
    <category term="swtools-ratfor" label="swtools ratfor"/>
    <category term="swtools-vos" label="swtools vos"/>
    <category term="vaxvms" label="vax/vms"/>
  </entry>
  <entry>
    <title>My first program using SWTOOLS VOS</title>
    <id>https://tkurtbond.github.io/posts/2024/07/18/my-first-program-using-swtools-vos/</id>
    <updated>2024-07-18T16:10:56-04:00</updated>
    <published>2024-07-18T16:10:56-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2024/07/18/my-first-program-using-swtools-vos/"/>
    <summary type="html">&lt;p&gt;Well, it's my first program using SWTOOLS VOS &lt;strong&gt;this time around&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, I finished by first program using SWTOOLS.  It is a simple
directory lister, called l, that interprets all its arguments as as
file specifications to search for using normal RMS wildcards, or used
&lt;span class="file"&gt;*.*&lt;/span&gt; if not arguments are specified.  It only returns the files with
the highest version number, does not include the device, directory, or
version number in the output, and converts the filenames to lower
case.  It should only be used to list files in the current directory.
I needed it because I do things like&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code shell"&gt;&lt;a id="rest_code_0212f92d774d4b39935bf22416f3d83f-1" name="rest_code_0212f92d774d4b39935bf22416f3d83f-1" href="https://tkurtbond.github.io/posts/2024/07/18/my-first-program-using-swtools-vos/#rest_code_0212f92d774d4b39935bf22416f3d83f-1"&gt;&lt;/a&gt;l&lt;span class="w"&gt; &lt;/span&gt;*.sdcl&lt;span class="w"&gt; &lt;/span&gt;*.for&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sedit&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'s/{?+}$/ar uv src.ar $1'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and I don't want any version numbers to end up in the names of the
archive members, and so on.&lt;/p&gt;
&lt;p&gt;Rafor &lt;em&gt;is&lt;/em&gt; much better than Fortran 77.  And Fortran has even more
footguns than C when it comes to using separately compiled functions
and subroutines, with no notices that I'd passed things with the wrong
type until I actually ran the program and got a register dump because
of an access violation.&lt;/p&gt;
&lt;p&gt;I was not able to include things from
&lt;span class="file"&gt;SYS$LIBRARY:FORSYSDEF.TLB&lt;/span&gt; using the Fortran &lt;code class="docutils literal"&gt;INCLUDE&lt;/code&gt;
statement in ratfor, since it has its own include keyword , so I
separated that part of the program into its own Fortran source file.
Because that file wasn't run through ratfor I couldn't use the
standard macro definitions, like STDERR, so when I wanted to output
the filesnames, I just wrote a ratfor subroutine that would print them
and called that from the Fortran subroutine.  A little clunky, but it
worked.&lt;/p&gt;
&lt;p&gt;Annoying, the &lt;span class="command"&gt;fc&lt;/span&gt; command (which compiles &lt;span class="file"&gt;*.f&lt;/span&gt; files to
objects) doesn't work when run under &lt;span class="command"&gt;mmk&lt;/span&gt;, so I had to write
a command procedure &lt;span class="file"&gt;dommk&lt;/span&gt; that does &lt;code class="docutils literal"&gt;mmk/noact/out=tmp.com&lt;/code&gt;
and &lt;code class="docutils literal"&gt;@tmp.com&lt;/code&gt; to do the build.  (I think this was somehow due to
having multiple levels of subprocesses: &lt;span class="command"&gt;mmk&lt;/span&gt;'s and
&lt;span class="command"&gt;rc&lt;/span&gt;'s.)&lt;/p&gt;
&lt;p&gt;Anyway, the program ended up 48 lines of ratfor in three files and 84
lines of Fortran.  The C program I started with was 170 lines (in one
file), but doesn't work with the SWTOOLS shell's notions of I/O
redirection.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2024-07-19 12:44:44 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="fortran" label="fortran"/>
    <category term="swtools-ratfor" label="swtools ratfor"/>
    <category term="swtools-vos" label="swtools vos"/>
    <category term="vaxvms" label="vax/vms"/>
  </entry>
  <entry>
    <title>Fixing a 41 year old bug in the SWTOOLS VOS SEDIT commmand</title>
    <id>https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/</id>
    <updated>2024-07-15T14:09:45-04:00</updated>
    <published>2024-07-15T14:09:45-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/"/>
    <summary type="html">&lt;p&gt;Today I fixed a 41 year old bug in the SWTOOLS VOS &lt;span class="command"&gt;sedit&lt;/span&gt; commmand!&lt;/p&gt;
&lt;p&gt;At work part of my job is to maintain an emulated VAX/VMS 5.5-2 system
for one of our clients.  I have been using the SWTOOLS Virtual
Operating System &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2024/07/03/software-tools/"&gt;recently&lt;/a&gt; (Unix style
I/O redirection! And pipes!), and whenever I tried to use the sedit
command it would die with an integer overflow:&lt;/p&gt;
&lt;pre class="literal-block"&gt;%SYSTEM-F-INTOVF, arithmetic trap, integer overflow at PC=0002D6C9, PSL=03C00022

Improperly handled condition, image exit forced.

      Signal arguments              Stack contents

      Number = 00000003                00000000
      Name   = 0000047C                08000020
               0002D6C9                000017C4
               03C00022                7FEF9784
                                       0002D479
                                       00001DC0
                                       00000000
                                       08000020
                                       7FEF97B4
                                       7FEF979C

      Register dump

      R0 = 0000000E  R1 = 0002BAF4  R2 = 0000000F  R3 = 7FF6A489
      R4 = 7FFE5E0C  R5 = 7FFE5EBC  R6 = 00000000  R7 = 00000001
      R8 = 7FFECA4C  R9 = 7FFECC54  R10= 7FFED7D4  R11= 00001E94
      AP = 7FEF9738  FP = 7FEF96F8  SP = 7FEF976C  PC = 0002D6C9
      PSL= 03C00022&lt;/pre&gt;
&lt;p&gt;Drats, drats, drats.&lt;/p&gt;
&lt;p&gt;I use &lt;span class="command"&gt;sed&lt;/span&gt; frequently on Unix, and it would be nice to have
the SWTOOLS equivalent on VAX/VMS.  What could I do but set the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Wayback_Machine_(Peabody%27s_Improbable_History)"&gt;Wayback Machine&lt;/a&gt;
for 1986 and dive in!&lt;/p&gt;
&lt;p&gt;Those following along may want to read my post about how the &lt;a class="reference external" href="slug://how-the-lbl-software-tools-system-organized-its-source-files"&gt;Software Tools VOS organized its source files&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;The SWTOOLS VOS was written in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ratfor"&gt;Ratfor&lt;/a&gt;, which added structured
control structures and other niceties such as macros, include files,
and string constants to pre-1977 Fortran.  I suspect that even as late
as 1986, when the version of the SWTOOLS VOS was released, lots of
installations were on machines that only &lt;strong&gt;*had*&lt;/strong&gt; pre-1977 Fortran
compilers.&lt;/p&gt;
&lt;p&gt;Here's an example of &lt;span class="app"&gt;Ratfor&lt;/span&gt; source, from &lt;span class="file"&gt;sedit.r&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-1" name="rest_code_b401bc577706466c96a9d86bd14a3a24-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# copyf - copy file name to opened file fdo&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-2" name="rest_code_b401bc577706466c96a9d86bd14a3a24-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;copyf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-3" name="rest_code_b401bc577706466c96a9d86bd14a3a24-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-3"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ARB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-4" name="rest_code_b401bc577706466c96a9d86bd14a3a24-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-4"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;fdo&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-5" name="rest_code_b401bc577706466c96a9d86bd14a3a24-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-5"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-6" name="rest_code_b401bc577706466c96a9d86bd14a3a24-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="k"&gt;open&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-7" name="rest_code_b401bc577706466c96a9d86bd14a3a24-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-8" name="rest_code_b401bc577706466c96a9d86bd14a3a24-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-8"&gt;&lt;/a&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;getch&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-9" name="rest_code_b401bc577706466c96a9d86bd14a3a24-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-10" name="rest_code_b401bc577706466c96a9d86bd14a3a24-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c"&gt;!=EOS; i=i+1)               #get name into string&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-11" name="rest_code_b401bc577706466c96a9d86bd14a3a24-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-12" name="rest_code_b401bc577706466c96a9d86bd14a3a24-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-13" name="rest_code_b401bc577706466c96a9d86bd14a3a24-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;READ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-14" name="rest_code_b401bc577706466c96a9d86bd14a3a24-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ERR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-15" name="rest_code_b401bc577706466c96a9d86bd14a3a24-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;call &lt;/span&gt;&lt;span class="n"&gt;cant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-16" name="rest_code_b401bc577706466c96a9d86bd14a3a24-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-16"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;!= EOF)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-17" name="rest_code_b401bc577706466c96a9d86bd14a3a24-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;call &lt;/span&gt;&lt;span class="n"&gt;putch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-18" name="rest_code_b401bc577706466c96a9d86bd14a3a24-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-18"&gt;&lt;/a&gt;&lt;span class="k"&gt;call close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-19" name="rest_code_b401bc577706466c96a9d86bd14a3a24-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-19"&gt;&lt;/a&gt;&lt;span class="k"&gt;return&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-20" name="rest_code_b401bc577706466c96a9d86bd14a3a24-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-20"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can tell it was inspired by Unix.&lt;/p&gt;
&lt;p&gt;Here's the corresponding generated Fortran&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-1" name="rest_code_b4b6bb99660649c2908323da632aa784-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-1"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;SUBROUTINE &lt;/span&gt;&lt;span class="n"&gt;COPYF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FDO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-2" name="rest_code_b4b6bb99660649c2908323da632aa784-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-3" name="rest_code_b4b6bb99660649c2908323da632aa784-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="n"&gt;FDO&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-4" name="rest_code_b4b6bb99660649c2908323da632aa784-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-5" name="rest_code_b4b6bb99660649c2908323da632aa784-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="k"&gt;OPEN&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-6" name="rest_code_b4b6bb99660649c2908323da632aa784-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;LOGICAL&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-7" name="rest_code_b4b6bb99660649c2908323da632aa784-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;LOGICAL&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GETCH&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-8" name="rest_code_b4b6bb99660649c2908323da632aa784-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-9" name="rest_code_b4b6bb99660649c2908323da632aa784-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-9"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23190&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="nb"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23192&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-10" name="rest_code_b4b6bb99660649c2908323da632aa784-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-11" name="rest_code_b4b6bb99660649c2908323da632aa784-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-11"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23191&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-12" name="rest_code_b4b6bb99660649c2908323da632aa784-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23190&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-13" name="rest_code_b4b6bb99660649c2908323da632aa784-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-13"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23192&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CONTINUE&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-14" name="rest_code_b4b6bb99660649c2908323da632aa784-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;      &lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-15" name="rest_code_b4b6bb99660649c2908323da632aa784-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-16" name="rest_code_b4b6bb99660649c2908323da632aa784-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="nb"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EQ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23193&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-17" name="rest_code_b4b6bb99660649c2908323da632aa784-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;CALL &lt;/span&gt;&lt;span class="n"&gt;CANT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-18" name="rest_code_b4b6bb99660649c2908323da632aa784-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-18"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23193&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CONTINUE&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-19" name="rest_code_b4b6bb99660649c2908323da632aa784-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-19"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23195&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="nb"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;GETCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23196&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-20" name="rest_code_b4b6bb99660649c2908323da632aa784-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;CALL &lt;/span&gt;&lt;span class="n"&gt;PUTCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FDO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-21" name="rest_code_b4b6bb99660649c2908323da632aa784-21" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23195&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-22" name="rest_code_b4b6bb99660649c2908323da632aa784-22" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-22"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23196&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CONTINUE&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-23" name="rest_code_b4b6bb99660649c2908323da632aa784-23" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-23"&gt;&lt;/a&gt;&lt;span class="k"&gt;      CALL CLOSE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-24" name="rest_code_b4b6bb99660649c2908323da632aa784-24" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;RETURN&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-25" name="rest_code_b4b6bb99660649c2908323da632aa784-25" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-25"&gt;&lt;/a&gt;&lt;span class="k"&gt;      END&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the &lt;code class="docutils literal"&gt;character&lt;/code&gt; variables got changed to &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;?
That turns out to be 1 byte variable...&lt;/p&gt;
&lt;p&gt;So, to start, I needed to run sedit in the debugger.  That's easy
enough:&lt;/p&gt;
&lt;pre class="literal-block"&gt;% cd ~tmp
% mkdir sedit
% cd sedit
/dua1/software/swtools/tmp/sedit/
% get -r1.5 ~src/sedit.tcs &amp;gt;sedit.w
% ar xv sedit.w
patdef
csedit
sedit.r
sedit.fmt
% rc -d -v sedit.r
~bin/ratp1.exe sedit.r | ~bin/ratp2.exe &amp;gt;sedit.f
~bin/fc.exe -v -d sedit.f
for/noop/object=sedit.obj/nolist/check=all/debug=all sedit.f
~bin/ld.exe -v -d sedit.obj
$ link/exe=dua1:[software.swtools.tmp.sedit]sedit.exe/debug/nomap sys$input/opti
ons
dua1:[software.swtools.tmp.sedit]sedit.obj,-
dua1:[software.swtools.bin]rlib.olb/incl=(tools$main),-
dua1:[software.swtools.bin]rlib.olb/libr
% echo Hello | sedit "s/H/J/"
%DEBUG-I-CANTCREATEMAIN, could not create the debugger subprocess
%DEBUG-I-CANTCREATEMAIN, could not create the debugger subprocess
-LIB-F-NOCLI, no CLI present to perform function
-LIB-F-NOCLI, no CLI present to perform function
%DEBUG-I-SHRPRC, debugger will share user process
%DEBUG-I-SHRPRC, debugger will share user process

         VAX DEBUG Version V5.5-023

%DEBUG-I-INITIAL, language is MACRO, module set to TOOLS$MAIN

DBG&amp;gt; go
%DEBUG-I-DYNMODSET, setting module DOCOM
%SYSTEM-F-INTOVF, arithmetic trap, integer overflow at PC=0002E345, PSL=03C00022
break on unhandled exception preceding DOCOM\%LINE 20
    20:       IF (.NOT.(CMD .EQ. 97))GOTO 23162
DBG&amp;gt; go
%DEBUG-I-DYNMODSET, setting module DOCOM
%SYSTEM-F-INTOVF, arithmetic trap, integer overflow at PC=0002E345, PSL=03C00022
break on unhandled exception preceding DOCOM\%LINE 20
    20:       IF (.NOT.(CMD .EQ. 97))GOTO 23162
DBG&amp;gt;&lt;/pre&gt;
&lt;p&gt;I guess we'll need a little more context.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-1" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-1"&gt;&lt;/a&gt;DBG&amp;gt; type docom\1:20
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-2" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-2"&gt;&lt;/a&gt;module DOCOM
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-3" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-3"&gt;&lt;/a&gt;     1:       SUBROUTINE DOCOM(I, LINBUF, LINENO)
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-4" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-4"&gt;&lt;/a&gt;     2:       LOGICAL*1 LINBUF(2048)
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-5" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-5"&gt;&lt;/a&gt;     3:       INTEGER I, LINENO
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-6" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-6"&gt;&lt;/a&gt;     4:       LOGICAL*1 CMD
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-7" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-7"&gt;&lt;/a&gt;     5:       INTEGER K1, K2
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-8" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-8"&gt;&lt;/a&gt;     6:       INTEGER AQ
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-9" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-9"&gt;&lt;/a&gt;     7:       INTEGER IQ
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-10" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-10"&gt;&lt;/a&gt;     8:       INTEGER BUF
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-11" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-11"&gt;&lt;/a&gt;     9:       INTEGER LASTBF
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-12" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-12"&gt;&lt;/a&gt;    10:       INTEGER NLINES
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-13" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-13"&gt;&lt;/a&gt;    11:       INTEGER LINE1
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-14" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-14"&gt;&lt;/a&gt;    12:       INTEGER LINE2
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-15" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-15"&gt;&lt;/a&gt;    13:       INTEGER PAT
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-16" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-16"&gt;&lt;/a&gt;    14:       INTEGER PREVC
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-17" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-17"&gt;&lt;/a&gt;    15:       INTEGER NFLAG
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-18" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-18"&gt;&lt;/a&gt;    16:       INTEGER QFLAG
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-19" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-19"&gt;&lt;/a&gt;    17:       COMMON /CSEDIT/ AQ, IQ, BUF(20000), LASTBF, NLINES, LINE1, LINE2,
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-20" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-20"&gt;&lt;/a&gt;    18:      *PAT(132), PREVC, NFLAG, QFLAG
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-21" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-21" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-21"&gt;&lt;/a&gt;    19:       CMD = BUF(I+5)
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-22" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-22" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-22"&gt;&lt;/a&gt;    20:       IF (.NOT.(CMD .EQ. 97))GOTO 23162
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-23" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-23" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-23"&gt;&lt;/a&gt;DBG&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, line 19 is where the the integer overflow happened.  &lt;code class="docutils literal"&gt;BUF&lt;/code&gt; is an
array of &lt;code class="docutils literal"&gt;INTEGER&lt;/code&gt;s, while &lt;code class="docutils literal"&gt;CMD&lt;/code&gt; is a &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;, which, if I
look at the &lt;span class="file"&gt;sedit.r&lt;/span&gt; source:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-1" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# docom - execute a single command at buf(i) on linbuf and lineno&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-2" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;docom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linbuf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lineno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-3" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;linbuf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-4" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lineno&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-5" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-6" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k2&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-7" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;include &lt;/span&gt;&lt;span class="n"&gt;csedit&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-8" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-9" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;COMMAND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-10" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;…&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;started as a &lt;code class="docutils literal"&gt;character&lt;/code&gt; and got translated to a &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;, the
one byte logical data type.  Normally that's ok, because we're just working
with ASCII, so any character should fit in in one byte.  Lets take a look:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-1" name="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8ccbab59d0b54e999f7cc1d440b4481c-1"&gt;&lt;/a&gt;DBG&amp;gt; ex buf[i+5]
&lt;a id="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-2" name="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8ccbab59d0b54e999f7cc1d440b4481c-2"&gt;&lt;/a&gt;DOCOM\BUF[19]:  00000173
&lt;a id="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-3" name="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8ccbab59d0b54e999f7cc1d440b4481c-3"&gt;&lt;/a&gt;DBG&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh dear.  That's hexadecimal 173, which is decimal 371.  No wonder we
got an arithmetic trap, integer overflow.&lt;/p&gt;
&lt;p&gt;If I look for occurrences of &lt;code class="docutils literal"&gt;buf&lt;/code&gt; in &lt;span class="file"&gt;sedit.r&lt;/span&gt; (using emacs
18.55.105) I see lots of lines like where &lt;code class="docutils literal"&gt;buf&lt;/code&gt; is passed to
subroutine &lt;code class="docutils literal"&gt;addint&lt;/code&gt;, which is not documented in the manual pages,
unfortunately, but is in the runtime library &lt;span class="file"&gt;RLIB.OLB&lt;/span&gt;.  On
VAX/VMS the source for that is in &lt;span class="file"&gt;~vms/rlib.w&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-1" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# AddInt      Put int into intara if it fits, increment j&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-2" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# works with an array of integers&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-3" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-4" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-4"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="k"&gt;function &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;intara&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-5" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-6" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer         &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;intara&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-7" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-8" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-9" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-10" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-11" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;intara&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-12" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-13" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-14" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-15" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-15"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, that's just putting an integer in an array and incrementing the
variable that stores where the next one goes.&lt;/p&gt;
&lt;p&gt;Ok, lets look at all the
&lt;code class="docutils literal"&gt;addint&lt;/code&gt; calls.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-1" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Lines&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;matching&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"\\baddint\\b("&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sedit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-2" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-2"&gt;&lt;/a&gt;&lt;span class="mi"&gt;176&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-3" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-3"&gt;&lt;/a&gt;&lt;span class="mi"&gt;223&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nlines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-4" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-4"&gt;&lt;/a&gt;&lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-5" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-5"&gt;&lt;/a&gt;&lt;span class="mi"&gt;225&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-6" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-6"&gt;&lt;/a&gt;&lt;span class="mi"&gt;226&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-7" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-7"&gt;&lt;/a&gt;&lt;span class="mi"&gt;229&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NOTSTATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-8" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-8"&gt;&lt;/a&gt;&lt;span class="mi"&gt;235&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OKSTATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-9" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-9"&gt;&lt;/a&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-10" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-10"&gt;&lt;/a&gt;&lt;span class="mi"&gt;238&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-11" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-11"&gt;&lt;/a&gt;&lt;span class="mi"&gt;242&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-12" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-12"&gt;&lt;/a&gt;&lt;span class="mi"&gt;248&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-13" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-13"&gt;&lt;/a&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-14" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-14"&gt;&lt;/a&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-15" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-15"&gt;&lt;/a&gt;&lt;span class="mi"&gt;269&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gflag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-16" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-16"&gt;&lt;/a&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pflag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-17" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-17"&gt;&lt;/a&gt;&lt;span class="mi"&gt;271&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-18" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-18"&gt;&lt;/a&gt;&lt;span class="mi"&gt;273&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-19" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-19"&gt;&lt;/a&gt;&lt;span class="mi"&gt;276&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-20" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-20"&gt;&lt;/a&gt;&lt;span class="mi"&gt;286&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-21" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-21" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-21"&gt;&lt;/a&gt;&lt;span class="mi"&gt;452&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;dotext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-22" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-22" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-22"&gt;&lt;/a&gt;&lt;span class="mi"&gt;695&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-23" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-23" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-23"&gt;&lt;/a&gt;&lt;span class="mi"&gt;713&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some of the things they're adding to &lt;code class="docutils literal"&gt;buf&lt;/code&gt; are clearly integers
(&lt;code class="docutils literal"&gt;nlines&lt;/code&gt;, and probably &lt;code class="docutils literal"&gt;NOTSTATE&lt;/code&gt; and &lt;code class="docutils literal"&gt;OKSTATE&lt;/code&gt;), but those
&lt;code class="docutils literal"&gt;EOS&lt;/code&gt; are the SWTOOLS VOS equivalent of the C &lt;code class="docutils literal"&gt;'\0'&lt;/code&gt; that ends a
string, so those particular ones definitely hold characters.&lt;/p&gt;
&lt;p&gt;Well, if I want to debug that I'm going to have to rebuild the SWTOOLS
VOS with debugging turned on.  Investigating it turns out that I need
to add &lt;code class="docutils literal"&gt;/DEBUG&lt;/code&gt; to the &lt;span class="command"&gt;macro&lt;/span&gt; and &lt;span class="command"&gt;fortran&lt;/span&gt;
commands in &lt;span class="file"&gt;asmlib.com&lt;/span&gt;, &lt;span class="file"&gt;asmprm.com&lt;/span&gt;, &lt;span class="file"&gt;build.com&lt;/span&gt;,
and &lt;span class="file"&gt;compile.com&lt;/span&gt; in &lt;span class="file"&gt;~bin&lt;/span&gt;, and then execute
&lt;span class="file"&gt;~bin:toolgen.com&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Once that is done I start stepping through various routines.
Eventually I figure out that it &lt;code class="docutils literal"&gt;buf(19)&lt;/code&gt; is the element that ends
up with the 173 hex, and set a watch on it.  And indeed it is getting
passed a 173.  Sigh.&lt;/p&gt;
&lt;p&gt;Doing a &lt;code class="docutils literal"&gt;SHOW STACK&lt;/code&gt; in the &lt;span class="app"&gt;VMS Debugger&lt;/span&gt; shows that the
&lt;code class="docutils literal"&gt;addint()&lt;/code&gt; call that dies is in the subroutine &lt;code class="docutils literal"&gt;compil()&lt;/code&gt;.  Lets
take a look:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-1" name="rest_code_49478249ca594892b2d2ef5487665c04-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-1"&gt;&lt;/a&gt;DBG&amp;gt; type compil\50:65
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-2" name="rest_code_49478249ca594892b2d2ef5487665c04-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-2"&gt;&lt;/a&gt;module COMPIL
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-3" name="rest_code_49478249ca594892b2d2ef5487665c04-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-3"&gt;&lt;/a&gt;    50:       STATUS = ADDINT(LINE2, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-4" name="rest_code_49478249ca594892b2d2ef5487665c04-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-4"&gt;&lt;/a&gt;    51:       COM = CLOWER(LIN(I))
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-5" name="rest_code_49478249ca594892b2d2ef5487665c04-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-5"&gt;&lt;/a&gt;    52:       IF (.NOT.(COM .EQ. 33))GOTO 23068
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-6" name="rest_code_49478249ca594892b2d2ef5487665c04-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-6"&gt;&lt;/a&gt;    53:       STATUS = ADDINT(1, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-7" name="rest_code_49478249ca594892b2d2ef5487665c04-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-7"&gt;&lt;/a&gt;    54:       I = I+1
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-8" name="rest_code_49478249ca594892b2d2ef5487665c04-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-8"&gt;&lt;/a&gt;    55:       CALL SKIPBL(LIN, I)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-9" name="rest_code_49478249ca594892b2d2ef5487665c04-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-9"&gt;&lt;/a&gt;    56:       COM = CLOWER(LIN(I))
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-10" name="rest_code_49478249ca594892b2d2ef5487665c04-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-10"&gt;&lt;/a&gt;    57:       GOTO 23069
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-11" name="rest_code_49478249ca594892b2d2ef5487665c04-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-11"&gt;&lt;/a&gt;    58: 23068 CONTINUE
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-12" name="rest_code_49478249ca594892b2d2ef5487665c04-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-12"&gt;&lt;/a&gt;    59:       STATUS = ADDINT(0, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-13" name="rest_code_49478249ca594892b2d2ef5487665c04-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-13"&gt;&lt;/a&gt;    60: 23069 CONTINUE
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-14" name="rest_code_49478249ca594892b2d2ef5487665c04-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-14"&gt;&lt;/a&gt;    61:       STATUS = ADDINT(COM, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-15" name="rest_code_49478249ca594892b2d2ef5487665c04-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-15"&gt;&lt;/a&gt;    62:       IF (.NOT.(COM .EQ. 97 .AND. FD .NE. 0))GOTO 23070
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-16" name="rest_code_49478249ca594892b2d2ef5487665c04-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-16"&gt;&lt;/a&gt;    63:       STATUS = ADDINT(0, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-17" name="rest_code_49478249ca594892b2d2ef5487665c04-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-17"&gt;&lt;/a&gt;    64:       STATUS = DOTEXT(FD)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-18" name="rest_code_49478249ca594892b2d2ef5487665c04-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-18"&gt;&lt;/a&gt;    65:       GOTO 23071
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-19" name="rest_code_49478249ca594892b2d2ef5487665c04-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-19"&gt;&lt;/a&gt;DBG&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Line 61 is the one that dies.  Here &lt;code class="docutils literal"&gt;addint()&lt;/code&gt; is being passed the
variable &lt;code class="docutils literal"&gt;COM&lt;/code&gt;.  Lets take a look at the &lt;span class="app"&gt;Ratfor&lt;/span&gt; source for
its definition:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_8270926a77c94de08721a016647db2ec-1" name="rest_code_8270926a77c94de08721a016647db2ec-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8270926a77c94de08721a016647db2ec-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# compil - "compile" command in lin(i) from file fd, increment i&lt;/span&gt;
&lt;a id="rest_code_8270926a77c94de08721a016647db2ec-2" name="rest_code_8270926a77c94de08721a016647db2ec-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8270926a77c94de08721a016647db2ec-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;compil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_8270926a77c94de08721a016647db2ec-3" name="rest_code_8270926a77c94de08721a016647db2ec-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8270926a77c94de08721a016647db2ec-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;lin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh, look, &lt;code class="docutils literal"&gt;com&lt;/code&gt; is a character, that gets translated by
&lt;span class="app"&gt;Ratfor&lt;/span&gt; to a &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;, and it is a byte, while the integers
that get passed in are longwords, which are 32 bytes long…  Uh,
doesn't Fortran pass everything by reference?  So &lt;code class="docutils literal"&gt;addint()&lt;/code&gt; gets
passed the address of a byte, but interprets it as the address of a
longword, so it picks up 3 extra bytes.  For whatever reason, there is
a 1 in the byte right next to the byte for &lt;code class="docutils literal"&gt;com&lt;/code&gt;, so we get (hex,
remember) 173 instead of 73, which is the ASCII for &lt;code class="docutils literal"&gt;s&lt;/code&gt;, which the s
in our &lt;code class="docutils literal"&gt;sedit "s/H/J/"&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Ok, that should be easy to fix: introduce an integer temporary
variable, assign &lt;code class="docutils literal"&gt;com&lt;/code&gt; to it, and pass it instead.&lt;/p&gt;
&lt;p&gt;Here's the VMS diff:&lt;/p&gt;
&lt;pre class="literal-block"&gt;************
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;6
  206      integer comint
  207      integer fd
******
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;1
  206      integer fd
************
************
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;6
  237      comint = com
  238      status = addint(comint, buf, lastbf, MAXBUF)
  239      if (com == APPENDCOM &amp;amp; fd != NO) {
******
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;1
  236      status = addint(com, buf, lastbf, MAXBUF)
  237      if (com == APPENDCOM &amp;amp; fd != NO) {
************

Number of difference sections found: 2
Number of difference records found: 3

DIFFERENCES /IGNORE=()/MERGED=1/OUTPUT=DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.DIFF;1-
    DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;6-
    DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;1&lt;/pre&gt;
&lt;p&gt;Recompile, lets see:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-1" name="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_2c25d94d9e8b4b908a1b6a68c742894e-1"&gt;&lt;/a&gt;% echo Hello | sedit "s/H/J/"
&lt;a id="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-2" name="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_2c25d94d9e8b4b908a1b6a68c742894e-2"&gt;&lt;/a&gt;Jello
&lt;a id="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-3" name="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_2c25d94d9e8b4b908a1b6a68c742894e-3"&gt;&lt;/a&gt;%
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That did it!&lt;/p&gt;</summary>
    <category term="fortran" label="fortran"/>
    <category term="lbl-tools" label="lbl tools"/>
    <category term="ratfor" label="ratfor"/>
    <category term="software-tools" label="software tools"/>
    <category term="software-tools-virtual-operating-system" label="software tools virtual operating system"/>
    <category term="swtools" label="swtools"/>
  </entry>
  <entry>
    <title>How the LBL Software Tools system organized its source files</title>
    <id>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</id>
    <updated>2024-07-03T16:20:40-04:00</updated>
    <published>2024-07-03T16:20:40-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/"/>
    <summary type="html">&lt;p&gt;One of the things I've always found interesting about the LBL Software
Tools VOS was how its source files were structured.  I'll include here
page 10 of the release notes from the release on the DECUS LT86 tape:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1"&gt;&lt;/a&gt;                            Release Notes
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4"&gt;&lt;/a&gt;                        Source File Structure
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6"&gt;&lt;/a&gt;The  source  code  for  `tool' is contained in a file [...SRC]tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7"&gt;&lt;/a&gt;(if   the   tool   is   portable   across   operating   systems)    or
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8"&gt;&lt;/a&gt;[...VMS]tool.tcs  (if  it  is  an VMS-specific tool).  This TCS source
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9"&gt;&lt;/a&gt;file contains an edit history of all changes made to the source.   The
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10"&gt;&lt;/a&gt;output  of  the  `get' utility operating on a `.tcs' file results in a
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11"&gt;&lt;/a&gt;file (tool.w) which is all of the  environment  necessary  to  rebuild
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12"&gt;&lt;/a&gt;the  tool,  provided  that the VOS is operational.  The tool.w file is
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13"&gt;&lt;/a&gt;an archive containing:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15"&gt;&lt;/a&gt;  1. All of the files "included" by the ratfor source code.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16"&gt;&lt;/a&gt;  2. The ratfor source file, tool.r.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17"&gt;&lt;/a&gt;  3. The format input for the manual entry, tool.fmt.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18"&gt;&lt;/a&gt;  4. And optionally,  any  extra  definition  files  needed  to  build
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19"&gt;&lt;/a&gt;     alternate versions of the tool (eg. sh =&amp;gt; hsh).
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21"&gt;&lt;/a&gt;As  an  example,  suppose  that  you  wish  to  change  the subroutine
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22"&gt;&lt;/a&gt;"module" in "tool".  The suggested scenario is as follows:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24"&gt;&lt;/a&gt;   $ !Fetch the file tool.tcs from the appropriate directory in the container
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25"&gt;&lt;/a&gt;   $ !file on tape into st_src
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26"&gt;&lt;/a&gt;   $ hsh
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27"&gt;&lt;/a&gt;   % get ~src/tool.tcs tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28"&gt;&lt;/a&gt;   % ar xv tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29"&gt;&lt;/a&gt;   % ar xv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30"&gt;&lt;/a&gt;   % ed module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31"&gt;&lt;/a&gt;   (make changes and write file)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32"&gt;&lt;/a&gt;   % ar uv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33"&gt;&lt;/a&gt;   % rc -v tool.r
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34"&gt;&lt;/a&gt;   % (test out new tool.  repeat last three steps until satisfied.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35"&gt;&lt;/a&gt;   % ed tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36"&gt;&lt;/a&gt;   (modify writeup to reflect changes)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37"&gt;&lt;/a&gt;   % ar uv tool.w tool.r tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38"&gt;&lt;/a&gt;   % cp tool.exe ~usr/tool.exe
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39"&gt;&lt;/a&gt;   % delta tool.w ~src/tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40"&gt;&lt;/a&gt;   (Identify in the comments the reason for the changes,
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41"&gt;&lt;/a&gt;   and which modules changed.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42"&gt;&lt;/a&gt;   % format tool.fmt &amp;gt;tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43"&gt;&lt;/a&gt;   % ar uv ~man/s1 tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44"&gt;&lt;/a&gt;   % asam &amp;lt;~man/s1 | sort &amp;gt;~man/i1
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46"&gt;&lt;/a&gt;Placing tool.exe in ~usr  causes  the  shell  to  find  your  modified
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47"&gt;&lt;/a&gt;version  of  "tool"  rather  than  the  distributed one.  The last two
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48"&gt;&lt;/a&gt;commands  above  cause  the  manual  entry  for  `tool'  to  correctly
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49"&gt;&lt;/a&gt;correspond to the utility itself.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56"&gt;&lt;/a&gt;                                 -10-
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(It should be &lt;code&gt;% get ~src/tool.tcs &amp;gt;tool.w&lt;/code&gt; with a “&amp;gt;”
before &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt; in the above procedure.  Otherwise the contents
are echoed to the terminal instead of being written to &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;So, all the source files (source code &lt;em&gt;and&lt;/em&gt; documentation) are stored
in an archive file, which contains another archive file that has just
the ratfor source, from which you extract the modules you want to work
on, and at the end update the archives in the reverse order!  This
made organizing all the source much simpler, especially considering
some of the porting targets for this software didn't have hierarchical
directory structures, only flat directories.  So when moving around
parts of the system, like when you were preparing the distribution,
you normally only dealt with the top level archives, the &lt;code class="file docutils literal"&gt;.TCS&lt;/code&gt;
files, and only worked directly with the files that were contained
within that archive and its child archives if you had to make a change
to the source files.  Very clever!&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls" src="https://tkurtbond.github.io/images/Russian-Matroshka.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Russian-Matroshka.jpg"&gt;Source 1&lt;/a&gt;)&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls, opened" src="https://tkurtbond.github.io/images/Russian-Matroshka-opened.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Matryoshka_transparent.png"&gt;Source 2&lt;/a&gt;)&lt;/p&gt;</summary>
    <category term="decus" label="decus"/>
    <category term="lbltools" label="lbltools"/>
    <category term="lt86-tape" label="lt86 tape"/>
    <category term="source-file-structure" label="source file structure"/>
    <category term="swtools" label="swtools"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
    <category term="vos" label="vos"/>
  </entry>
  <entry>
    <title>Software Tools</title>
    <id>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</id>
    <updated>2024-07-03T09:59:31-04:00</updated>
    <published>2024-07-03T09:59:31-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2024/07/03/software-tools/"/>
    <summary type="html">&lt;p&gt;When I was in college in the 1980s the school I was at used Digital
Equipment Corporation VAXes running VMS, and didn't have any Unix
machines.  I was quite interested in Unix and the Unix philosophy, but
was frustrated by my lack of access to Unix machines.  However,
Brian W. Kernighan and P. J. Plauger wrote a couple of books about
writing tools in the Unix style: &lt;cite&gt;Software Tools&lt;/cite&gt; was in
published in 1976 and used Fortran as its portable implementation
language, while &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; was published in
1981 and used Pascal.&lt;/p&gt;
&lt;img alt="/images/swtools.jpeg" src="https://tkurtbond.github.io/images/swtools.jpeg"&gt;
&lt;p&gt;Here is a quote repeated on each book's cover:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good Programming is not learned from generalities, but by seeing
how significant programs can be made clean, easy to read, easy to
maintain and modify, human-engineered, efficient, and reliable, by
the application of common sense and good programming practices.
Careful study and imitation of good programs leads to better
writing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both books worked through writing software tools that were simpler but
still useful versions of many of the standard Unix tools.&lt;/p&gt;
&lt;p&gt;I got &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; because I knew Pascal better
than Fortran and worked through implementing each of the programs on
the college's VAX, which taught me a lot about programming and was
significant influence on me.  I later got &lt;cite&gt;Software Tools&lt;/cite&gt;
because I wanted to read the section on implementing the ratfor
processor which that book used to add additional control structures
unavailable in the Fortran of the day.&lt;/p&gt;
&lt;p&gt;I was not the only person who was influenced by these books.
Deborah K. Scherrer, Dennis E. Hall, and Joseph S. Sventek at Lawrence
Berkeley National Laboratory with help from others greatly expanded
the set of programs from the book into an entire Virtual Operating
System (VOS), and founded the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Software_Tools_Users_Group"&gt;Software Tools Users Group&lt;/a&gt; in 1976
to distribute it, eventually leading to ports on over 50 operating
systems.&lt;/p&gt;
&lt;p&gt;Luckily for me VAX/VMS was one of those operating systems, and the
port appeared on various tapes distributed by DECUS, the Digital
Equipment Computer Users' Society.  Luckily MPL Corporation, where I
worked at the time, always got the DECUS tapes and had a Fortran
compiler, so I could install it there.  I found it a very useful and
usable computing environment.&lt;/p&gt;
&lt;p&gt;Anyway, I retain a fondness for that software, known variously as
LBLTOOLS, LBL SWTOOLS, and SWTOOLS VOS, and have begun using the version
from the &lt;a class="reference external" href="https://www.digiater.nl/openvms/decus/zips_vms_attributes/lt86a.zip"&gt;DECUS VAX Languages &amp;amp; Tools SIG tape from 1986&lt;/a&gt;
again on the (emulated) VAX I maintain at work.  This gave me the
opportunity create a &lt;a class="reference external" href="https://tkurtbond.github.io/swtoolsman.pdf"&gt;PDF with the documentation&lt;/a&gt;
for that version, which I'm making available here for the curious.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“I really enjoyed that book.  The first computer book I read where
I thought my world was larger after reading it.” — C. Paul Bond&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2024-10-21 15:59:04 EDT&lt;/em&gt;
— Updated PDF with slight changes to structure and better bookmarks.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="brian-w-kernighan" label="brian w. kernighan"/>
    <category term="decus" label="decus"/>
    <category term="fortran" label="fortran"/>
    <category term="lbltools" label="lbltools"/>
    <category term="lt86-tape" label="lt86 tape"/>
    <category term="pj-plauger" label="p.j. plauger"/>
    <category term="pascal" label="pascal"/>
    <category term="ratfor" label="ratfor"/>
    <category term="software-tools" label="software tools"/>
    <category term="swtools" label="swtools"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
    <category term="vos" label="vos"/>
  </entry>
  <entry>
    <title>Overcoming reST's limited table control by including raw groff TBL</title>
    <id>https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/</id>
    <updated>2023-02-03T08:31:34-05:00</updated>
    <published>2023-02-03T08:31:34-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2024-01-21 15:55:09 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So.  I have a CHICKEN Scheme program that converts &lt;a class="reference external" href="http://dyskami.ca/besm.html"&gt;Big Eyes Small
Mouth 4E&lt;/a&gt; characters from a YAML definition into &lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredText&lt;/a&gt;
(reST).&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt;’s (and probably the orginal python &lt;a class="reference external" href="https://docutils.sourceforge.io/"&gt;docutils&lt;/a&gt;’),
formatting of tables from &lt;span class="app"&gt;reST&lt;/span&gt; is limited and doesn’t let me do
what I need to do.&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#markdown" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here’s an image of the BESM 4E character, Xeksil &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#xeksil" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, I played
Wednesday night:&lt;/p&gt;
&lt;img alt="Original charactersheet for Xeksil in :app:`reST` using grid tables" src="https://tkurtbond.github.io/images/xeksil-plain-rst-version.png"&gt;
&lt;p&gt;As you can see, it doesn’t fully fill the width of the page, and the
first two columns are too wide for the information they contain.&lt;/p&gt;
&lt;p&gt;I’m contemplating changing the program so that the actual tables are
in &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; format directly, and insert them into the
generated &lt;span class="app"&gt;reST&lt;/span&gt; file in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; directives.  That locks
me into using &lt;span class="app"&gt;pandoc&lt;/span&gt;’s &lt;span class="app"&gt;groff&lt;/span&gt; &lt;span class="app"&gt;ms&lt;/span&gt; macros output, but I
could just write a new version that outputs ConTeXt (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/ConTeXt"&gt;C1&lt;/a&gt;, &lt;a class="reference external" href="https://wiki.contextgarden.net/Main_Page"&gt;C2&lt;/a&gt;) if I
ever need one…&lt;/p&gt;
&lt;p&gt;As a test, I converted a character and his mecha into raw &lt;span class="app"&gt;groff&lt;/span&gt;
&lt;span class="app"&gt;ms&lt;/span&gt; with &lt;span class="app"&gt;tbl&lt;/span&gt; output.  Here’s an image of that:&lt;/p&gt;
&lt;img alt="Test character sheet for Enyon Boase in plain groff -ms with TBL." src="https://tkurtbond.github.io/images/enyon-in-groff-ms-directly.png"&gt;
&lt;p&gt;As you can see, the tables fill the width of the text entirely and the
first two columns are narrower and the third column expands to fill
the width of the text.  I was also able to put double lines before and
after each entity, and put single lines after the headers and before
the total lines.&lt;/p&gt;
&lt;p&gt;I think this looks much better.&lt;/p&gt;
&lt;p&gt;Note that the first example is on 5.5” by 8.5” page (which I use for
things I’m going to look at on the screen a lot, because it takes up
less space) and the second example is on 8.5” by 11” paper and in two
columns.  It was essentially impossible to have &lt;span class="app"&gt;pandoc&lt;/span&gt; (and I’m
sure docutils) produce 2 column output and have the &lt;span class="app"&gt;reST&lt;/span&gt;
versions of the tables adapt to the width of the columns.  With the
narrower widths of the first two table columns the third table column
is wide enough that I can use pages with two columns.&lt;/p&gt;
&lt;p&gt;CPB (who I talked about this with earlier) commented: The data is in
YAML now right?  Why not just generate troff?&lt;/p&gt;
&lt;p&gt;Because when I write the actual text of things, I prefer &lt;span class="app"&gt;reST&lt;/span&gt;.
So, for instance, the description of the character or entity I write
in &lt;span class="app"&gt;reST&lt;/span&gt;.  And I like &lt;span class="app"&gt;reST&lt;/span&gt; for the main documents into
which I include these generated files because then I can output to
HTML too.  (Or to ConTexT; I’ve got some documents where I needed
features that ConTexT has and &lt;span class="app"&gt;pandoc&lt;/span&gt;’s groff -ms output doesn’t
have.)&lt;/p&gt;
&lt;p&gt;I’ve already written the character formatting program (named
&lt;span class="command"&gt;besm-rst&lt;/span&gt;, originally enough) so that it can output the
table version or a terse version where the different sections are in
normal paragraphs, which is useful because it is much more compact.
Adding a version that outputs &lt;span class="app"&gt;reST&lt;/span&gt; with tables expressed as an
&lt;span class="app"&gt;reST&lt;/span&gt; &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; block that contains the table sections as
&lt;span class="app"&gt;groff -ms&lt;/span&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; source would just be writing another
version of the output routine, selectable with a command line option.&lt;/p&gt;
&lt;p&gt;The original output routine to produce &lt;span class="app"&gt;reST&lt;/span&gt; grid tables and its
support procedures were 315 lines.  The second output routine to
paragraphs and its new support procedures (it uses some of the first
output routine’s support procedures) was 158 lines.&lt;/p&gt;
&lt;p&gt;It will be interesting to see how long the troff output will be.&lt;/p&gt;
&lt;p&gt;Oh, here is Lieutenant Enyon Boase again, this time in paragraph format:&lt;/p&gt;
&lt;img alt="/images/enyon-terse-plain-rst-version.png" src="https://tkurtbond.github.io/images/enyon-terse-plain-rst-version.png"&gt;
&lt;p&gt;That’s also a 8.5” by 11” page, and as you can see, it’s much more
compact, but harder for folks to find each individual item.  This is
basically the format that was used in the original BESM 1E and 2E
books, and the table based version appeared in BESM 3E and was
continued in 4E.&lt;/p&gt;
&lt;p&gt;I think the table format is much easier to read.&lt;/p&gt;
&lt;p&gt;Now, when I use the &lt;span class="app"&gt;reST&lt;/span&gt; table output and generate HTML from it
it looks kinda crude:&lt;/p&gt;
&lt;img alt="Character sheet for Enyon Boase using reST grid tables for HTML output." src="https://tkurtbond.github.io/images/enyon-rst-grid-table-html-output.png"&gt;
&lt;p&gt;However, I think I may be able to fix that with CSS.&lt;/p&gt;
&lt;p&gt;The HTML is relatively clean.  (It probably doesn't really need the
width specifications in the colgroup element, but &lt;span class="app"&gt;pandoc&lt;/span&gt; puts
those in.)&lt;/p&gt;
&lt;p&gt;That’s actually six tables.  If I wrap them in one div with a
particular class I think I can get them formatted right.&lt;/p&gt;
&lt;p&gt;CPB commented: CSS supports printing.&lt;/p&gt;
&lt;p&gt;Yes, there is actually at least one commercial document formatting
system that uses CSS for sophisticated print output, much more
elaborate than what the browsers support, I think.  And there is at
least one open source solution, &lt;a class="reference external" href="https://weasyprint.org/"&gt;weasyprint&lt;/a&gt;, that uses CSS to produce
PDF.&lt;/p&gt;
&lt;p&gt;But I know &lt;span class="app"&gt;tbl&lt;/span&gt; better than CSS. 😉&lt;/p&gt;
&lt;p&gt;I do have a need for good looking output html for the output of the
program: so I can put it on my blog!  It would be better than images
in cases where I’m not actually comparing the PDF output of various
things.&lt;/p&gt;
&lt;p&gt;Well, it took me longer than I expected to write the new version of
the output routines for embedded &lt;span class="app"&gt;tbl&lt;/span&gt; in rst: 4¼ hours.  After
the first 2 hours I was fried (it had already been a long day): if I
had stopped then I probably could have finished it the next day in an
hour.  Oh well.  The new output routine and its new supporting
routines were 208 lines long.&lt;/p&gt;
&lt;p&gt;Here's an image of the page produced (probably from the same YAML
file; I have a couple, since one of them was an early test file for
&lt;span class="command"&gt;besm-rst&lt;/span&gt;) using the new output routine, with &lt;span class="app"&gt;reST&lt;/span&gt;
output with &lt;span class="app"&gt;tbl&lt;/span&gt; output in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt;, pulled from the
document with all the pregenerated characters:&lt;/p&gt;
&lt;img alt="Enyon Boase reST output with tbl in raw ms block" src="https://tkurtbond.github.io/images/enyon-boase-rst-output-with-raw-ms-tbl.png"&gt;
&lt;p&gt;And for reference, here is the YAML version of Enyon Boase:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-1" name="rest_code_c9466e80c056449ba187b75777b8423a-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-2" name="rest_code_c9466e80c056449ba187b75777b8423a-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Lieutenant Enyon Boase&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-3" name="rest_code_c9466e80c056449ba187b75777b8423a-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="c1"&gt;# Average: (/ (+ 8 6 6) 3.0) 6.666666666666667&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-4" name="rest_code_c9466e80c056449ba187b75777b8423a-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Body&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-5" name="rest_code_c9466e80c056449ba187b75777b8423a-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-6" name="rest_code_c9466e80c056449ba187b75777b8423a-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;16&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-7" name="rest_code_c9466e80c056449ba187b75777b8423a-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Mind&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-8" name="rest_code_c9466e80c056449ba187b75777b8423a-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-9" name="rest_code_c9466e80c056449ba187b75777b8423a-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-10" name="rest_code_c9466e80c056449ba187b75777b8423a-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Soul&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-11" name="rest_code_c9466e80c056449ba187b75777b8423a-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-12" name="rest_code_c9466e80c056449ba187b75777b8423a-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-13" name="rest_code_c9466e80c056449ba187b75777b8423a-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-14" name="rest_code_c9466e80c056449ba187b75777b8423a-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ACV&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-15" name="rest_code_c9466e80c056449ba187b75777b8423a-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-16" name="rest_code_c9466e80c056449ba187b75777b8423a-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DCV&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-17" name="rest_code_c9466e80c056449ba187b75777b8423a-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-18" name="rest_code_c9466e80c056449ba187b75777b8423a-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DM&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-19" name="rest_code_c9466e80c056449ba187b75777b8423a-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;5&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-20" name="rest_code_c9466e80c056449ba187b75777b8423a-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;HP&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-21" name="rest_code_c9466e80c056449ba187b75777b8423a-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;70&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-22" name="rest_code_c9466e80c056449ba187b75777b8423a-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;EP&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-23" name="rest_code_c9466e80c056449ba187b75777b8423a-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;60&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-24" name="rest_code_c9466e80c056449ba187b75777b8423a-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SV&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-25" name="rest_code_c9466e80c056449ba187b75777b8423a-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-26" name="rest_code_c9466e80c056449ba187b75777b8423a-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-27" name="rest_code_c9466e80c056449ba187b75777b8423a-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Attack Mastery&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-28" name="rest_code_c9466e80c056449ba187b75777b8423a-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-29" name="rest_code_c9466e80c056449ba187b75777b8423a-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-30" name="rest_code_c9466e80c056449ba187b75777b8423a-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Extra Actions&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-31" name="rest_code_c9466e80c056449ba187b75777b8423a-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-32" name="rest_code_c9466e80c056449ba187b75777b8423a-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-33" name="rest_code_c9466e80c056449ba187b75777b8423a-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+1 Extra Action&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-34" name="rest_code_c9466e80c056449ba187b75777b8423a-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Item:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;FV2021&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Coleopteran"&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-35" name="rest_code_c9466e80c056449ba187b75777b8423a-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;35&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-36" name="rest_code_c9466e80c056449ba187b75777b8423a-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Skills&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-37" name="rest_code_c9466e80c056449ba187b75777b8423a-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-38" name="rest_code_c9466e80c056449ba187b75777b8423a-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-39" name="rest_code_c9466e80c056449ba187b75777b8423a-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;20 Skill Points&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-40" name="rest_code_c9466e80c056449ba187b75777b8423a-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-41" name="rest_code_c9466e80c056449ba187b75777b8423a-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Defect:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Obsessed&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;by&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Military&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;History"&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-42" name="rest_code_c9466e80c056449ba187b75777b8423a-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-43" name="rest_code_c9466e80c056449ba187b75777b8423a-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-44" name="rest_code_c9466e80c056449ba187b75777b8423a-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-45" name="rest_code_c9466e80c056449ba187b75777b8423a-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Interrogation&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-46" name="rest_code_c9466e80c056449ba187b75777b8423a-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-47" name="rest_code_c9466e80c056449ba187b75777b8423a-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-48" name="rest_code_c9466e80c056449ba187b75777b8423a-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Law&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-49" name="rest_code_c9466e80c056449ba187b75777b8423a-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-50" name="rest_code_c9466e80c056449ba187b75777b8423a-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-51" name="rest_code_c9466e80c056449ba187b75777b8423a-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-52" name="rest_code_c9466e80c056449ba187b75777b8423a-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-53" name="rest_code_c9466e80c056449ba187b75777b8423a-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Leadership&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-54" name="rest_code_c9466e80c056449ba187b75777b8423a-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-55" name="rest_code_c9466e80c056449ba187b75777b8423a-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-56" name="rest_code_c9466e80c056449ba187b75777b8423a-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military Sciences&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-57" name="rest_code_c9466e80c056449ba187b75777b8423a-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-58" name="rest_code_c9466e80c056449ba187b75777b8423a-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-59" name="rest_code_c9466e80c056449ba187b75777b8423a-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Persuasion&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-60" name="rest_code_c9466e80c056449ba187b75777b8423a-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-61" name="rest_code_c9466e80c056449ba187b75777b8423a-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-62" name="rest_code_c9466e80c056449ba187b75777b8423a-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Political Sciences&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-63" name="rest_code_c9466e80c056449ba187b75777b8423a-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-64" name="rest_code_c9466e80c056449ba187b75777b8423a-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-65" name="rest_code_c9466e80c056449ba187b75777b8423a-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stealth&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-66" name="rest_code_c9466e80c056449ba187b75777b8423a-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-67" name="rest_code_c9466e80c056449ba187b75777b8423a-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-68" name="rest_code_c9466e80c056449ba187b75777b8423a-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Visual Arts&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-69" name="rest_code_c9466e80c056449ba187b75777b8423a-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-70" name="rest_code_c9466e80c056449ba187b75777b8423a-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-71" name="rest_code_c9466e80c056449ba187b75777b8423a-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Writing&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-72" name="rest_code_c9466e80c056449ba187b75777b8423a-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-73" name="rest_code_c9466e80c056449ba187b75777b8423a-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-74" name="rest_code_c9466e80c056449ba187b75777b8423a-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-75" name="rest_code_c9466e80c056449ba187b75777b8423a-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Reports&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is the YAML version of his FV2021 Coleopteran:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-1" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-2" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;FV2021 Coleopteran&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-3" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;BRCS, p. 94=95&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-4" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-5" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;A three-metre talk British-built humanoid combat walker used by&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-6" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;the Canadians on Mars.  They use a new “mind-interface”&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-7" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;neuro-helmet that makes the mecha very agile.  However, if a&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-8" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;different pilot wants to use the mecha, the neuro-helmet must be&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-9" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;“retuned” to their brain waves — this takes a full day; until&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-10" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;then, halve the Defence Mastery and Combat Technique: Lightning&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-11" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;Reflexes Attribute bonuses.  The mecha are painted standard&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-12" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;colours: UN white, with sky-blue helmets.&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-13" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-14" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Health Points&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-15" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;80&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-16" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-17" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Features&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-18" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-19" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-20" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Radio,&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Inertial&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Naviagion"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-21" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Ground Speed&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-22" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-23" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-24" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Up to 50 kph&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-25" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Armour&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-26" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-27" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-28" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-29" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-30" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Limiter:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Partial:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Thin"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-31" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-32" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Hit thin area with called shot for half Armour Rating; 20 AR;&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-33" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;20 Health Points&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-34" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Combat Technique&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-35" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-36" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-37" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Lightning&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Reflexes:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;major&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;edge&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;on&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Initiative&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rolls"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-38" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Defence Mastery&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-39" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-40" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-41" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+2 to Defense Combat Value&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-42" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Resilient&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-43" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-44" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-45" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-46" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Space: low pressure, high pressure, intense cold, intense&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-47" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;heat, radiation, lack of air&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-48" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Supersense&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-49" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-50" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-51" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Sensors, range 10 km&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-52" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Superstrength&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-53" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-54" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-55" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-56" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Lift 500 kg (a horse); +10 Unarmed Combat Damage;&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-57" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;+2 Muscle Weapons Damage&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-58" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Tough&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-59" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-60" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-61" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+60 Health Points&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-62" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Railgun"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-63" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-64" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-65" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;24&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-66" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-67" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier ×&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;9; Range 10 km; fails and cannot be used&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-68" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;again on natural 2 or 3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-69" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-70" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;5&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-71" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-72" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Unreliable&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-73" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Rocket&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pod"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-74" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-75" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-76" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-76" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-76"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-77" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-77" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-77"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-78" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-78" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-78"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier ×&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;9; Autofire: 1 hit if attack exceeds defence&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-79" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-79" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-79"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;by 0–3, 2 hits if it exceeds by 4–6, 3 hits if it exceeds by&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-80" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-80" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-80"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;&amp;gt;7–9, etc.; Area 3m radius; Range 1 km; 3 shots; Can be&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-81" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-81" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-81"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;deflected or destroyed for 1 round; Alternate attack: cost&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-82" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-82" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-82"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;halved&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-83" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-83" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-83"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-84" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-84" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-84"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Autofire&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-85" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-85" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-85"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Area&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-86" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-86" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-86"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-87" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-87" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-87"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-88" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-88" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-88"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Charges&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-89" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-89" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-89"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stoppable&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-90" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-90" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-90"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Plasma&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Fist"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-91" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-91" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-91"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-92" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-92" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-92"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-93" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-93" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-93"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-94" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-94" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-94"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-95" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-95" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-95"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier ×&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;12; Muscle Weapon; 6 shots; Alternate attack:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-96" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-96" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-96"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;cost halved&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-97" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-97" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-97"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-98" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-98" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-98"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Charges&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-99" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-99" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-99"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-100" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-100" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-100"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Awkward Size&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-101" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-101" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-101"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-102" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-102" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-102"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-103" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-103" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-103"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-104" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-104" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-104"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Size 2: Medium: +2 to be hit for every size attacker is&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-105" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-105" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-105"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;smaller, −2 to be hit for every size attack is larger, 1.5–8&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-106" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-106" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-106"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;tonnes, big horse to bigger than an elephant&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-107" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-107" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-107"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Conditional Ownership&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-108" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-108" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-108"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-109" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-109" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-109"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-110" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-110" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-110"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;UN Army ownership&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-111" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-111" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-111"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Special&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Requirement:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Frequent&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;maintenance"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-112" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-112" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-112"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-113" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-113" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-113"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The git repo with this program and some test data is on &lt;a class="reference external" href="https://github.com/tkurtbond/besm-tools"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enyon Boase is a pregenerated character that I came up for my
&lt;span class="title"&gt;BESM 2ER&lt;/span&gt; rewrite of the &lt;span class="title"&gt;BESM 1E&lt;/span&gt; adventure “Red
Planet, Blue Helmets”, from &lt;span class="title"&gt;Big Robots, Cool Starships&lt;/span&gt;, which
I'm now converting to &lt;span class="title"&gt;BESM 4E&lt;/span&gt;.  The FV2021 Coleopteran is
also from that adventure.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="markdown" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;It's a little better coming from one of &lt;span class="app"&gt;pandoc&lt;/span&gt;'s
variants of Markdown, because you can specify alignment of columns
in some forms of tables, but you still have too little control over
the appearance of the table, and to make tables easy to read you
need more control than you have.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="xeksil" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Xeksil has the “Dimension Walk” attribute.  In the
backstory in my head he's the son of a woman from the Courts of
Chaos (from Zelazny's &lt;span class="series"&gt;Amber Chronicles&lt;/span&gt;) and a man that at
least &lt;em&gt;looks&lt;/em&gt; human (but may not be; I haven't decided yet), so for
Xeksil this ability is “Shadow Shifting”.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="besm" label="besm"/>
    <category term="besm-4e" label="besm 4e"/>
    <category term="big-eyes-small-mouth" label="big eyes small mouth"/>
    <category term="context" label="context"/>
    <category term="docutils" label="docutils"/>
    <category term="groff" label="groff"/>
    <category term="html" label="html"/>
    <category term="pandoc" label="pandoc"/>
    <category term="rest" label="rest"/>
    <category term="restructuredtext" label="restructuredtext"/>
    <category term="rpg" label="rpg"/>
    <category term="yaml" label="yaml"/>
  </entry>
  <entry>
    <title>Maintaining the old ada-mode.el formerly distributed with Emacs</title>
    <id>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</id>
    <updated>2022-12-06T13:28:59-05:00</updated>
    <published>2022-12-06T13:28:59-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/"/>
    <summary type="html">&lt;p&gt;I wrote a &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"&gt;post&lt;/a&gt; about using the old ada-mode.el that used to be
distributed with &lt;span class="app"&gt;Emacs&lt;/span&gt; because I couldn't get the newer,
separate package &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_mono/ada-mode.html"&gt;version&lt;/a&gt; to work for me.&lt;/p&gt;
&lt;p&gt;Well, this morning when I pulled up an Ada file in &lt;span class="app"&gt;Emacs&lt;/span&gt; version
28 there were two problems:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The information to invoke ada-mode on Ada files was not in the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; variable in &lt;span class="app"&gt;Emacs&lt;/span&gt;.  That was easy
enough to fix: add &lt;span class="file"&gt;.ada&lt;/span&gt;, &lt;span class="file"&gt;.ads&lt;/span&gt;, and &lt;span class="file"&gt;.adb&lt;/span&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; (and &lt;span class="file"&gt;.gpr&lt;/span&gt;, too, since Ada mode works
for &lt;span class="app"&gt;gprbuild&lt;/span&gt; files as well):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_3171fdf25a0346d4b76c694574cb6c14-1" name="rest_code_3171fdf25a0346d4b76c694574cb6c14-1" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_3171fdf25a0346d4b76c694574cb6c14-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.gpr$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ada$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ads$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.adb$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_3171fdf25a0346d4b76c694574cb6c14-2" name="rest_code_3171fdf25a0346d4b76c694574cb6c14-2" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_3171fdf25a0346d4b76c694574cb6c14-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'ada-mode&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That was easy enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When I tried to do any indentation &lt;span class="command"&gt;emacs&lt;/span&gt; reported an error,
with the error message “End position is smaller than start
position”.  Eventually I tracked this down to a call to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt;.  It turns out
that somewhere after &lt;span class="app"&gt;Emacs&lt;/span&gt; version 27.2 was released the
&lt;span class="app"&gt;Emacs&lt;/span&gt; developers added a check to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; to
ensure that the &lt;code class="docutils literal"&gt;FROM&lt;/code&gt; argument (which indicates where in the
buffer to start parsing) was less than the &lt;code class="docutils literal"&gt;TO&lt;/code&gt; argument (which
indicates where in the buffer to &lt;strong&gt;stop&lt;/strong&gt; parsing).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Drat.  Drat.  Drat.  Well, looking at the code it was clear that
since &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt; is explicitly searching backwards
that &lt;code class="docutils literal"&gt;TO&lt;/code&gt; would &lt;strong&gt;always&lt;/strong&gt; be smaller than &lt;code class="docutils literal"&gt;FROM&lt;/code&gt;.  So I could
just transpose the s-expressions that found those two values.  I
tried it, and it worked!&lt;/p&gt;
&lt;p&gt;At that point I realized that I had committed to maintain the old
version of ada-mode, at least for myself, and that I'd already talked
about it on my blog and it was small step from there to setting up a
GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt; with the old code, adding an &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/1"&gt;issue&lt;/a&gt; describing the
problem, adding a &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/7ee6fe55862ec615c7fe23d881adfee2d0094770"&gt;commit&lt;/a&gt; with the fix, and then writing this blog
post.&lt;/p&gt;
&lt;p&gt;Somewhere, someone is laughing and enjoying the schadenfreude.  Maybe
this will help someone else.&lt;/p&gt;
&lt;p&gt;And since I already have a GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt;, I ought to document the
first &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/2"&gt;problem&lt;/a&gt; and since it is a documentation problem, put a mention
in the &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/67a79caacd851120fee2bca4704938a2f27e1bba"&gt;README&lt;/a&gt;.&lt;/p&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="ada-mode" label="ada-mode"/>
    <category term="ada-modeel" label="ada-mode.el"/>
    <category term="emacs" label="emacs"/>
  </entry>
  <entry>
    <title>Splitting Strings on a Delimiter in the Ada Programming Language</title>
    <id>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</id>
    <updated>2022-08-05T11:10:39-04:00</updated>
    <published>2022-08-05T11:10:39-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 13:30:34 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I did a search for “splitting strings on a delimiter in the Ada
programming language” recently I did not get many useful results.
Eventually I stumbled over &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-String_005fSplit-g-strspl-ads.html#GNAT-String_005fSplit-g-strspl-ads"&gt;GNAT.String_Split&lt;/a&gt; which is an
instantiation of the generic package &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-Array_005fSplit-g-arrspl-ads.html#GNAT-Array_005fSplit-g-arrspl-ads"&gt;GNAT.Array_Split&lt;/a&gt;.  I also
finally &lt;a class="reference external" href="https://blog.adacore.com/new-strings-package-in-gnatcoll"&gt;found&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings_impl.ads"&gt;GNATCOLL.Strings_Impl&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings.ads"&gt;GNATCOLL.Strings&lt;/a&gt;, its
default instantiation, which looks especially interesting, contains
a split implementation, and which seems to be designed to be a more
efficient string implementation than  than &lt;code class="docutils literal"&gt;Ada.Strings.Unbounded&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, those are all a little complicated, so it might be
appropriate to show a simpler implementation.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;String&lt;/code&gt; type in Ada is a array of characters.  Once
declared, a &lt;code class="docutils literal"&gt;String&lt;/code&gt; variable always has the same length.  That
means that all the strings in an array of strings have to be the same
length.  However, an &lt;code class="docutils literal"&gt;access&lt;/code&gt; (Ada's version of a
pointer) to a &lt;code class="docutils literal"&gt;String&lt;/code&gt; can point to a string of any length, so for
this version we'll return an array of pointers to &lt;code class="docutils literal"&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;String&lt;/code&gt; are defined in &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-3.html"&gt;Ada.Strings.Fixed&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-1" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-2" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-3" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-4" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-5" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-6" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-6"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Ada.Text_IO contains a type, Count, that would conflict with&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-7" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-7"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- the function Ada.Strings.Fixed.Count, so don't "use Ada.Text_IO;"&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-8" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-8"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- instead, make a package the gives it a shorter name, and use all its&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-9" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-9"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- procedures with that as the prefix.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-10" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;ATIO&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="nc"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-11" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;String_Ptr&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-12" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-13" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-14" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-14"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Allocate a new String in a storage pool, initializing it to S, and&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-15" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-15"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- returning an access to it (a pointer).&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-16" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-16"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;  &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-17" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;'(&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-18" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-18"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-19" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-19"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-20" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-20"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-21" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-22" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-22"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-23" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-23"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-24" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-24"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-25" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-25"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-26" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-27" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-28" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-28"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-29" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-30" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-30"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-31" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-31"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-32" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-32"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-33" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-33"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-34" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-34"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-35" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-35"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-36" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-36"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-37" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-38" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-39" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-39"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-40" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-41" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-41"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-42" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-42"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-43" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-43"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-44" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-44"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-45" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-46" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-46"&gt;&lt;/a&gt;      &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-47" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-47"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-48" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-48"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-49" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-49"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-50" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-50"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-51" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-51"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-52" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-52"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-53" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-53"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-54" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-55" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-56" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-57" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-58" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-59" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-60" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-61" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-61"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-62" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-63" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                 &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-64" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-65" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-65"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-66" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-67" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-68" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-68"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-69" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-70" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-70" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-70"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-71" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-71" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-71"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-72" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-72" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-72"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-73" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-73" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-73"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-74" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-74" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-74"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-75" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-75" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-75"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-76" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-76" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-76"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; type in Ada has a maximum capacity and a
current length.  You instantiate a new package for each different
maximum capacity that you want, producing a different type for each.
You can assign any string smaller than or equal to the maximum length,
and the current length is recorded.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-4.html"&gt;Ada.Strings.Bounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_66d697c13a22462c96763600443f7607-1" name="rest_code_66d697c13a22462c96763600443f7607-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-2" name="rest_code_66d697c13a22462c96763600443f7607-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-3" name="rest_code_66d697c13a22462c96763600443f7607-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Bounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-4" name="rest_code_66d697c13a22462c96763600443f7607-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-5" name="rest_code_66d697c13a22462c96763600443f7607-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-6" name="rest_code_66d697c13a22462c96763600443f7607-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-7" name="rest_code_66d697c13a22462c96763600443f7607-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-8" name="rest_code_66d697c13a22462c96763600443f7607-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Strings.Bounded.Generic_Bounded_Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Max&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 128&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-9" name="rest_code_66d697c13a22462c96763600443f7607-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-10" name="rest_code_66d697c13a22462c96763600443f7607-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String_IO&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt; &lt;span class="nc"&gt;Bounded_IO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;B_String&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-11" name="rest_code_66d697c13a22462c96763600443f7607-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-12" name="rest_code_66d697c13a22462c96763600443f7607-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-13" name="rest_code_66d697c13a22462c96763600443f7607-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-14" name="rest_code_66d697c13a22462c96763600443f7607-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-14"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-15" name="rest_code_66d697c13a22462c96763600443f7607-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-15"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-16" name="rest_code_66d697c13a22462c96763600443f7607-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-16"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-17" name="rest_code_66d697c13a22462c96763600443f7607-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-18" name="rest_code_66d697c13a22462c96763600443f7607-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-19" name="rest_code_66d697c13a22462c96763600443f7607-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-20" name="rest_code_66d697c13a22462c96763600443f7607-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-21" name="rest_code_66d697c13a22462c96763600443f7607-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-22" name="rest_code_66d697c13a22462c96763600443f7607-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-23" name="rest_code_66d697c13a22462c96763600443f7607-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-24" name="rest_code_66d697c13a22462c96763600443f7607-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-25" name="rest_code_66d697c13a22462c96763600443f7607-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-26" name="rest_code_66d697c13a22462c96763600443f7607-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-26"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-27" name="rest_code_66d697c13a22462c96763600443f7607-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-27"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-28" name="rest_code_66d697c13a22462c96763600443f7607-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-28"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-29" name="rest_code_66d697c13a22462c96763600443f7607-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-30" name="rest_code_66d697c13a22462c96763600443f7607-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-31" name="rest_code_66d697c13a22462c96763600443f7607-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-31"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-32" name="rest_code_66d697c13a22462c96763600443f7607-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-33" name="rest_code_66d697c13a22462c96763600443f7607-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-33"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-34" name="rest_code_66d697c13a22462c96763600443f7607-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-34"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-35" name="rest_code_66d697c13a22462c96763600443f7607-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-36" name="rest_code_66d697c13a22462c96763600443f7607-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-36"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-37" name="rest_code_66d697c13a22462c96763600443f7607-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-38" name="rest_code_66d697c13a22462c96763600443f7607-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-38"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-39" name="rest_code_66d697c13a22462c96763600443f7607-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-39"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-40" name="rest_code_66d697c13a22462c96763600443f7607-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-41" name="rest_code_66d697c13a22462c96763600443f7607-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-41"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-42" name="rest_code_66d697c13a22462c96763600443f7607-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-43" name="rest_code_66d697c13a22462c96763600443f7607-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-44" name="rest_code_66d697c13a22462c96763600443f7607-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-44"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-45" name="rest_code_66d697c13a22462c96763600443f7607-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-46" name="rest_code_66d697c13a22462c96763600443f7607-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-47" name="rest_code_66d697c13a22462c96763600443f7607-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-47"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-48" name="rest_code_66d697c13a22462c96763600443f7607-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-49" name="rest_code_66d697c13a22462c96763600443f7607-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-50" name="rest_code_66d697c13a22462c96763600443f7607-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-51" name="rest_code_66d697c13a22462c96763600443f7607-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-52" name="rest_code_66d697c13a22462c96763600443f7607-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-53" name="rest_code_66d697c13a22462c96763600443f7607-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-54" name="rest_code_66d697c13a22462c96763600443f7607-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-55" name="rest_code_66d697c13a22462c96763600443f7607-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-56" name="rest_code_66d697c13a22462c96763600443f7607-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-57" name="rest_code_66d697c13a22462c96763600443f7607-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-57"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-58" name="rest_code_66d697c13a22462c96763600443f7607-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-59" name="rest_code_66d697c13a22462c96763600443f7607-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-60" name="rest_code_66d697c13a22462c96763600443f7607-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-61" name="rest_code_66d697c13a22462c96763600443f7607-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-61"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-62" name="rest_code_66d697c13a22462c96763600443f7607-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-63" name="rest_code_66d697c13a22462c96763600443f7607-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-64" name="rest_code_66d697c13a22462c96763600443f7607-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-65" name="rest_code_66d697c13a22462c96763600443f7607-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-66" name="rest_code_66d697c13a22462c96763600443f7607-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-67" name="rest_code_66d697c13a22462c96763600443f7607-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-68" name="rest_code_66d697c13a22462c96763600443f7607-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-68"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; type in Ada grows dynamically as needed,
but is not as time efficient as fixed strings or bounded strings.
For this version, we'll use &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-18-2.html"&gt;Ada.Containers.Vectors&lt;/a&gt; for a
dynamically expending vector, rather than a fixed size vector.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-5.html"&gt;Ada.Strings.Unbounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-1" name="rest_code_5c24738c4496413a8c53286f9df66f0b-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-2" name="rest_code_5c24738c4496413a8c53286f9df66f0b-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-3" name="rest_code_5c24738c4496413a8c53286f9df66f0b-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_Io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-4" name="rest_code_5c24738c4496413a8c53286f9df66f0b-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-5" name="rest_code_5c24738c4496413a8c53286f9df66f0b-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Containers.Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-6" name="rest_code_5c24738c4496413a8c53286f9df66f0b-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-7" name="rest_code_5c24738c4496413a8c53286f9df66f0b-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;Unbounded_String_Vectors&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-8" name="rest_code_5c24738c4496413a8c53286f9df66f0b-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Containers.Vectors&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;Natural&lt;span class="p"&gt;,&lt;/span&gt; Unbounded_String&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-9" name="rest_code_5c24738c4496413a8c53286f9df66f0b-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-10" name="rest_code_5c24738c4496413a8c53286f9df66f0b-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-11" name="rest_code_5c24738c4496413a8c53286f9df66f0b-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-12" name="rest_code_5c24738c4496413a8c53286f9df66f0b-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-12"&gt;&lt;/a&gt;                &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="n"&gt;To_Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-13" name="rest_code_5c24738c4496413a8c53286f9df66f0b-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-13"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;subtype&lt;/span&gt; &lt;span class="kt"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-14" name="rest_code_5c24738c4496413a8c53286f9df66f0b-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-15" name="rest_code_5c24738c4496413a8c53286f9df66f0b-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-15"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-16" name="rest_code_5c24738c4496413a8c53286f9df66f0b-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-16"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-17" name="rest_code_5c24738c4496413a8c53286f9df66f0b-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-18" name="rest_code_5c24738c4496413a8c53286f9df66f0b-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-19" name="rest_code_5c24738c4496413a8c53286f9df66f0b-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-20" name="rest_code_5c24738c4496413a8c53286f9df66f0b-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-21" name="rest_code_5c24738c4496413a8c53286f9df66f0b-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-22" name="rest_code_5c24738c4496413a8c53286f9df66f0b-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-23" name="rest_code_5c24738c4496413a8c53286f9df66f0b-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-24" name="rest_code_5c24738c4496413a8c53286f9df66f0b-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-25" name="rest_code_5c24738c4496413a8c53286f9df66f0b-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-26" name="rest_code_5c24738c4496413a8c53286f9df66f0b-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-26"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-27" name="rest_code_5c24738c4496413a8c53286f9df66f0b-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-27"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-28" name="rest_code_5c24738c4496413a8c53286f9df66f0b-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-28"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-29" name="rest_code_5c24738c4496413a8c53286f9df66f0b-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-29"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-30" name="rest_code_5c24738c4496413a8c53286f9df66f0b-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-31" name="rest_code_5c24738c4496413a8c53286f9df66f0b-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-32" name="rest_code_5c24738c4496413a8c53286f9df66f0b-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-32"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-33" name="rest_code_5c24738c4496413a8c53286f9df66f0b-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-33"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-34" name="rest_code_5c24738c4496413a8c53286f9df66f0b-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-35" name="rest_code_5c24738c4496413a8c53286f9df66f0b-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-35"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-36" name="rest_code_5c24738c4496413a8c53286f9df66f0b-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-36"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-37" name="rest_code_5c24738c4496413a8c53286f9df66f0b-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-37"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-38" name="rest_code_5c24738c4496413a8c53286f9df66f0b-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-39" name="rest_code_5c24738c4496413a8c53286f9df66f0b-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-39"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-40" name="rest_code_5c24738c4496413a8c53286f9df66f0b-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-40"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-41" name="rest_code_5c24738c4496413a8c53286f9df66f0b-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-41"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;First_Index&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Last_Index&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-42" name="rest_code_5c24738c4496413a8c53286f9df66f0b-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-43" name="rest_code_5c24738c4496413a8c53286f9df66f0b-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-44" name="rest_code_5c24738c4496413a8c53286f9df66f0b-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-44"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-45" name="rest_code_5c24738c4496413a8c53286f9df66f0b-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-45"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-46" name="rest_code_5c24738c4496413a8c53286f9df66f0b-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-46"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-47" name="rest_code_5c24738c4496413a8c53286f9df66f0b-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-48" name="rest_code_5c24738c4496413a8c53286f9df66f0b-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-49" name="rest_code_5c24738c4496413a8c53286f9df66f0b-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-50" name="rest_code_5c24738c4496413a8c53286f9df66f0b-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-51" name="rest_code_5c24738c4496413a8c53286f9df66f0b-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-52" name="rest_code_5c24738c4496413a8c53286f9df66f0b-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-53" name="rest_code_5c24738c4496413a8c53286f9df66f0b-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-54" name="rest_code_5c24738c4496413a8c53286f9df66f0b-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-55" name="rest_code_5c24738c4496413a8c53286f9df66f0b-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-56" name="rest_code_5c24738c4496413a8c53286f9df66f0b-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-57" name="rest_code_5c24738c4496413a8c53286f9df66f0b-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-58" name="rest_code_5c24738c4496413a8c53286f9df66f0b-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-58"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-59" name="rest_code_5c24738c4496413a8c53286f9df66f0b-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-60" name="rest_code_5c24738c4496413a8c53286f9df66f0b-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-61" name="rest_code_5c24738c4496413a8c53286f9df66f0b-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-62" name="rest_code_5c24738c4496413a8c53286f9df66f0b-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-62"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-63" name="rest_code_5c24738c4496413a8c53286f9df66f0b-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-64" name="rest_code_5c24738c4496413a8c53286f9df66f0b-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-65" name="rest_code_5c24738c4496413a8c53286f9df66f0b-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-66" name="rest_code_5c24738c4496413a8c53286f9df66f0b-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-67" name="rest_code_5c24738c4496413a8c53286f9df66f0b-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-68" name="rest_code_5c24738c4496413a8c53286f9df66f0b-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-68"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-69" name="rest_code_5c24738c4496413a8c53286f9df66f0b-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="programming" label="programming"/>
    <category term="splitting-strings" label="splitting strings"/>
    <category term="splitting-strings-in-ada" label="splitting strings in ada"/>
  </entry>
  <entry>
    <title>Using the old version of Ada Mode for Emacs</title>
    <id>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</id>
    <updated>2022-07-09T22:20:40-04:00</updated>
    <published>2022-07-09T22:20:40-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 14:33:55 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of things to like about the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language;
it seems to have a solid core of users, enough to support multiple
commercial implementations and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Free_software"&gt;free/libre software&lt;/a&gt; implementation
that is part of the &lt;a class="reference external" href="https://gcc.gnu.org/"&gt;GNU Compiler Collection&lt;/a&gt;.  I occasionally use it
myself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However:&lt;/strong&gt; I'm sure that the current version of &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; for
&lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; (available as an &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;ELPA&lt;/a&gt; &lt;a class="reference external" href="https://elpa.gnu.org/packages/ada-mode.html"&gt;package&lt;/a&gt;, and thus not included in
&lt;span class="app"&gt;Emacs&lt;/span&gt; itself), which provides smart editing for the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;
programming language, and uses an external parser for the indentation,
fontification&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#fontification" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, and navigation engine, is wonderful
if you can get it working, but I have &lt;strong&gt;never&lt;/strong&gt; been able to get it to
work.  My most recent try was today on Fedora 36 using GNAT 12.1.1
20220507 (Red Hat 12.1.1-1).&lt;/p&gt;
&lt;p&gt;Here's what happened when I tried to build the Ada code for the
parser, which is supplied as part of the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-mode&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ ./build.sh
ada_mode_wisi_parse.gpr:44:26: warning: object directory "obj" not found
Setup
   [mkdir]        object directory for project Ada_Mode_Wisi_Parse
Compile
   [Ada]          ada_mode_wisi_lalr_parse.ads
   [Ada]          ada_mode_wisi_lr1_parse.ads
   [Ada]          run_ada_lalr_parse.ads
   [Ada]          run_ada_lr1_parse.ads
   [Ada]          gpr_mode_wisi_parse.ads
   [Ada]          run_gpr_parse.ads
   [Ada]          gpr_query.adb
   [C]            wisitoken_grammar_re2c.c
   [C]            ada_re2c.c
   [C]            gpr_re2c.c
   [Ada]          ada_process_actions.adb
   [Ada]          ada_process_lr1_main.adb
   [Ada]          gen_run_wisi_lr_text_rep_parse.adb
   [Ada]          run_wisi_common_parse.adb
   [Ada]          wisi.adb
gnatcoll-sql.adb:742:07: error: ambiguous expression (cannot resolve "Append")
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:280, instance at gnatcoll-sql.ads:1109
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:270, instance at gnatcoll-sql.ads:1109

   compilation of gpr_query.adb failed

gprbuild: *** compilation phase failed&lt;/pre&gt;
&lt;p&gt;Sigh.  Without the external parser the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; is
completely unworkable: it doesn't even do indentation correctly, much
less do fontification.&lt;/p&gt;
&lt;p&gt;However, when I did some Ada work a number of years ago, I was ok
with the version that used to be in &lt;span class="app"&gt;Emacs&lt;/span&gt; itself.  So I dug it
out of the &lt;a class="reference external" href="https://savannah.gnu.org/git/?group=emacs"&gt;Emacs git repository&lt;/a&gt; at &lt;a class="reference external" href="https://savannah.gnu.org"&gt;savannah.gnu.org&lt;/a&gt;.  Basically,
I cloned the git repository and then figured out what commit it was
deleted in by doing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git rev-list HEAD -n 1 -- lisp/progmodes/ada-mode.el
a13c64204c8ead966789abf8efe176e4f2d4f599&lt;/pre&gt;
&lt;p&gt;Then I checked out the files involved:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git checkout a13c64204c8ead966789abf8efe176e4f2d4f599^ lisp/progmodes/ada-mode.el lisp/progmodes/ada-prj.el lisp/progmodes/ada-stmt.el lisp/progmodes/ada-xref.el doc/misc/ada-mode.texi&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;^&lt;/code&gt; at the end of the commit hash says to get the previous
commit.&lt;/p&gt;
&lt;p&gt;You'll also need &lt;span class="file"&gt;doc/docstyle.texi&lt;/span&gt; and
&lt;span class="file"&gt;doc/doclicense.texi&lt;/span&gt; if you want to build documentation from
&lt;span class="file"&gt;ada-mode.texi&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And I've put the files in a &lt;a class="reference external" href="https://tkurtbond.github.io/emacs/old-ada-mode.zip"&gt;zip file&lt;/a&gt; for anybody who is in the same
situation as I was, along with the generated documentation files
&lt;span class="file"&gt;.info&lt;/span&gt;, &lt;span class="file"&gt;.html&lt;/span&gt;, and &lt;span class="file"&gt;.pdf&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Just put them somewhere on your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;load-path&lt;/span&gt;&lt;/code&gt; and add &lt;code class="docutils literal"&gt;(autoload
&lt;span class="pre"&gt;'ada-mode&lt;/span&gt; &lt;span class="pre"&gt;"ada-mode")&lt;/span&gt;&lt;/code&gt; to your emacs config file.&lt;/p&gt;
&lt;p&gt;I'm sure the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; has a lot more useful features, and
I'd love to use it, but
this at least lets me edit with automatic indentation, formatting, and
fontification.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="fontification" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;‘Fontification’ is the process of displaying source code with
different font properties (such as color and typeface) for
differing syntactic roles.  &lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; and many other editors do this
to make it easier to distinguish different parts of the source
code, to help prevent errors.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!--  --&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="ada-mode" label="ada-mode"/>
    <category term="ada-modeel" label="ada-mode.el"/>
    <category term="emacs" label="emacs"/>
    <category term="freelibre-software" label="free/libre software"/>
  </entry>
  <entry>
    <title>Lisp-style trampolines in Common Lisp, C, Ada, Oberon-2, and Revised Oberon</title>
    <id>https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/</id>
    <updated>2022-06-14T15:49:55-04:00</updated>
    <published>2022-06-14T15:49:55-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2024-05-29 15:13:15 EDT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Are you familiar with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#High-level_programming"&gt;lisp-style trampolines&lt;/a&gt;?  A trampoline is a
loop that iteratively invokes functions that return functions.  The
previous link will lead you through &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#cite_note-Baker_1995-1"&gt;CONS Should Not CONS Its
Arguments, Part II: Cheney on the M.T.A.&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/214448.214454"&gt;PDF version&lt;/a&gt;; see p. 17
in the original publication, but that is the first page of the PDF
that link eventually leads to), which, while saying you should just go
ahead and convert to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Continuation-passing_style"&gt;Continuation-passing style&lt;/a&gt; form (CPS),
mentions in passing &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/151333.151343"&gt;No assembly required: compiling standard ML to C&lt;/a&gt;,
(see p. 168 in the original publication, which is the page 8 of the
PDF that link eventually leads to) which leads you to &lt;a class="reference external" href="https://dspace.mit.edu/handle/1721.1/6913"&gt;RABBIT: A
Compiler for SCHEME&lt;/a&gt;, where the concept is discussed under the name
the "SCHEME UUO handler" (see p. 23–24).&lt;/p&gt;
&lt;p&gt;Why is this useful?  It allows you to compile a language that requires
proper &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Tail_call"&gt;tail call&lt;/a&gt; optimization to one that does not provide that.
For instance, if you wanted to compile Scheme, which requires proper
tail call optimization, to Common Lisp, which does not require proper
tail call optimization, you can't just translate Scheme functions
directly into Common Lisp functions, because tail calls allocate stack
space, and eventually the stack will run out of space.&lt;/p&gt;
&lt;p&gt;Here's an example that will run forever in any standard confirming
Scheme, &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/forever.scm"&gt;forever.scm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code scheme"&gt;&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-1" name="rest_code_d977b751d26a43789f6d8262985b51a0-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever, because with tail call optimization, the stack&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-2" name="rest_code_d977b751d26a43789f6d8262985b51a0-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; never runs out!&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-3" name="rest_code_d977b751d26a43789f6d8262985b51a0-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-4" name="rest_code_d977b751d26a43789f6d8262985b51a0-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-5" name="rest_code_d977b751d26a43789f6d8262985b51a0-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-6" name="rest_code_d977b751d26a43789f6d8262985b51a0-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;set!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-7" name="rest_code_d977b751d26a43789f6d8262985b51a0-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-8" name="rest_code_d977b751d26a43789f6d8262985b51a0-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-9" name="rest_code_d977b751d26a43789f6d8262985b51a0-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_d977b751d26a43789f6d8262985b51a0-10" name="rest_code_d977b751d26a43789f6d8262985b51a0-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_d977b751d26a43789f6d8262985b51a0-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/not_forever.lisp"&gt;not_forever.lisp&lt;/a&gt;, the same thing in Common Lisp:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-1" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse until the stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-2" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defparameter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-3" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-4" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-5" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;incf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-6" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #~d~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-7" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-8" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_0b28f40ec1344d3f8251bbae71599a84-9" name="rest_code_0b28f40ec1344d3f8251bbae71599a84-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0b28f40ec1344d3f8251bbae71599a84-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, some Common Lisp implementations don't do tail call
optimization, and some &lt;strong&gt;do&lt;/strong&gt;.  Some don't do tail call optimization
unless you compile the functions in question.&lt;/p&gt;
&lt;p&gt;So, for instance, if I load that file into GNU CLISP 2.49.92, the
function executes about 4668 times and then &lt;span class="app"&gt;CLISP&lt;/span&gt; dies with the
error message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;*** - Lisp stack overflow. RESET&lt;/pre&gt;
&lt;p&gt;However if I compile that file in &lt;span class="app"&gt;CLISP&lt;/span&gt; with the Common Lisp function
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;compile-file&lt;/span&gt;&lt;/code&gt; and then load the resulting &lt;span class="file"&gt;.fas&lt;/span&gt; file into
&lt;span class="app"&gt;CLISP&lt;/span&gt;, it will run forever, because &lt;span class="app"&gt;CLISP&lt;/span&gt; does tail call
optimization when it compiles code.&lt;/p&gt;
&lt;p&gt;Furthermore, if I load that file into &lt;span class="app"&gt;SBCL&lt;/span&gt; it will run forever,
because &lt;span class="app"&gt;SBCL&lt;/span&gt; does tail call optimization by default.&lt;/p&gt;
&lt;p&gt;&lt;span class="app"&gt;ECL&lt;/span&gt; is another Common Lisp system where if you load that file
into  an interactive session it will die with stack overflow, but if
you compile that file into an executable it will run forever.&lt;/p&gt;
&lt;p&gt;So, suppose you wanted to translate the Scheme code into Common Lisp,
for an implementation that does not do tail call optimization.  You'd
use a trampoline to make sure the stack doesn't overflow.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline.lisp"&gt;trampoline.lisp&lt;/a&gt;, a trampoline in Common Lisp that runs
through three functions and then stops, for simplicity:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-1" name="rest_code_811701d9d20c432486d74fccc4777596-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Demonstrate lisp-style trampolines.&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-2" name="rest_code_811701d9d20c432486d74fccc4777596-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-3" name="rest_code_811701d9d20c432486d74fccc4777596-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-4" name="rest_code_811701d9d20c432486d74fccc4777596-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-5" name="rest_code_811701d9d20c432486d74fccc4777596-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-6" name="rest_code_811701d9d20c432486d74fccc4777596-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-7" name="rest_code_811701d9d20c432486d74fccc4777596-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-8" name="rest_code_811701d9d20c432486d74fccc4777596-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-9" name="rest_code_811701d9d20c432486d74fccc4777596-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-10" name="rest_code_811701d9d20c432486d74fccc4777596-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-11" name="rest_code_811701d9d20c432486d74fccc4777596-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-12" name="rest_code_811701d9d20c432486d74fccc4777596-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-13" name="rest_code_811701d9d20c432486d74fccc4777596-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-14" name="rest_code_811701d9d20c432486d74fccc4777596-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-15" name="rest_code_811701d9d20c432486d74fccc4777596-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_811701d9d20c432486d74fccc4777596-16" name="rest_code_811701d9d20c432486d74fccc4777596-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_811701d9d20c432486d74fccc4777596-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline_forever.lisp"&gt;trampoline_forever.lisp&lt;/a&gt;, a trampoline in Common Lisp that
runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-1" name="rest_code_1b93f88471b4415da8062dc481d398d2-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever without running out of stack space.&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-2" name="rest_code_1b93f88471b4415da8062dc481d398d2-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-3" name="rest_code_1b93f88471b4415da8062dc481d398d2-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-4" name="rest_code_1b93f88471b4415da8062dc481d398d2-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-5" name="rest_code_1b93f88471b4415da8062dc481d398d2-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-6" name="rest_code_1b93f88471b4415da8062dc481d398d2-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-7" name="rest_code_1b93f88471b4415da8062dc481d398d2-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-8" name="rest_code_1b93f88471b4415da8062dc481d398d2-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-9" name="rest_code_1b93f88471b4415da8062dc481d398d2-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-10" name="rest_code_1b93f88471b4415da8062dc481d398d2-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-11" name="rest_code_1b93f88471b4415da8062dc481d398d2-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-12" name="rest_code_1b93f88471b4415da8062dc481d398d2-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-13" name="rest_code_1b93f88471b4415da8062dc481d398d2-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-14" name="rest_code_1b93f88471b4415da8062dc481d398d2-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-15" name="rest_code_1b93f88471b4415da8062dc481d398d2-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-16" name="rest_code_1b93f88471b4415da8062dc481d398d2-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-17" name="rest_code_1b93f88471b4415da8062dc481d398d2-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"trampoline call #~s~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1b93f88471b4415da8062dc481d398d2-18" name="rest_code_1b93f88471b4415da8062dc481d398d2-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1b93f88471b4415da8062dc481d398d2-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you can do the same things in C.  First, here's
&lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/not_forever.c"&gt;not_forever.c&lt;/a&gt;, a program in C that will (usually) die with a stack
overflow:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-1" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-2" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-2"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   Unless the compiler does tail-call optimization. */&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-3" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-4" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-5" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="cm"&gt;/* Number of times f has been called. */&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-6" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-7" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-8" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-9" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-10" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-11" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-12" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-13" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-14" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-14"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-15" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-16" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-17" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-18" name="rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e51b5ccf12fa47beaba0c02e0e9e5003-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I say usually, because tail call optimization is not required by the
standard, and many C compilers do not do it.  For instance, &lt;span class="app"&gt;gcc&lt;/span&gt;
doesn't do tail call optimization &lt;strong&gt;unless&lt;/strong&gt; you specify
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-foptimize-sibling-calls&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O2&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O3&lt;/span&gt;&lt;/code&gt;, or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-Os&lt;/span&gt;&lt;/code&gt;.  If I
don't specify any of those options, on my system that program dies
with the error &lt;code class="docutils literal"&gt;Segmentation fault: 11&lt;/code&gt; after call #523932.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline.c"&gt;trampoline.c&lt;/a&gt;, the limited trampoline in C:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-1" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Demonstrate lisp-style trampolines. */&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-2" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-3" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-4" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-5" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-6" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-7" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-7"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-8" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-9" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-10" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-11" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-12" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-13" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-14" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-14"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-15" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-16" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-17" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-18" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-19" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-20" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-20"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-21" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-21"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-22" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-23" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-24" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-25" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-25"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-26" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-27" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-28" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-28"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-29" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-29"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-30" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-31" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-32" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-33" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-34" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_16faa3186db641d2b3db9eb455d3e5c2-35" name="rest_code_16faa3186db641d2b3db9eb455d3e5c2-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_16faa3186db641d2b3db9eb455d3e5c2-35"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice this works by converting pointers to functions to pointers to void
— it doesn't even require any explicit casting!&lt;/p&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline_forever.c"&gt;trampoline_forever.c&lt;/a&gt;, the trampoline that runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-1" name="rest_code_806f3683ace54fdab96589fcafce178d-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse forever without running out of stack spacc. */&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-2" name="rest_code_806f3683ace54fdab96589fcafce178d-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-3" name="rest_code_806f3683ace54fdab96589fcafce178d-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-4" name="rest_code_806f3683ace54fdab96589fcafce178d-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-5" name="rest_code_806f3683ace54fdab96589fcafce178d-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-6" name="rest_code_806f3683ace54fdab96589fcafce178d-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* Forward declaration. */&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-7" name="rest_code_806f3683ace54fdab96589fcafce178d-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-8" name="rest_code_806f3683ace54fdab96589fcafce178d-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-8"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-9" name="rest_code_806f3683ace54fdab96589fcafce178d-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-9"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-10" name="rest_code_806f3683ace54fdab96589fcafce178d-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-11" name="rest_code_806f3683ace54fdab96589fcafce178d-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-12" name="rest_code_806f3683ace54fdab96589fcafce178d-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-13" name="rest_code_806f3683ace54fdab96589fcafce178d-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-14" name="rest_code_806f3683ace54fdab96589fcafce178d-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-15" name="rest_code_806f3683ace54fdab96589fcafce178d-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-15"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-16" name="rest_code_806f3683ace54fdab96589fcafce178d-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-16"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-17" name="rest_code_806f3683ace54fdab96589fcafce178d-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-18" name="rest_code_806f3683ace54fdab96589fcafce178d-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-19" name="rest_code_806f3683ace54fdab96589fcafce178d-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-20" name="rest_code_806f3683ace54fdab96589fcafce178d-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-21" name="rest_code_806f3683ace54fdab96589fcafce178d-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-22" name="rest_code_806f3683ace54fdab96589fcafce178d-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-22"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-23" name="rest_code_806f3683ace54fdab96589fcafce178d-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-23"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-24" name="rest_code_806f3683ace54fdab96589fcafce178d-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-25" name="rest_code_806f3683ace54fdab96589fcafce178d-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-26" name="rest_code_806f3683ace54fdab96589fcafce178d-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-27" name="rest_code_806f3683ace54fdab96589fcafce178d-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-28" name="rest_code_806f3683ace54fdab96589fcafce178d-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-29" name="rest_code_806f3683ace54fdab96589fcafce178d-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-30" name="rest_code_806f3683ace54fdab96589fcafce178d-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-30"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-31" name="rest_code_806f3683ace54fdab96589fcafce178d-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-31"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-32" name="rest_code_806f3683ace54fdab96589fcafce178d-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-32"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-33" name="rest_code_806f3683ace54fdab96589fcafce178d-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-34" name="rest_code_806f3683ace54fdab96589fcafce178d-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-35" name="rest_code_806f3683ace54fdab96589fcafce178d-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-36" name="rest_code_806f3683ace54fdab96589fcafce178d-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_806f3683ace54fdab96589fcafce178d-37" name="rest_code_806f3683ace54fdab96589fcafce178d-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_806f3683ace54fdab96589fcafce178d-37"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, here's where C's weak typing lets it get away with things that
more strongly typed languages don't.  Notice the declaration of the
trampoline type:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_23ebe666a0a7414bb4df1019db41a5f0-1" name="rest_code_23ebe666a0a7414bb4df1019db41a5f0-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_23ebe666a0a7414bb4df1019db41a5f0-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id="mentioning-recursive-types"&gt;Notice how it returns a &lt;code class="docutils literal"&gt;void *&lt;/code&gt;, instead of something more
specific?  That's because if it tried to return something more
specific, it would have to have a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;: that is to say, while
defining the type &lt;code class="docutils literal"&gt;trampoline&lt;/code&gt;, you would use a reference to the
type while defining the type.  It would look something like this:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_0de1ff7a99354585a3b7aeef173edd5d-1" name="rest_code_0de1ff7a99354585a3b7aeef173edd5d-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_0de1ff7a99354585a3b7aeef173edd5d-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and that results in &lt;span class="app"&gt;gcc&lt;/span&gt; issuing the following error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;error: unknown type name 'trampoline'&lt;/pre&gt;
&lt;p&gt;Very few traditional programming languages allow this.  It isn't a
problem in Scheme or Common Lisp because those languages use strong
dynamic typing, where the types are checked at runtime.&lt;/p&gt;
&lt;p&gt;So how do you do this in languages with strong static typing, where
the types are checked at compile time?&lt;/p&gt;
&lt;p&gt;Well, let's try this in some of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; programming language
dialects.  &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; was designed and implemented by Niklaus Wirth
(&lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/"&gt;NW1&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Niklaus_Wirth"&gt;NW2&lt;/a&gt;) as a simplification and generalization of his earlier
languages &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)"&gt;Pascal&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula"&gt;Modula&lt;/a&gt;, and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula-2"&gt;Modula-2&lt;/a&gt;.  (Here's &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon.Report.pdf"&gt;The Programming
Language Oberon (1990)&lt;/a&gt;, the original Oberon language report, in PDF
for reference.)  I find the original Oberon admirable for its
simplicity, strong typing, understandable syntax, and its introduction
of &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; (which organizes &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Record_(computer_science)"&gt;record types&lt;/a&gt; in a
inheritance hierarchy, which with the use of procedure variables
enables object oriented programming in a particularly straightforward
and flexible way) but struggle with its minimalism and how its
standard libraries differ in paradigm from the standard Unix
libraries, since Oberon was used to implement a new operating system,
the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(operating_system)"&gt;Oberon System&lt;/a&gt; with its own completely unique &lt;a class="reference external" href="https://en.wikipedia.org/wiki/API"&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; has a number of dialects. I'm most fond of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;, which
was the second language in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; family, developed by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hanspeter_M%C3%B6ssenb%C3%B6ck"&gt;Hanspeter
Mössenböck&lt;/a&gt; and Niklaus Wirth.  It is a little less minimalist than
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt;, and among a few other things adds type-bound procedures to
the record hierarchy provided by &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt;, providing a
appealingly simple and direct design for object-oriented programming
that was later adopted by the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language in a more
complicated and subtle version, as might be expected by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;'s
plethora of design goals and constraints.  (Here's a couple of papers
that mention it: &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/122028.122033"&gt;Object-oriented programming through type
extension in Ada 9X&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/pdf/10.1145/122028.122033"&gt;ADAOO1PDF&lt;/a&gt;) and &lt;a class="reference external" href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.167.7445&amp;amp;rank=1"&gt;Integrating Object-Oriented
Programming and Protected Objects in Ada 95&lt;/a&gt; (&lt;a class="reference external" href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.167.7445&amp;amp;rep=rep1&amp;amp;type=pdf"&gt;ADAOO2PDF&lt;/a&gt;).  I wish I
knew of a reference that discussed explicitly the process of choosing
&lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; and how they were adopted and adapted in
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Here's a copy of the Oberon-2 language report in PDF (&lt;a class="reference external" href="https://tkurtbond.github.io/Oberon-2/Oberon2.pdf"&gt;O2PDF&lt;/a&gt;) and HTML
(&lt;a class="reference external" href="https://web.archive.org/web/20151104101932/https://cseweb.ucsd.edu/~wgg/CSE131B/oberon2.htm"&gt;O2HTML&lt;/a&gt;), for reference.&lt;/p&gt;
&lt;p&gt;Anyway, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt; has procedure types and procedure variables, so one
would think it would be simple to implement trampolines in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;,
without messing about with pointers.  It turns out to be more
complicated than one would think.&lt;/p&gt;
&lt;p&gt;I'm using &lt;a class="reference external" href="https://github.com/vishaps/voc"&gt;Vishap Oberon&lt;/a&gt;, a free and open source Oberon-2 compiler,
by the way.&lt;/p&gt;
&lt;p&gt;First, here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/NotForever.Mod"&gt;NotForever.Mod&lt;/a&gt;, the standard program with a recursive
function procedure that will overflow the stack.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-1" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-2" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-3" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;LONGINT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;               &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-4" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-5" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-6" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-7" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-7"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-8" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-9" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-10" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-11" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-12" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-13" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-14" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a653fe92505c4483bc81c6d0a8808fc9-15" name="rest_code_a653fe92505c4483bc81c6d0a8808fc9-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a653fe92505c4483bc81c6d0a8808fc9-15"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On my system, this program dies with with the error &lt;code class="docutils literal"&gt;Segmentation
fault: 11&lt;/code&gt; after call #524008.&lt;/p&gt;
&lt;p&gt;Now on to trampolines.  In theory we should be able to declare a type
that is a function procedure that returns other function procedures.
Here's the first attempt at the limited trampoline,
&lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/TrampolineBroken.Mod"&gt;TrampolineBroken.Mod&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-1" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Fail to demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-2" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-3" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-4" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;(* This is an error. *)&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-5" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-6" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-7" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-8" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-9" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-10" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-11" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-12" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-13" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-14" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-15" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-16" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-17" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-18" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-19" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-20" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-21" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-22" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-23" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-24" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-25" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-26" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-27" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-28" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-29" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-30" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-31" name="rest_code_ecc1f0d59aa54e3590b07f7e935f938a-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_ecc1f0d59aa54e3590b07f7e935f938a-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, trying to compile this dies with the following error
message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;TrampolineBroken.Mod  Compiling TrampolineBroken.

   4:   TYPE Thunk = PROCEDURE (): Thunk;
                             ^
    pos   126  err 244  cyclic type definition not allowed

Module compilation failed.&lt;/pre&gt;
&lt;p&gt;As mentioned &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#mentioning-recursive-types"&gt;above&lt;/a&gt;, this is a case of a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;.  Well, drat.&lt;/p&gt;
&lt;p&gt;At this point the immediate reaction is to look at the C version and
try to hack up something analogous using functionality from
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;'s &lt;code class="docutils literal"&gt;SYSTEM&lt;/code&gt; module, but that way lies difficulty,
type errors, and madness.  Instead, you have to step back and think about
things from another viewpoint.  The problem is that we can't declare a
type for a function procedure that returns another function procedure
of its type, because that is recursive.  Instead of trying for a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;, what if we switched to storing the next procedure
to be run in a global variable, &lt;code class="docutils literal"&gt;next&lt;/code&gt;, and having each procedure in
the chain set that to the procedure that should run next?  That should
work!&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/Trampoline.Mod"&gt;Trampoline.Mod&lt;/a&gt;, a version that works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-1" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-2" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-3" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-4" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-5" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-6" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-7" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-8" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-9" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-10" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-11" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-12" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-13" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-14" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-15" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-16" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-17" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-18" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-19" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-20" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-21" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-22" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-23" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-24" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-25" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-26" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-27" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-28" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-29" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-30" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-31" name="rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a51a7f9c54c64cf09cb405d43f08c1b2-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/TrampolineForever.Mod"&gt;TrampolineForever.Mod&lt;/a&gt;, which also works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-1" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-2" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-3" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-4" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-5" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-6" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-7" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-8" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-9" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-10" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-11" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-12" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-13" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-14" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-15" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-16" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-17" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-18" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-19" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-20" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-21" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-22" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-23" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-24" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-25" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-26" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-27" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-28" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-29" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-30" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-31" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-32" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-33" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-34" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-35" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-36" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-37" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-38" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a927d023aa574544a2cd5b34b32ddf6a-39" name="rest_code_a927d023aa574544a2cd5b34b32ddf6a-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a927d023aa574544a2cd5b34b32ddf6a-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wirth has continued to work on Oberon, producing an even more
minimalist revision, often know as Oberon-07, or &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.
(Here's the &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon07.Report.pdf"&gt;The Programming Language Oberon-07 (Revised Oberon)&lt;/a&gt; in
PDF, for reference.)  Unfortunately, he removed forward declarations
and the &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; type, which means we have to make some minor
changes.&lt;/p&gt;
&lt;p&gt;I'm using OBNC (&lt;a class="reference external" href="https://miasap.se/obnc/"&gt;OBNC1&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/GunterMueller/OBNC"&gt;OBNC2&lt;/a&gt;) for &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/NotForever.Mod"&gt;Revised Oberon NotForever.Mod&lt;/a&gt;, with &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; replaced
by &lt;code class="docutils literal"&gt;INTEGER&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-1" name="rest_code_91a814dfe00941cda7721d6f7db1c317-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-2" name="rest_code_91a814dfe00941cda7721d6f7db1c317-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-3" name="rest_code_91a814dfe00941cda7721d6f7db1c317-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-4" name="rest_code_91a814dfe00941cda7721d6f7db1c317-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-4"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;(* Alas, no more LONGINT. *)&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-5" name="rest_code_91a814dfe00941cda7721d6f7db1c317-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-6" name="rest_code_91a814dfe00941cda7721d6f7db1c317-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-7" name="rest_code_91a814dfe00941cda7721d6f7db1c317-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-8" name="rest_code_91a814dfe00941cda7721d6f7db1c317-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-9" name="rest_code_91a814dfe00941cda7721d6f7db1c317-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-10" name="rest_code_91a814dfe00941cda7721d6f7db1c317-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-11" name="rest_code_91a814dfe00941cda7721d6f7db1c317-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-12" name="rest_code_91a814dfe00941cda7721d6f7db1c317-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-13" name="rest_code_91a814dfe00941cda7721d6f7db1c317-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-13"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-14" name="rest_code_91a814dfe00941cda7721d6f7db1c317-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-15" name="rest_code_91a814dfe00941cda7721d6f7db1c317-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-15"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_91a814dfe00941cda7721d6f7db1c317-16" name="rest_code_91a814dfe00941cda7721d6f7db1c317-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_91a814dfe00941cda7721d6f7db1c317-16"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/Trampoline.Mod"&gt;Revised Oberon Trampoline.Mod&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-1" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-2" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-3" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-4" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-5" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-6" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-7" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-8" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-9" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-10" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-11" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-12" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-13" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-14" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-15" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-16" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-17" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-18" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-19" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-20" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-21" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-22" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-23" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-24" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-25" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-26" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-27" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-28" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-29" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-30" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_e10f176ef08c476eac03f79ca0c8342f-31" name="rest_code_e10f176ef08c476eac03f79ca0c8342f-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_e10f176ef08c476eac03f79ca0c8342f-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/TrampolineForever.Mod"&gt;Revised Oberon TrampolineForever.Mod&lt;/a&gt;, with a workaround
for the removal of forward declarations of procedures:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-1" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-2" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-3" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-4" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-5" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-6" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-7" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-8" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-9" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-10" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-11" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-12" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-13" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-14" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-15" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-16" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-16"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-17" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-18" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-19" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-20" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-21" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-22" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-22"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-23" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-24" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-25" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-26" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-27" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-28" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-29" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-30" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-31" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-31"&gt;&lt;/a&gt;  &lt;span class="n"&gt;forward&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-32" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-33" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-34" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-35" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-36" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-37" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-38" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-39" name="rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_c18aa5c7fb0d4e7b9c1499ef57ce2c17-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that with forward declarations removed, we just declare a
procedure variable, &lt;code class="docutils literal"&gt;forward&lt;/code&gt;, initialize it before starting the
trampoline, and refer to it instead of &lt;code class="docutils literal"&gt;foo&lt;/code&gt; in procedure &lt;code class="docutils literal"&gt;baz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And of course, since we mentioned &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; above, we should do a version
in that.  I'm using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GNAT"&gt;GNAT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/not_forever.adb"&gt;not_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-1" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-2" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;        &lt;span class="c1"&gt;-- recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-3" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-3"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-4" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times f has been called.&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-5" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-6" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-6"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-7" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-8" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-9" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-10" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-11" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-12" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-13" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-14" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-14"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-15" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-16" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-16"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_19f1fb4f12bd450d8c70da3f57907f85-17" name="rest_code_19f1fb4f12bd450d8c70da3f57907f85-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_19f1fb4f12bd450d8c70da3f57907f85-17"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; has exceptions, we actually catch the exception that
happens when the stack runs out of space:&lt;/p&gt;
&lt;pre class="literal-block"&gt;STORAGE_ERROR raised with i =  262002&lt;/pre&gt;
&lt;p&gt;Again, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; would have the same problem with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;s as
the Oberon dialects.  Don't look at the C version and wander off into
forest of &lt;code class="docutils literal"&gt;Ada.Unchecked_Conversion&lt;/code&gt; because that's unsafe, or the
thicket of &lt;code class="docutils literal"&gt;System.Address_To_Access_Conversions&lt;/code&gt;, because that
one's also unsafe and more complicated (and the simple approach didn't
work, when I tried it).  Instead, do the same thing as we did in the
Oberon dialects, and move to a global variable instead of returning
the values from the functions.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline.adb"&gt;trampoline.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-1" name="rest_code_81f3a9e8a148468ea71270a448de0458-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-2" name="rest_code_81f3a9e8a148468ea71270a448de0458-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;         &lt;span class="c1"&gt;-- Demonstrate lisp-style trampolines.&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-3" name="rest_code_81f3a9e8a148468ea71270a448de0458-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-4" name="rest_code_81f3a9e8a148468ea71270a448de0458-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-5" name="rest_code_81f3a9e8a148468ea71270a448de0458-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-6" name="rest_code_81f3a9e8a148468ea71270a448de0458-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-7" name="rest_code_81f3a9e8a148468ea71270a448de0458-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-7"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-8" name="rest_code_81f3a9e8a148468ea71270a448de0458-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-8"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-9" name="rest_code_81f3a9e8a148468ea71270a448de0458-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-10" name="rest_code_81f3a9e8a148468ea71270a448de0458-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-11" name="rest_code_81f3a9e8a148468ea71270a448de0458-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-11"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-12" name="rest_code_81f3a9e8a148468ea71270a448de0458-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-13" name="rest_code_81f3a9e8a148468ea71270a448de0458-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-13"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-14" name="rest_code_81f3a9e8a148468ea71270a448de0458-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-14"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-15" name="rest_code_81f3a9e8a148468ea71270a448de0458-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-16" name="rest_code_81f3a9e8a148468ea71270a448de0458-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-17" name="rest_code_81f3a9e8a148468ea71270a448de0458-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-17"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-18" name="rest_code_81f3a9e8a148468ea71270a448de0458-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-19" name="rest_code_81f3a9e8a148468ea71270a448de0458-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-19"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-20" name="rest_code_81f3a9e8a148468ea71270a448de0458-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-20"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-21" name="rest_code_81f3a9e8a148468ea71270a448de0458-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-22" name="rest_code_81f3a9e8a148468ea71270a448de0458-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-23" name="rest_code_81f3a9e8a148468ea71270a448de0458-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-23"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-24" name="rest_code_81f3a9e8a148468ea71270a448de0458-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-25" name="rest_code_81f3a9e8a148468ea71270a448de0458-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-25"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-26" name="rest_code_81f3a9e8a148468ea71270a448de0458-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-27" name="rest_code_81f3a9e8a148468ea71270a448de0458-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-27"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-28" name="rest_code_81f3a9e8a148468ea71270a448de0458-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-28"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-29" name="rest_code_81f3a9e8a148468ea71270a448de0458-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-29"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_81f3a9e8a148468ea71270a448de0458-30" name="rest_code_81f3a9e8a148468ea71270a448de0458-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_81f3a9e8a148468ea71270a448de0458-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline_forever.adb"&gt;trampoline_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-1" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-2" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-3" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;-- Recurse forever without running out of stack space.&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-4" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-4"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-5" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times through the trampoline.&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-6" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-7" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-7"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-8" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-9" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-9"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-10" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-11" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-11"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- forward declaration.&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-12" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-13" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-13"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-14" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-15" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-16" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-17" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-18" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-19" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-19"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-20" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-21" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-22" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-23" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-24" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-25" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-25"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-26" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-27" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-28" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-29" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-30" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-31" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-32" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-33" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-33"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-34" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-35" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-35"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-36" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-37" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-37"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-38" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-38"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-39" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-39"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-40" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-40" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-40"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-41" name="rest_code_dbe37ec008514d72ac7f79a8e84f7af4-41" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_dbe37ec008514d72ac7f79a8e84f7af4-41"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;Of course, languages with more sophisticated type systems have other
ways of dealing with things, but I haven't investigated them.  I did
stumble across an &lt;a class="reference external" href="https://gist.github.com/rapha/119788"&gt;example&lt;/a&gt; in OCaml (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/OCaml"&gt;OCAML1&lt;/a&gt;, &lt;a class="reference external" href="https://ocaml.org/"&gt;OCAML2&lt;/a&gt;).&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;If you want to play around with this, the code is in a
&lt;a class="reference external" href="https://github.com/tkurtbond/trampolines"&gt;repository&lt;/a&gt; at &lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="c" label="c"/>
    <category term="cheney-on-the-mta" label="cheney on the m.t.a."/>
    <category term="clisp" label="clisp"/>
    <category term="common-lisp" label="common lisp"/>
    <category term="continuation-passing-style" label="continuation-passing style"/>
    <category term="cps" label="cps"/>
    <category term="ecl" label="ecl"/>
    <category term="gcc" label="gcc"/>
    <category term="github" label="github"/>
    <category term="gnat" label="gnat"/>
    <category term="hanspeter-mossenbock" label="hanspeter mössenböck"/>
    <category term="lisp-style-trampolines" label="lisp-style trampolines"/>
    <category term="modula" label="modula"/>
    <category term="modula-2" label="modula-2"/>
    <category term="niklaus-wirth" label="niklaus wirth"/>
    <category term="no-assembly-required" label="no assembly required"/>
    <category term="oberon-system" label="oberon system"/>
    <category term="oberon-2" label="oberon-2"/>
    <category term="oberon-07" label="oberon-07"/>
    <category term="obnc" label="obnc"/>
    <category term="ocaml" label="ocaml"/>
    <category term="pascal" label="pascal"/>
    <category term="rabbit" label="rabbit"/>
    <category term="record-types" label="record types"/>
    <category term="revised-oberon" label="revised oberon"/>
    <category term="sbcl" label="sbcl"/>
    <category term="scheme" label="scheme"/>
    <category term="tail-call" label="tail call"/>
    <category term="tail-call-optimization" label="tail call optimization"/>
    <category term="trampolines" label="trampolines"/>
    <category term="type-extensions" label="type extensions"/>
    <category term="uuo-handler" label="uuo handler"/>
    <category term="vishap-oberon" label="vishap oberon"/>
  </entry>
</feed>
