<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about computer)</title>
  <id>https://tkurtbond.github.io/categories/cat_computer.atom</id>
  <updated>2024-01-21T21:39:16Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/cat_computer.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/cat_computer/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Overcoming reST's limited table control by including raw groff TBL</title>
    <id>https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/</id>
    <updated>2023-02-03T08:31:34-05:00</updated>
    <published>2023-02-03T08:31:34-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2024-01-21 15:55:09 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So.  I have a CHICKEN Scheme program that converts &lt;a class="reference external" href="http://dyskami.ca/besm.html"&gt;Big Eyes Small
Mouth 4E&lt;/a&gt; characters from a YAML definition into &lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredText&lt;/a&gt;
(reST).&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt;‚Äôs (and probably the orginal python &lt;a class="reference external" href="https://docutils.sourceforge.io/"&gt;docutils&lt;/a&gt;‚Äô),
formatting of tables from &lt;span class="app"&gt;reST&lt;/span&gt; is limited and doesn‚Äôt let me do
what I need to do.&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#markdown" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here‚Äôs an image of the BESM 4E character, Xeksil &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#xeksil" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, I played
Wednesday night:&lt;/p&gt;
&lt;img alt="Original charactersheet for Xeksil in :app:`reST` using grid tables" src="https://tkurtbond.github.io/images/xeksil-plain-rst-version.png"&gt;
&lt;p&gt;As you can see, it doesn‚Äôt fully fill the width of the page, and the
first two columns are too wide for the information they contain.&lt;/p&gt;
&lt;p&gt;I‚Äôm contemplating changing the program so that the actual tables are
in &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; format directly, and insert them into the
generated &lt;span class="app"&gt;reST&lt;/span&gt; file in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; directives.  That locks
me into using &lt;span class="app"&gt;pandoc&lt;/span&gt;‚Äôs &lt;span class="app"&gt;groff&lt;/span&gt; &lt;span class="app"&gt;ms&lt;/span&gt; macros output, but I
could just write a new version that outputs ConTeXt (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/ConTeXt"&gt;C1&lt;/a&gt;, &lt;a class="reference external" href="https://wiki.contextgarden.net/Main_Page"&gt;C2&lt;/a&gt;) if I
ever need one‚Ä¶&lt;/p&gt;
&lt;p&gt;As a test, I converted a character and his mecha into raw &lt;span class="app"&gt;groff&lt;/span&gt;
&lt;span class="app"&gt;ms&lt;/span&gt; with &lt;span class="app"&gt;tbl&lt;/span&gt; output.  Here‚Äôs an image of that:&lt;/p&gt;
&lt;img alt="Test character sheet for Enyon Boase in plain groff -ms with TBL." src="https://tkurtbond.github.io/images/enyon-in-groff-ms-directly.png"&gt;
&lt;p&gt;As you can see, the tables fill the width of the text entirely and the
first two columns are narrower and the third column expands to fill
the width of the text.  I was also able to put double lines before and
after each entity, and put single lines after the headers and before
the total lines.&lt;/p&gt;
&lt;p&gt;I think this looks much better.&lt;/p&gt;
&lt;p&gt;Note that the first example is on 5.5‚Äù by 8.5‚Äù page (which I use for
things I‚Äôm going to look at on the screen a lot, because it takes up
less space) and the second example is on 8.5‚Äù by 11‚Äù paper and in two
columns.  It was essentially impossible to have &lt;span class="app"&gt;pandoc&lt;/span&gt; (and I‚Äôm
sure docutils) produce 2 column output and have the &lt;span class="app"&gt;reST&lt;/span&gt;
versions of the tables adapt to the width of the columns.  With the
narrower widths of the first two table columns the third table column
is wide enough that I can use pages with two columns.&lt;/p&gt;
&lt;p&gt;CPB (who I talked about this with earlier) commented: The data is in
YAML now right?  Why not just generate troff?&lt;/p&gt;
&lt;p&gt;Because when I write the actual text of things, I prefer &lt;span class="app"&gt;reST&lt;/span&gt;.
So, for instance, the description of the character or entity I write
in &lt;span class="app"&gt;reST&lt;/span&gt;.  And I like &lt;span class="app"&gt;reST&lt;/span&gt; for the main documents into
which I include these generated files because then I can output to
HTML too.  (Or to ConTexT; I‚Äôve got some documents where I needed
features that ConTexT has and &lt;span class="app"&gt;pandoc&lt;/span&gt;‚Äôs groff -ms output doesn‚Äôt
have.)&lt;/p&gt;
&lt;p&gt;I‚Äôve already written the character formatting program (named
&lt;span class="command"&gt;besm-rst&lt;/span&gt;, originally enough) so that it can output the
table version or a terse version where the different sections are in
normal paragraphs, which is useful because it is much more compact.
Adding a version that outputs &lt;span class="app"&gt;reST&lt;/span&gt; with tables expressed as an
&lt;span class="app"&gt;reST&lt;/span&gt; &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; block that contains the table sections as
&lt;span class="app"&gt;groff -ms&lt;/span&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; source would just be writing another
version of the output routine, selectable with a command line option.&lt;/p&gt;
&lt;p&gt;The original output routine to produce &lt;span class="app"&gt;reST&lt;/span&gt; grid tables and its
support procedures were 315 lines.  The second output routine to
paragraphs and its new support procedures (it uses some of the first
output routine‚Äôs support procedures) was 158 lines.&lt;/p&gt;
&lt;p&gt;It will be interesting to see how long the troff output will be.&lt;/p&gt;
&lt;p&gt;Oh, here is Lieutenant Enyon Boase again, this time in paragraph format:&lt;/p&gt;
&lt;img alt="/images/enyon-terse-plain-rst-version.png" src="https://tkurtbond.github.io/images/enyon-terse-plain-rst-version.png"&gt;
&lt;p&gt;That‚Äôs also a 8.5‚Äù by 11‚Äù page, and as you can see, it‚Äôs much more
compact, but harder for folks to find each individual item.  This is
basically the format that was used in the original BESM 1E and 2E
books, and the table based version appeared in BESM 3E and was
continued in 4E.&lt;/p&gt;
&lt;p&gt;I think the table format is much easier to read.&lt;/p&gt;
&lt;p&gt;Now, when I use the &lt;span class="app"&gt;reST&lt;/span&gt; table output and generate HTML from it
it looks kinda crude:&lt;/p&gt;
&lt;img alt="Character sheet for Enyon Boase using reST grid tables for HTML output." src="https://tkurtbond.github.io/images/enyon-rst-grid-table-html-output.png"&gt;
&lt;p&gt;However, I think I may be able to fix that with CSS.&lt;/p&gt;
&lt;p&gt;The HTML is relatively clean.  (It probably doesn't really need the
width specifications in the colgroup element, but &lt;span class="app"&gt;pandoc&lt;/span&gt; puts
those in.)&lt;/p&gt;
&lt;p&gt;That‚Äôs actually six tables.  If I wrap them in one div with a
particular class I think I can get them formatted right.&lt;/p&gt;
&lt;p&gt;CPB commented: CSS supports printing.&lt;/p&gt;
&lt;p&gt;Yes, there is actually at least one commercial document formatting
system that uses CSS for sophisticated print output, much more
elaborate than what the browsers support, I think.  And there is at
least one open source solution, &lt;a class="reference external" href="https://weasyprint.org/"&gt;weasyprint&lt;/a&gt;, that uses CSS to produce
PDF.&lt;/p&gt;
&lt;p&gt;But I know &lt;span class="app"&gt;tbl&lt;/span&gt; better than CSS. üòâ&lt;/p&gt;
&lt;p&gt;I do have a need for good looking output html for the output of the
program: so I can put it on my blog!  It would be better than images
in cases where I‚Äôm not actually comparing the PDF output of various
things.&lt;/p&gt;
&lt;p&gt;Well, it took me longer than I expected to write the new version of
the output routines for embedded &lt;span class="app"&gt;tbl&lt;/span&gt; in rst: 4¬º hours.  After
the first 2 hours I was fried (it had already been a long day): if I
had stopped then I probably could have finished it the next day in an
hour.  Oh well.  The new output routine and its new supporting
routines were 208 lines long.&lt;/p&gt;
&lt;p&gt;Here's an image of the page produced (probably from the same YAML
file; I have a couple, since one of them was an early test file for
&lt;span class="command"&gt;besm-rst&lt;/span&gt;) using the new output routine, with &lt;span class="app"&gt;reST&lt;/span&gt;
output with &lt;span class="app"&gt;tbl&lt;/span&gt; output in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt;, pulled from the
document with all the pregenerated characters:&lt;/p&gt;
&lt;img alt="Enyon Boase reST output with tbl in raw ms block" src="https://tkurtbond.github.io/images/enyon-boase-rst-output-with-raw-ms-tbl.png"&gt;
&lt;p&gt;And for reference, here is the YAML version of Enyon Boase:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-1" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-2" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Lieutenant Enyon Boase&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-3" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="c1"&gt;# Average: (/ (+ 8 6 6) 3.0) 6.666666666666667&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-4" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Body&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-5" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-6" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;16&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-7" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Mind&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-8" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-9" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-10" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Soul&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-11" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-12" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-13" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-14" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ACV&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-15" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-16" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DCV&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-17" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-18" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DM&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-19" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;5&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-20" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;HP&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-21" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;70&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-22" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;EP&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-23" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;60&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-24" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SV&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-25" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-26" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-27" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Attack Mastery&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-28" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-29" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-30" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Extra Actions&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-31" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-32" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-33" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+1 Extra Action&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-34" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Item:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;FV2021&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Coleopteran"&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-35" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;35&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-36" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Skills&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-37" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-38" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-39" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;20 Skill Points&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-40" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-41" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Defect:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Obsessed&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;by&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Military&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;History"&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-42" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-43" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-44" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-45" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Interrogation&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-46" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-47" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-48" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Law&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-49" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-50" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-51" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-52" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-53" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Leadership&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-54" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-55" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-56" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military Sciences&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-57" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-58" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-59" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Persuasion&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-60" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-61" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-62" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Political Sciences&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-63" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-64" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-65" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stealth&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-66" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-67" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-68" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Visual Arts&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-69" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-70" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-71" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Writing&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-72" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-73" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-74" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_a71e87bef6fa4df8938b71c287b04d9e-75" name="rest_code_a71e87bef6fa4df8938b71c287b04d9e-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_a71e87bef6fa4df8938b71c287b04d9e-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Reports&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is the YAML version of his FV2021 Coleopteran:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-1" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-2" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;FV2021 Coleopteran&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-3" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;BRCS, p. 94=95&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-4" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-5" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;A three-metre talk British-built humanoid combat walker used by&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-6" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;the Canadians on Mars.  They use a new ‚Äúmind-interface‚Äù&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-7" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;neuro-helmet that makes the mecha very agile.  However, if a&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-8" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;different pilot wants to use the mecha, the neuro-helmet must be&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-9" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;‚Äúretuned‚Äù to their brain waves ‚Äî this takes a full day; until&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-10" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;then, halve the Defence Mastery and Combat Technique: Lightning&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-11" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;Reflexes Attribute bonuses.  The mecha are painted standard&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-12" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;colours: UN white, with sky-blue helmets.&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-13" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-14" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Health Points&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-15" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;80&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-16" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-17" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Features&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-18" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-19" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-20" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Radio,&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Inertial&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Naviagion"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-21" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Ground Speed&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-22" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-23" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-24" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Up to 50 kph&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-25" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Armour&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-26" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-27" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-28" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-29" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-30" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Limiter:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Partial:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Thin"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-31" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-32" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Hit thin area with called shot for half Armour Rating; 20 AR;&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-33" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;20 Health Points&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-34" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Combat Technique&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-35" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-36" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-37" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Lightning&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Reflexes:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;major&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;edge&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;on&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Initiative&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rolls"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-38" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Defence Mastery&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-39" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-40" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-41" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+2 to Defense Combat Value&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-42" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Resilient&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-43" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-44" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-45" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-46" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Space: low pressure, high pressure, intense cold, intense&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-47" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;heat, radiation, lack of air&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-48" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Supersense&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-49" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-50" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-51" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Sensors, range 10 km&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-52" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Superstrength&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-53" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-54" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-55" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-56" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Lift 500 kg (a horse); +10 Unarmed Combat Damage;&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-57" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;+2 Muscle Weapons Damage&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-58" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Tough&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-59" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-60" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-61" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+60 Health Points&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-62" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Railgun"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-63" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-64" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-65" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;24&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-66" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-67" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier √ó&lt;/span&gt;&lt;span class="err"&gt;‚Äâ&lt;/span&gt;&lt;span class="no"&gt;9; Range 10 km; fails and cannot be used&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-68" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;again on natural 2 or 3&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-69" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-70" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;5&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-71" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-72" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Unreliable&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-73" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Rocket&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pod"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-74" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-75" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-76" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-76" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-76"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-77" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-77" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-77"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-78" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-78" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-78"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier √ó&lt;/span&gt;&lt;span class="err"&gt;‚Äâ&lt;/span&gt;&lt;span class="no"&gt;9; Autofire: 1 hit if attack exceeds defence&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-79" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-79" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-79"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;by 0‚Äì3, 2 hits if it exceeds by 4‚Äì6, 3 hits if it exceeds by&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-80" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-80" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-80"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;&amp;gt;7‚Äì9, etc.; Area 3m radius; Range 1 km; 3 shots; Can be&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-81" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-81" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-81"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;deflected or destroyed for 1 round; Alternate attack: cost&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-82" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-82" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-82"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;halved&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-83" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-83" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-83"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-84" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-84" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-84"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Autofire&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-85" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-85" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-85"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Area&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-86" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-86" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-86"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-87" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-87" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-87"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-88" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-88" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-88"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Charges&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-89" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-89" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-89"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stoppable&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-90" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-90" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-90"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Plasma&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Fist"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-91" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-91" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-91"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-92" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-92" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-92"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-93" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-93" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-93"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-94" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-94" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-94"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-95" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-95" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-95"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier √ó&lt;/span&gt;&lt;span class="err"&gt;‚Äâ&lt;/span&gt;&lt;span class="no"&gt;12; Muscle Weapon; 6 shots; Alternate attack:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-96" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-96" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-96"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;cost halved&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-97" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-97" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-97"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-98" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-98" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-98"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Charges&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-99" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-99" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-99"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-100" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-100" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-100"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Awkward Size&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-101" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-101" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-101"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-102" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-102" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-102"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-4&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-103" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-103" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-103"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-104" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-104" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-104"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Size 2: Medium: +2 to be hit for every size attacker is&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-105" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-105" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-105"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;smaller, ‚àí2 to be hit for every size attack is larger, 1.5‚Äì8&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-106" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-106" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-106"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;tonnes, big horse to bigger than an elephant&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-107" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-107" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-107"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Conditional Ownership&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-108" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-108" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-108"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-109" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-109" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-109"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-110" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-110" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-110"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;UN Army ownership&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-111" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-111" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-111"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Special&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Requirement:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Frequent&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;maintenance"&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-112" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-112" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-112"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_66bf27a4798d41b09e60a53fef65c5ad-113" name="rest_code_66bf27a4798d41b09e60a53fef65c5ad-113" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_66bf27a4798d41b09e60a53fef65c5ad-113"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The git repo with this program and some test data is on &lt;a class="reference external" href="https://github.com/tkurtbond/besm-tools"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enyon Boase is a pregenerated character that I came up for my
&lt;span class="title"&gt;BESM 2ER&lt;/span&gt; rewrite of the &lt;span class="title"&gt;BESM 1E&lt;/span&gt; adventure ‚ÄúRed
Planet, Blue Helmets‚Äù, from &lt;span class="title"&gt;Big Robots, Cool Starships&lt;/span&gt;, which
I'm now converting to &lt;span class="title"&gt;BESM 4E&lt;/span&gt;.  The FV2021 Coleopteran is
also from that adventure.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="markdown" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;It's a little better coming from one of &lt;span class="app"&gt;pandoc&lt;/span&gt;'s
variants of Markdown, because you can specify alignment of columns
in some forms of tables, but you still have too little control over
the appearance of the table, and to make tables easy to read you
need more control than you have.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="xeksil" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Xeksil has the ‚ÄúDimension Walk‚Äù attribute.  In the
backstory in my head he's the son of a woman from the Courts of
Chaos (from Zelazny's &lt;span class="series"&gt;Amber Chronicles&lt;/span&gt;) and a man that at
least &lt;em&gt;looks&lt;/em&gt; human (but may not be; I haven't decided yet), so for
Xeksil this ability is ‚ÄúShadow Shifting‚Äù.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="besm" label="besm"/>
    <category term="besm-4e" label="besm 4e"/>
    <category term="big-eyes-small-mouth" label="big eyes small mouth"/>
    <category term="context" label="context"/>
    <category term="docutils" label="docutils"/>
    <category term="groff" label="groff"/>
    <category term="html" label="html"/>
    <category term="pandoc" label="pandoc"/>
    <category term="rest" label="rest"/>
    <category term="restructuredtext" label="restructuredtext"/>
    <category term="rpg" label="rpg"/>
    <category term="yaml" label="yaml"/>
  </entry>
  <entry>
    <title>Maintaining the old ada-mode.el formerly distributed with Emacs</title>
    <id>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</id>
    <updated>2022-12-06T13:28:59-05:00</updated>
    <published>2022-12-06T13:28:59-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/"/>
    <summary type="html">&lt;p&gt;I wrote a &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"&gt;post&lt;/a&gt; about using the old ada-mode.el that used to be
distributed with &lt;span class="app"&gt;Emacs&lt;/span&gt; because I couldn't get the newer,
separate package &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_mono/ada-mode.html"&gt;version&lt;/a&gt; to work for me.&lt;/p&gt;
&lt;p&gt;Well, this morning when I pulled up an Ada file in &lt;span class="app"&gt;Emacs&lt;/span&gt; version
28 there were two problems:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The information to invoke ada-mode on Ada files was not in the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; variable in &lt;span class="app"&gt;Emacs&lt;/span&gt;.  That was easy
enough to fix: add &lt;span class="file"&gt;.ada&lt;/span&gt;, &lt;span class="file"&gt;.ads&lt;/span&gt;, and &lt;span class="file"&gt;.adb&lt;/span&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; (and &lt;span class="file"&gt;.gpr&lt;/span&gt;, too, since Ada mode works
for &lt;span class="app"&gt;gprbuild&lt;/span&gt; files as well):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_7a32069564de4463a2c98549fb86db4a-1" name="rest_code_7a32069564de4463a2c98549fb86db4a-1" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_7a32069564de4463a2c98549fb86db4a-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.gpr$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ada$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ads$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.adb$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7a32069564de4463a2c98549fb86db4a-2" name="rest_code_7a32069564de4463a2c98549fb86db4a-2" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_7a32069564de4463a2c98549fb86db4a-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'ada-mode&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That was easy enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When I tried to do any indentation &lt;span class="cmd"&gt;emacs&lt;/span&gt; reported an error,
with the error message ‚ÄúEnd position is smaller than start
position‚Äù.  Eventually I tracked this down to a call to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt;.  It turns out
that somewhere after &lt;span class="app"&gt;Emacs&lt;/span&gt; version 27.2 was released the
&lt;span class="app"&gt;Emacs&lt;/span&gt; developers added a check to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; to
ensure that the &lt;code class="docutils literal"&gt;FROM&lt;/code&gt; argument (which indicates where in the
buffer to start parsing) was less than the &lt;code class="docutils literal"&gt;TO&lt;/code&gt; argument (which
indicates where in the buffer to &lt;strong&gt;stop&lt;/strong&gt; parsing).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Drat.  Drat.  Drat.  Well, looking at the code it was clear that
since &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt; is explicitly searching backwards
that &lt;code class="docutils literal"&gt;TO&lt;/code&gt; would &lt;strong&gt;always&lt;/strong&gt; be smaller than &lt;code class="docutils literal"&gt;FROM&lt;/code&gt;.  So I could
just transpose the s-expressions that found those two values.  I
tried it, and it worked!&lt;/p&gt;
&lt;p&gt;At that point I realized that I had committed to maintain the old
version of ada-mode, at least for myself, and that I'd already talked
about it on my blog and it was small step from there to setting up a
GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt; with the old code, adding an &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/1"&gt;issue&lt;/a&gt; describing the
problem, adding a &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/7ee6fe55862ec615c7fe23d881adfee2d0094770"&gt;commit&lt;/a&gt; with the fix, and then writing this blog
post.&lt;/p&gt;
&lt;p&gt;Somewhere, someone is laughing and enjoying the schadenfreude.  Maybe
this will help someone else.&lt;/p&gt;
&lt;p&gt;And since I already have a GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt;, I ought to document the
first &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/2"&gt;problem&lt;/a&gt; and since it is a documentation problem, put a mention
in the &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/67a79caacd851120fee2bca4704938a2f27e1bba"&gt;README&lt;/a&gt;.&lt;/p&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="ada-mode" label="ada-mode"/>
    <category term="ada-modeel" label="ada-mode.el"/>
    <category term="emacs" label="emacs"/>
  </entry>
  <entry>
    <title>Splitting Strings on a Delimiter in the Ada Programming Language</title>
    <id>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</id>
    <updated>2022-08-05T11:10:39-04:00</updated>
    <published>2022-08-05T11:10:39-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 13:30:34 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I did a search for ‚Äúsplitting strings on a delimiter in the Ada
programming language‚Äù recently I did not get many useful results.
Eventually I stumbled over &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-String_005fSplit-g-strspl-ads.html#GNAT-String_005fSplit-g-strspl-ads"&gt;GNAT.String_Split&lt;/a&gt; which is an
instantiation of the generic package &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-Array_005fSplit-g-arrspl-ads.html#GNAT-Array_005fSplit-g-arrspl-ads"&gt;GNAT.Array_Split&lt;/a&gt;.  I also
finally &lt;a class="reference external" href="https://blog.adacore.com/new-strings-package-in-gnatcoll"&gt;found&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings_impl.ads"&gt;GNATCOLL.Strings_Impl&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings.ads"&gt;GNATCOLL.Strings&lt;/a&gt;, its
default instantiation, which looks especially interesting, contains
a split implementation, and which seems to be designed to be a more
efficient string implementation than  than &lt;code class="docutils literal"&gt;Ada.Strings.Unbounded&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, those are all a little complicated, so it might be
appropriate to show a simpler implementation.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;String&lt;/code&gt; type in Ada is a array of characters.  Once
declared, a &lt;code class="docutils literal"&gt;String&lt;/code&gt; variable always has the same length.  That
means that all the strings in an array of strings have to be the same
length.  However, an &lt;code class="docutils literal"&gt;access&lt;/code&gt; (Ada's version of a
pointer) to a &lt;code class="docutils literal"&gt;String&lt;/code&gt; can point to a string of any length, so for
this version we'll return an array of pointers to &lt;code class="docutils literal"&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;String&lt;/code&gt; are defined in &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-3.html"&gt;Ada.Strings.Fixed&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_038b063abf494fe2bab072e471140895-1" name="rest_code_038b063abf494fe2bab072e471140895-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-2" name="rest_code_038b063abf494fe2bab072e471140895-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-3" name="rest_code_038b063abf494fe2bab072e471140895-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-4" name="rest_code_038b063abf494fe2bab072e471140895-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-5" name="rest_code_038b063abf494fe2bab072e471140895-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-6" name="rest_code_038b063abf494fe2bab072e471140895-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-6"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Ada.Text_IO contains a type, Count, that would conflict with&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-7" name="rest_code_038b063abf494fe2bab072e471140895-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-7"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- the function Ada.Strings.Fixed.Count, so don't "use Ada.Text_IO;"&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-8" name="rest_code_038b063abf494fe2bab072e471140895-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-8"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- instead, make a package the gives it a shorter name, and use all its&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-9" name="rest_code_038b063abf494fe2bab072e471140895-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-9"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- procedures with that as the prefix.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-10" name="rest_code_038b063abf494fe2bab072e471140895-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;ATIO&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="nc"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-11" name="rest_code_038b063abf494fe2bab072e471140895-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;String_Ptr&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-12" name="rest_code_038b063abf494fe2bab072e471140895-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-13" name="rest_code_038b063abf494fe2bab072e471140895-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-14" name="rest_code_038b063abf494fe2bab072e471140895-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-14"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Allocate a new String in a storage pool, initializing it to S, and&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-15" name="rest_code_038b063abf494fe2bab072e471140895-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-15"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- returning an access to it (a pointer).&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-16" name="rest_code_038b063abf494fe2bab072e471140895-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-16"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;  &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-17" name="rest_code_038b063abf494fe2bab072e471140895-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;'(&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-18" name="rest_code_038b063abf494fe2bab072e471140895-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-18"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-19" name="rest_code_038b063abf494fe2bab072e471140895-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-19"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-20" name="rest_code_038b063abf494fe2bab072e471140895-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-20"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-21" name="rest_code_038b063abf494fe2bab072e471140895-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-22" name="rest_code_038b063abf494fe2bab072e471140895-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-22"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-23" name="rest_code_038b063abf494fe2bab072e471140895-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-23"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-24" name="rest_code_038b063abf494fe2bab072e471140895-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-24"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-25" name="rest_code_038b063abf494fe2bab072e471140895-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-25"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-26" name="rest_code_038b063abf494fe2bab072e471140895-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-27" name="rest_code_038b063abf494fe2bab072e471140895-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-28" name="rest_code_038b063abf494fe2bab072e471140895-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-28"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-29" name="rest_code_038b063abf494fe2bab072e471140895-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-30" name="rest_code_038b063abf494fe2bab072e471140895-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-30"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-31" name="rest_code_038b063abf494fe2bab072e471140895-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-31"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-32" name="rest_code_038b063abf494fe2bab072e471140895-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-32"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-33" name="rest_code_038b063abf494fe2bab072e471140895-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-33"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-34" name="rest_code_038b063abf494fe2bab072e471140895-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-34"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-35" name="rest_code_038b063abf494fe2bab072e471140895-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-35"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-36" name="rest_code_038b063abf494fe2bab072e471140895-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-36"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-37" name="rest_code_038b063abf494fe2bab072e471140895-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-38" name="rest_code_038b063abf494fe2bab072e471140895-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-39" name="rest_code_038b063abf494fe2bab072e471140895-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-39"&gt;&lt;/a&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-40" name="rest_code_038b063abf494fe2bab072e471140895-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-41" name="rest_code_038b063abf494fe2bab072e471140895-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-41"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-42" name="rest_code_038b063abf494fe2bab072e471140895-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-42"&gt;&lt;/a&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-43" name="rest_code_038b063abf494fe2bab072e471140895-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-43"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-44" name="rest_code_038b063abf494fe2bab072e471140895-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-44"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-45" name="rest_code_038b063abf494fe2bab072e471140895-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-46" name="rest_code_038b063abf494fe2bab072e471140895-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-46"&gt;&lt;/a&gt;      &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-47" name="rest_code_038b063abf494fe2bab072e471140895-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-47"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-48" name="rest_code_038b063abf494fe2bab072e471140895-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-48"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-49" name="rest_code_038b063abf494fe2bab072e471140895-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-49"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-50" name="rest_code_038b063abf494fe2bab072e471140895-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-50"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-51" name="rest_code_038b063abf494fe2bab072e471140895-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-51"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-52" name="rest_code_038b063abf494fe2bab072e471140895-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-52"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-53" name="rest_code_038b063abf494fe2bab072e471140895-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-53"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-54" name="rest_code_038b063abf494fe2bab072e471140895-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-55" name="rest_code_038b063abf494fe2bab072e471140895-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-56" name="rest_code_038b063abf494fe2bab072e471140895-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-57" name="rest_code_038b063abf494fe2bab072e471140895-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-58" name="rest_code_038b063abf494fe2bab072e471140895-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-59" name="rest_code_038b063abf494fe2bab072e471140895-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-60" name="rest_code_038b063abf494fe2bab072e471140895-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-61" name="rest_code_038b063abf494fe2bab072e471140895-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-61"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-62" name="rest_code_038b063abf494fe2bab072e471140895-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-63" name="rest_code_038b063abf494fe2bab072e471140895-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                 &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-64" name="rest_code_038b063abf494fe2bab072e471140895-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-65" name="rest_code_038b063abf494fe2bab072e471140895-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-65"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-66" name="rest_code_038b063abf494fe2bab072e471140895-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-67" name="rest_code_038b063abf494fe2bab072e471140895-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-68" name="rest_code_038b063abf494fe2bab072e471140895-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-68"&gt;&lt;/a&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-69" name="rest_code_038b063abf494fe2bab072e471140895-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-70" name="rest_code_038b063abf494fe2bab072e471140895-70" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-70"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-71" name="rest_code_038b063abf494fe2bab072e471140895-71" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-71"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-72" name="rest_code_038b063abf494fe2bab072e471140895-72" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-72"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-73" name="rest_code_038b063abf494fe2bab072e471140895-73" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-73"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-74" name="rest_code_038b063abf494fe2bab072e471140895-74" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-74"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-75" name="rest_code_038b063abf494fe2bab072e471140895-75" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-75"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_038b063abf494fe2bab072e471140895-76" name="rest_code_038b063abf494fe2bab072e471140895-76" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_038b063abf494fe2bab072e471140895-76"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; type in Ada has a maximum capacity and a
current length.  You instantiate a new package for each different
maximum capacity that you want, producing a different type for each.
You can assign any string smaller than or equal to the maximum length,
and the current length is recorded.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-4.html"&gt;Ada.Strings.Bounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-1" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-2" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-3" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Bounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-4" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-5" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-6" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-7" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-8" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Strings.Bounded.Generic_Bounded_Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Max&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 128&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-9" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-10" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String_IO&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt; &lt;span class="nc"&gt;Bounded_IO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;B_String&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-11" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-12" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-13" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-14" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-14"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-15" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-15"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-16" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-16"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-17" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-18" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-19" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-20" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-21" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-22" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-23" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-24" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-25" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-26" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-26"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-27" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-27"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-28" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-28"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-29" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-30" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-31" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-31"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-32" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-33" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-33"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-34" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-34"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-35" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-36" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-36"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-37" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-38" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-38"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-39" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-39"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-40" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-41" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-41"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-42" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-43" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-44" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-44"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-45" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-46" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-47" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-47"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-48" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-49" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-50" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-51" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-52" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-53" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-54" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-55" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-56" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-57" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-57"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-58" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-59" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-60" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-61" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-61"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-62" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-63" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-64" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-65" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-66" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-67" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_0117e8e8d902491e97f6cd1f95e583f2-68" name="rest_code_0117e8e8d902491e97f6cd1f95e583f2-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_0117e8e8d902491e97f6cd1f95e583f2-68"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; type in Ada grows dynamically as needed,
but is not as time efficient as fixed strings or bounded strings.
For this version, we'll use &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-18-2.html"&gt;Ada.Containers.Vectors&lt;/a&gt; for a
dynamically expending vector, rather than a fixed size vector.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-5.html"&gt;Ada.Strings.Unbounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-1" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-2" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-3" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_Io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-4" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-5" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Containers.Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-6" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-7" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;Unbounded_String_Vectors&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-8" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Containers.Vectors&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;Natural&lt;span class="p"&gt;,&lt;/span&gt; Unbounded_String&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-9" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-10" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-11" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-12" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-12"&gt;&lt;/a&gt;                &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="n"&gt;To_Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-13" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-13"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;subtype&lt;/span&gt; &lt;span class="kt"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-14" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-15" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-15"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-16" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-16"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-17" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-18" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-19" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-20" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-21" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-22" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-23" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-24" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-25" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-26" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-26"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-27" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-27"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-28" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-28"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-29" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-29"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-30" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-31" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-32" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-32"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-33" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-33"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-34" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-35" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-35"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-36" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-36"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-37" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-37"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-38" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-39" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-39"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-40" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-40"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-41" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-41"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;First_Index&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Last_Index&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-42" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-43" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-44" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-44"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-45" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-45"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-46" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-46"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-47" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-48" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-49" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-50" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-51" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-52" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-53" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-54" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-55" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-56" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-57" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-58" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-58"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-59" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-60" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-61" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-62" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-62"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-63" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-64" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-65" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-66" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-67" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-68" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-68"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_13fc4fda139f49cabf7c1379754eadcf-69" name="rest_code_13fc4fda139f49cabf7c1379754eadcf-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_13fc4fda139f49cabf7c1379754eadcf-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="programming" label="programming"/>
    <category term="splitting-strings" label="splitting strings"/>
    <category term="splitting-strings-in-ada" label="splitting strings in ada"/>
  </entry>
  <entry>
    <title>Using the old version of Ada Mode for Emacs</title>
    <id>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</id>
    <updated>2022-07-09T22:20:40-04:00</updated>
    <published>2022-07-09T22:20:40-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 14:33:55 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of things to like about the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language;
it seems to have a solid core of users, enough to support multiple
commercial implementations and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Free_software"&gt;free/libre software&lt;/a&gt; implementation
that is part of the &lt;a class="reference external" href="https://gcc.gnu.org/"&gt;GNU Compiler Collection&lt;/a&gt;.  I occasionally use it
myself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However:&lt;/strong&gt; I'm sure that the current version of &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; for
&lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; (available as an &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;ELPA&lt;/a&gt; &lt;a class="reference external" href="https://elpa.gnu.org/packages/ada-mode.html"&gt;package&lt;/a&gt;, and thus not included in
&lt;span class="app"&gt;Emacs&lt;/span&gt; itself), which provides smart editing for the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;
programming language, and uses an external parser for the indentation,
fontification&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#fontification" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, and navigation engine, is wonderful
if you can get it working, but I have &lt;strong&gt;never&lt;/strong&gt; been able to get it to
work.  My most recent try was today on Fedora 36 using GNAT 12.1.1
20220507 (Red Hat 12.1.1-1).&lt;/p&gt;
&lt;p&gt;Here's what happened when I tried to build the Ada code for the
parser, which is supplied as part of the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-mode&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ ./build.sh
ada_mode_wisi_parse.gpr:44:26: warning: object directory "obj" not found
Setup
   [mkdir]        object directory for project Ada_Mode_Wisi_Parse
Compile
   [Ada]          ada_mode_wisi_lalr_parse.ads
   [Ada]          ada_mode_wisi_lr1_parse.ads
   [Ada]          run_ada_lalr_parse.ads
   [Ada]          run_ada_lr1_parse.ads
   [Ada]          gpr_mode_wisi_parse.ads
   [Ada]          run_gpr_parse.ads
   [Ada]          gpr_query.adb
   [C]            wisitoken_grammar_re2c.c
   [C]            ada_re2c.c
   [C]            gpr_re2c.c
   [Ada]          ada_process_actions.adb
   [Ada]          ada_process_lr1_main.adb
   [Ada]          gen_run_wisi_lr_text_rep_parse.adb
   [Ada]          run_wisi_common_parse.adb
   [Ada]          wisi.adb
gnatcoll-sql.adb:742:07: error: ambiguous expression (cannot resolve "Append")
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:280, instance at gnatcoll-sql.ads:1109
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:270, instance at gnatcoll-sql.ads:1109

   compilation of gpr_query.adb failed

gprbuild: *** compilation phase failed&lt;/pre&gt;
&lt;p&gt;Sigh.  Without the external parser the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; is
completely unworkable: it doesn't even do indentation correctly, much
less do fontification.&lt;/p&gt;
&lt;p&gt;However, when I did some Ada work a number of years ago, I was ok
with the version that used to be in &lt;span class="app"&gt;Emacs&lt;/span&gt; itself.  So I dug it
out of the &lt;a class="reference external" href="https://savannah.gnu.org/git/?group=emacs"&gt;Emacs git repository&lt;/a&gt; at &lt;a class="reference external" href="https://savannah.gnu.org"&gt;savannah.gnu.org&lt;/a&gt;.  Basically,
I cloned the git repository and then figured out what commit it was
deleted in by doing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git rev-list HEAD -n 1 -- lisp/progmodes/ada-mode.el
a13c64204c8ead966789abf8efe176e4f2d4f599&lt;/pre&gt;
&lt;p&gt;Then I checked out the files involved:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git checkout a13c64204c8ead966789abf8efe176e4f2d4f599^ lisp/progmodes/ada-mode.el lisp/progmodes/ada-prj.el lisp/progmodes/ada-stmt.el lisp/progmodes/ada-xref.el doc/misc/ada-mode.texi&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;^&lt;/code&gt; at the end of the commit hash says to get the previous
commit.&lt;/p&gt;
&lt;p&gt;You'll also need &lt;span class="file"&gt;doc/docstyle.texi&lt;/span&gt; and
&lt;span class="file"&gt;doc/doclicense.texi&lt;/span&gt; if you want to build documentation from
&lt;span class="file"&gt;ada-mode.texi&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And I've put the files in a &lt;a class="reference external" href="https://tkurtbond.github.io/emacs/old-ada-mode.zip"&gt;zip file&lt;/a&gt; for anybody who is in the same
situation as I was, along with the generated documentation files
&lt;span class="file"&gt;.info&lt;/span&gt;, &lt;span class="file"&gt;.html&lt;/span&gt;, and &lt;span class="file"&gt;.pdf&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Just put them somewhere on your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;load-path&lt;/span&gt;&lt;/code&gt; and add &lt;code class="docutils literal"&gt;(autoload
&lt;span class="pre"&gt;'ada-mode&lt;/span&gt; &lt;span class="pre"&gt;"ada-mode")&lt;/span&gt;&lt;/code&gt; to your emacs config file.&lt;/p&gt;
&lt;p&gt;I'm sure the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; has a lot more useful features, and
I'd love to use it, but
this at least lets me edit with automatic indentation, formatting, and
fontification.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="fontification" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;‚ÄòFontification‚Äô is the process of displaying source code with
different font properties (such as color and typeface) for
differing syntactic roles.  &lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; and many other editors do this
to make it easier to distinguish different parts of the source
code, to help prevent errors.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!--  --&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="ada-mode" label="ada-mode"/>
    <category term="ada-modeel" label="ada-mode.el"/>
    <category term="emacs" label="emacs"/>
    <category term="freelibre-software" label="free/libre software"/>
  </entry>
  <entry>
    <title>Lisp-style trampolines in Common Lisp, C, Ada, Oberon-2, and Revised Oberon</title>
    <id>https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/</id>
    <updated>2022-06-14T15:49:55-04:00</updated>
    <published>2022-06-14T15:49:55-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2024-01-21 11:32:05 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Are you familiar with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#High-level_programming"&gt;lisp-style trampolines&lt;/a&gt;?  A trampoline is a
loop that iteratively invokes functions that return functions.  The
previous link will lead you through &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#cite_note-Baker_1995-1"&gt;CONS Should Not CONS Its
Arguments, Part II: Cheney on the M.T.A.&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/214448.214454"&gt;PDF version&lt;/a&gt;; see p. 17
in the original publication, but that is the first page of the PDF
that link eventually leads to), which, while saying you should just go
ahead and convert to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Continuation-passing_style"&gt;Continuation-passing style&lt;/a&gt; form (CPS),
mentions in passing &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/151333.151343"&gt;No assembly required: compiling standard ML to C&lt;/a&gt;,
(see p. 168 in the original publication, which is the page 8 of the
PDF that link eventually leads to) which leads you to &lt;a class="reference external" href="https://dspace.mit.edu/handle/1721.1/6913"&gt;RABBIT: A
Compiler for SCHEME&lt;/a&gt;, where the concept is discussed under the name
the "SCHEME UUO handler" (see p. 23‚Äì24).&lt;/p&gt;
&lt;p&gt;Why is this useful?  It allows you to compile a language that requires
proper &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Tail_call"&gt;tail call&lt;/a&gt; optimization to one that does not provide that.
For instance, if you wanted to compile Scheme, which requires proper
tail call optimization, to Common Lisp, which does not require proper
tail call optimization, you can't just translate Scheme functions
directly into Common Lisp functions, because tail calls allocate stack
space, and eventually the stack will run out of space.&lt;/p&gt;
&lt;p&gt;Here's an example that will run forever in any standard confirming
Scheme, &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/forever.scm"&gt;forever.scm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code scheme"&gt;&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-1" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever, because with tail call optimization, the stack&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-2" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; never runs out!&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-3" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-4" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-5" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-6" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;set!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-7" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-8" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-9" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_173d4ef571bf41d892aaf60909b2dd93-10" name="rest_code_173d4ef571bf41d892aaf60909b2dd93-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_173d4ef571bf41d892aaf60909b2dd93-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/not_forever.lisp"&gt;not_forever.lisp&lt;/a&gt;, the same thing in Common Lisp:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_594fe917880a4247b6426851e245204d-1" name="rest_code_594fe917880a4247b6426851e245204d-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse until the stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-2" name="rest_code_594fe917880a4247b6426851e245204d-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defparameter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-3" name="rest_code_594fe917880a4247b6426851e245204d-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-4" name="rest_code_594fe917880a4247b6426851e245204d-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-5" name="rest_code_594fe917880a4247b6426851e245204d-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;incf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-6" name="rest_code_594fe917880a4247b6426851e245204d-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #~d~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-7" name="rest_code_594fe917880a4247b6426851e245204d-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-8" name="rest_code_594fe917880a4247b6426851e245204d-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_594fe917880a4247b6426851e245204d-9" name="rest_code_594fe917880a4247b6426851e245204d-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_594fe917880a4247b6426851e245204d-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, some Common Lisp implementations don't do tail call
optimization, and some &lt;strong&gt;do&lt;/strong&gt;.  Some don't do tail call optimization
unless you compile the functions in question.&lt;/p&gt;
&lt;p&gt;So, for instance, if I load that file into GNU CLISP 2.49.92, the
function executes about 4668 times and then &lt;span class="app"&gt;CLISP&lt;/span&gt; dies with the
error message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;*** - Lisp stack overflow. RESET&lt;/pre&gt;
&lt;p&gt;However if I compile that file in &lt;span class="app"&gt;CLISP&lt;/span&gt; with the Common Lisp function
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;compile-file&lt;/span&gt;&lt;/code&gt; and then load the resulting &lt;span class="file"&gt;.fas&lt;/span&gt; file into
&lt;span class="app"&gt;CLISP&lt;/span&gt;, it will run forever, because &lt;span class="app"&gt;CLISP&lt;/span&gt; does tail call
optimization when it compiles code.&lt;/p&gt;
&lt;p&gt;Furthermore, if I load that file into &lt;span class="app"&gt;SBCL&lt;/span&gt; it will run forever,
because &lt;span class="app"&gt;SBCL&lt;/span&gt; does tail call optimization by default.&lt;/p&gt;
&lt;p&gt;&lt;span class="app"&gt;ECL&lt;/span&gt; is another Common Lisp system where if you load that file
into  an interactive session it will die with stack overflow, but if
you compile that file into an executable it will run forever.&lt;/p&gt;
&lt;p&gt;So, suppose you wanted to translate the Scheme code into Common Lisp,
for an implementation that does not do tail call optimization.  You'd
use a trampoline to make sure the stack doesn't overflow.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline.lisp"&gt;trampoline.lisp&lt;/a&gt;, a trampoline in Common Lisp that runs
through three functions and then stops, for simplicity:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-1" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Demonstrate lisp-style trampolines.&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-2" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-3" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-4" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-5" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-6" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-7" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-8" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-9" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-10" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-11" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-12" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-13" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-14" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-15" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_eda3d0060ef24afb8bdf69ee230a3266-16" name="rest_code_eda3d0060ef24afb8bdf69ee230a3266-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eda3d0060ef24afb8bdf69ee230a3266-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline_forever.lisp"&gt;trampoline_forever.lisp&lt;/a&gt;, a trampoline in Common Lisp that
runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-1" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever without running out of stack space.&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-2" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-3" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-4" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-5" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-6" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-7" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-8" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-9" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-10" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-11" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-12" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-13" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-14" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-15" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-16" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-17" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"trampoline call #~s~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_42f57ed77fdc4909affa115dce8fe5b8-18" name="rest_code_42f57ed77fdc4909affa115dce8fe5b8-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_42f57ed77fdc4909affa115dce8fe5b8-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you can do the same things in C.  First, here's
&lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/not_forever.c"&gt;not_forever.c&lt;/a&gt;, a program in C that will (usually) die with a stack
overflow:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-1" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-2" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-2"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   Unless the compiler does tail-call optimization. */&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-3" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-4" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-5" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="cm"&gt;/* Number of times f has been called. */&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-6" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-7" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-8" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-9" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-10" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-11" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-12" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-13" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-14" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-14"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-15" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-16" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-17" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-18" name="rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_6ce6b923c13345ebbb5f3eeb2a06461c-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I say usually, because tail call optimization is not required by the
standard, and many C compilers do not do it.  For instance, &lt;span class="app"&gt;gcc&lt;/span&gt;
doesn't do tail call optimization &lt;strong&gt;unless&lt;/strong&gt; you specify
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-foptimize-sibling-calls&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O2&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O3&lt;/span&gt;&lt;/code&gt;, or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-Os&lt;/span&gt;&lt;/code&gt;.  If I
don't specify any of those options, on my system that program dies
with the error &lt;code class="docutils literal"&gt;Segmentation fault: 11&lt;/code&gt; after call #523932.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline.c"&gt;trampoline.c&lt;/a&gt;, the limited trampoline in C:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-1" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Demonstrate lisp-style trampolines. */&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-2" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-3" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-4" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-5" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-6" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-7" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-7"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-8" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-9" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-10" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-11" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-12" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-13" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-14" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-14"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-15" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-16" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-17" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-18" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-19" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-20" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-20"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-21" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-21"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-22" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-23" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-24" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-25" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-25"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-26" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-27" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-28" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-28"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-29" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-29"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-30" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-31" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-32" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-33" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-34" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_eaf2ce5c12904ce797a72ea92ed64124-35" name="rest_code_eaf2ce5c12904ce797a72ea92ed64124-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_eaf2ce5c12904ce797a72ea92ed64124-35"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice this works by converting pointers to functions to pointers to void
‚Äî it doesn't even require any explicit casting!&lt;/p&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline_forever.c"&gt;trampoline_forever.c&lt;/a&gt;, the trampoline that runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-1" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse forever without running out of stack spacc. */&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-2" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-3" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-4" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-5" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-6" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* Forward declaration. */&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-7" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-8" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-8"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-9" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-9"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-10" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-11" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-12" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-13" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-14" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-15" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-15"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-16" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-16"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-17" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-18" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-19" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-20" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-21" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-22" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-22"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-23" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-23"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-24" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-25" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-26" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-27" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-28" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-29" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-30" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-30"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-31" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-31"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-32" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-32"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-33" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-34" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-35" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-36" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_58af70c5a58c425e93443bb0d1cf115b-37" name="rest_code_58af70c5a58c425e93443bb0d1cf115b-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_58af70c5a58c425e93443bb0d1cf115b-37"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, here's where C's weak typing lets it get away with things that
more strongly typed languages don't.  Notice the declaration of the
trampoline type:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_26e5ea43c7c9409fad801dd0b9df877c-1" name="rest_code_26e5ea43c7c9409fad801dd0b9df877c-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_26e5ea43c7c9409fad801dd0b9df877c-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id="mentioning-recursive-types"&gt;Notice how it returns a &lt;code class="docutils literal"&gt;void *&lt;/code&gt;, instead of something more
specific?  That's because if it tried to return something more
specific, it would have to a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;: that is to say, while
defining the type &lt;code class="docutils literal"&gt;trampoline&lt;/code&gt;, you would use a reference to the
type while defining the type.  It would look something like this:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_b941db30ac344f3a82eefa6a75444cc0-1" name="rest_code_b941db30ac344f3a82eefa6a75444cc0-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b941db30ac344f3a82eefa6a75444cc0-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and that results in &lt;span class="app"&gt;gcc&lt;/span&gt; issuing the following error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;error: unknown type name 'trampoline'&lt;/pre&gt;
&lt;p&gt;Very few traditional programming languages allow this.  It isn't a
problem in Scheme or Common Lisp because those languages use strong
dynamic typing, where the types are checked at runtime.&lt;/p&gt;
&lt;p&gt;So how do you do this in languages with strong static typing?&lt;/p&gt;
&lt;p&gt;Well, let's try this in some of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; programming language
dialects.  &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; was designed and implemented by Niklaus Wirth
(&lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/"&gt;NW1&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Niklaus_Wirth"&gt;NW2&lt;/a&gt;) as a simplification and generalization of his earlier
languages &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)"&gt;Pascal&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula"&gt;Modula&lt;/a&gt;, and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula-2"&gt;Modula-2&lt;/a&gt;.  (Here's &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon.Report.pdf"&gt;The Programming
Language Oberon (1990)&lt;/a&gt;, the original Oberon language report, in PDF
for reference.)  I find the original Oberon admirable for its
simplicity, strong typing, understandable syntax, and its introduction
of &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; (which organizes &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Record_(computer_science)"&gt;record types&lt;/a&gt; in a
inheritance hierarchy, which with the use of procedure variables
enables object oriented programming in a particularly straightforward
and flexible way) but struggle with its minimalism and how its
standard libraries differ in paradigm from the standard Unix
libraries, since Oberon was used to implement a new operating system,
the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(operating_system)"&gt;Oberon System&lt;/a&gt; with its own completely unique &lt;a class="reference external" href="https://en.wikipedia.org/wiki/API"&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; has a number of dialects. I'm most fond of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;, which
was the second language in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; family, developed by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hanspeter_M%C3%B6ssenb%C3%B6ck"&gt;Hanspeter
M√∂ssenb√∂ck&lt;/a&gt; and Niklaus Wirth.  It is a little less minimalist than
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt;, and among a few other things adds type-bound procedures to
the record hierarchy provided by &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt;, providing a
appealingly simple and direct design for object-oriented programming
that was later adopted by the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language in a more
complicated and subtle version, as might be expected by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;'s
plethora of design goals and constraints.  (Here's a couple of papers
that mention it: &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/122028.122033"&gt;Object-oriented programming through type
extension in Ada 9X&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/pdf/10.1145/122028.122033"&gt;ADAOO1PDF&lt;/a&gt;) and &lt;a class="reference external" href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.167.7445&amp;amp;rank=1"&gt;Integrating Object-Oriented
Programming and Protected Objects in Ada 95&lt;/a&gt; (&lt;a class="reference external" href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.167.7445&amp;amp;rep=rep1&amp;amp;type=pdf"&gt;ADAOO2PDF&lt;/a&gt;).  I wish I
knew of a reference that discussed explicitly the process of choosing
&lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; and how they were adopted and adapted in
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Here's a copy of the Oberon-2 language report in PDF (&lt;a class="reference external" href="https://tkurtbond.github.io/Oberon-2/Oberon2.pdf"&gt;O2PDF&lt;/a&gt;) and HTML
(&lt;a class="reference external" href="https://web.archive.org/web/20151104101932/https://cseweb.ucsd.edu/~wgg/CSE131B/oberon2.htm"&gt;O2HTML&lt;/a&gt;), for reference.&lt;/p&gt;
&lt;p&gt;Anyway, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt; has procedure types and procedure variables, so one
would think it would be simple to implement trampolines in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;,
without messing about with pointers.  It turns out to be more
complicated than one would think.&lt;/p&gt;
&lt;p&gt;I'm using &lt;a class="reference external" href="https://github.com/vishaps/voc"&gt;Vishap Oberon&lt;/a&gt;, a free and open source Oberon-2 compiler,
by the way.&lt;/p&gt;
&lt;p&gt;First, here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/NotForever.Mod"&gt;NotForever.Mod&lt;/a&gt;, the standard program with a recursive
function procedure that will overflow the stack.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-1" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-2" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-3" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;LONGINT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;               &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-4" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-5" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-6" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-7" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-7"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-8" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-9" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-10" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-11" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-12" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-13" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-14" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a9e9e55c1ec941eb960b742609b906ab-15" name="rest_code_a9e9e55c1ec941eb960b742609b906ab-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a9e9e55c1ec941eb960b742609b906ab-15"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On my system, this program dies with with the error &lt;code class="docutils literal"&gt;Segmentation
fault: 11&lt;/code&gt; after call #524008.&lt;/p&gt;
&lt;p&gt;Now on to trampolines.  In theory we should be able to declare a type
that is a function procedure that returns other function procedures.
Here's the first attempt at the limited trampoline,
&lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/TrampolineBroken.Mod"&gt;TrampolineBroken.Mod&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-1" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Fail to demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-2" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-3" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-4" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;(* This is an error. *)&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-5" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-6" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-7" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-8" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-9" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-10" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-11" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-12" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-13" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-14" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-15" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-16" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-17" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-18" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-19" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-20" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-21" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-22" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-23" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-24" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-25" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-26" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-27" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-28" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-29" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-30" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8bf786a0738347b38de91da7e8a40c8b-31" name="rest_code_8bf786a0738347b38de91da7e8a40c8b-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8bf786a0738347b38de91da7e8a40c8b-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, trying to compile this dies with the following error
message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;TrampolineBroken.Mod  Compiling TrampolineBroken.

   4:   TYPE Thunk = PROCEDURE (): Thunk;
                             ^
    pos   126  err 244  cyclic type definition not allowed

Module compilation failed.&lt;/pre&gt;
&lt;p&gt;As mentioned &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#mentioning-recursive-types"&gt;above&lt;/a&gt;, this is a case of a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;.  Well, drat.&lt;/p&gt;
&lt;p&gt;At this point the immediate reaction is to look at the C version and
try to hack up something analogous using functionality from
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;'s &lt;code class="docutils literal"&gt;SYSTEM&lt;/code&gt; module, but that way lies madness, difficulty,
and type errors.  Instead, you have to step back and think about
things from another viewpoint.  The problem is that we can't declare a
type for a function procedure that returns another function procedure
of its type, because that is recursive.  Instead of trying for a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;, what if we switched to storing the next procedure
to be run in a global variable, &lt;code class="docutils literal"&gt;next&lt;/code&gt;, and having each procedure in
the chain set that to the procedure that should run next?  That should
work!&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/Trampoline.Mod"&gt;Trampoline.Mod&lt;/a&gt;, a version that works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-1" name="rest_code_adb808ed5a834be88defb4acbd916a01-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-2" name="rest_code_adb808ed5a834be88defb4acbd916a01-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-3" name="rest_code_adb808ed5a834be88defb4acbd916a01-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-4" name="rest_code_adb808ed5a834be88defb4acbd916a01-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-5" name="rest_code_adb808ed5a834be88defb4acbd916a01-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-6" name="rest_code_adb808ed5a834be88defb4acbd916a01-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-7" name="rest_code_adb808ed5a834be88defb4acbd916a01-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-8" name="rest_code_adb808ed5a834be88defb4acbd916a01-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-9" name="rest_code_adb808ed5a834be88defb4acbd916a01-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-10" name="rest_code_adb808ed5a834be88defb4acbd916a01-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-11" name="rest_code_adb808ed5a834be88defb4acbd916a01-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-12" name="rest_code_adb808ed5a834be88defb4acbd916a01-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-13" name="rest_code_adb808ed5a834be88defb4acbd916a01-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-14" name="rest_code_adb808ed5a834be88defb4acbd916a01-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-15" name="rest_code_adb808ed5a834be88defb4acbd916a01-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-16" name="rest_code_adb808ed5a834be88defb4acbd916a01-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-17" name="rest_code_adb808ed5a834be88defb4acbd916a01-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-18" name="rest_code_adb808ed5a834be88defb4acbd916a01-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-19" name="rest_code_adb808ed5a834be88defb4acbd916a01-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-20" name="rest_code_adb808ed5a834be88defb4acbd916a01-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-21" name="rest_code_adb808ed5a834be88defb4acbd916a01-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-22" name="rest_code_adb808ed5a834be88defb4acbd916a01-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-23" name="rest_code_adb808ed5a834be88defb4acbd916a01-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-24" name="rest_code_adb808ed5a834be88defb4acbd916a01-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-25" name="rest_code_adb808ed5a834be88defb4acbd916a01-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-26" name="rest_code_adb808ed5a834be88defb4acbd916a01-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-27" name="rest_code_adb808ed5a834be88defb4acbd916a01-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-28" name="rest_code_adb808ed5a834be88defb4acbd916a01-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-29" name="rest_code_adb808ed5a834be88defb4acbd916a01-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-30" name="rest_code_adb808ed5a834be88defb4acbd916a01-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_adb808ed5a834be88defb4acbd916a01-31" name="rest_code_adb808ed5a834be88defb4acbd916a01-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_adb808ed5a834be88defb4acbd916a01-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/TrampolineForever.Mod"&gt;TrampolineForever.Mod&lt;/a&gt;, which also works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-1" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-2" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-3" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-4" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-5" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-6" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-7" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-8" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-9" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-10" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-11" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-12" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-13" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-14" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-15" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-16" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-17" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-18" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-19" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-20" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-21" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-22" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-23" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-24" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-25" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-26" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-27" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-28" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-29" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-30" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-31" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-32" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-33" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-34" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-35" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-36" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-37" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-38" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-39" name="rest_code_1cb55d0994e6439c9ec4fc7034c8e488-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_1cb55d0994e6439c9ec4fc7034c8e488-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wirth has continued to work on Oberon, producing an even more
minimalist revision, often know as Oberon-07, or &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.
(Here's the &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon07.Report.pdf"&gt;The Programming Language Oberon-07 (Revised Oberon)&lt;/a&gt; in
PDF, for reference.)  Unfortunately, he removed forward declarations
and the &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; type, which means we have to make some minor
changes.&lt;/p&gt;
&lt;p&gt;I'm using OBNC (&lt;a class="reference external" href="https://miasap.se/obnc/"&gt;OBNC1&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/GunterMueller/OBNC"&gt;OBNC2&lt;/a&gt;) for &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/NotForever.Mod"&gt;Revised Oberon NotForever.Mod&lt;/a&gt;, with &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; replaced
by &lt;code class="docutils literal"&gt;INTEGER&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-1" name="rest_code_30e5b750dff0482abee4954afdd98c19-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-2" name="rest_code_30e5b750dff0482abee4954afdd98c19-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-3" name="rest_code_30e5b750dff0482abee4954afdd98c19-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-4" name="rest_code_30e5b750dff0482abee4954afdd98c19-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-4"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;(* Alas, no more LONGINT. *)&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-5" name="rest_code_30e5b750dff0482abee4954afdd98c19-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-6" name="rest_code_30e5b750dff0482abee4954afdd98c19-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-7" name="rest_code_30e5b750dff0482abee4954afdd98c19-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-8" name="rest_code_30e5b750dff0482abee4954afdd98c19-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-9" name="rest_code_30e5b750dff0482abee4954afdd98c19-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-10" name="rest_code_30e5b750dff0482abee4954afdd98c19-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-11" name="rest_code_30e5b750dff0482abee4954afdd98c19-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-12" name="rest_code_30e5b750dff0482abee4954afdd98c19-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-13" name="rest_code_30e5b750dff0482abee4954afdd98c19-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-13"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-14" name="rest_code_30e5b750dff0482abee4954afdd98c19-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-15" name="rest_code_30e5b750dff0482abee4954afdd98c19-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-15"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_30e5b750dff0482abee4954afdd98c19-16" name="rest_code_30e5b750dff0482abee4954afdd98c19-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_30e5b750dff0482abee4954afdd98c19-16"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/Trampoline.Mod"&gt;Revised Oberon Trampoline.Mod&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-1" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-2" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-3" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-4" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-5" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-6" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-7" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-8" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-9" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-10" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-11" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-12" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-13" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-14" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-15" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-16" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-17" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-18" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-19" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-20" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-21" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-22" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-23" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-24" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-25" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-26" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-27" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-28" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-29" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-30" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f9c76ede88ac446eb2761f4990e0ae41-31" name="rest_code_f9c76ede88ac446eb2761f4990e0ae41-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f9c76ede88ac446eb2761f4990e0ae41-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/TrampolineForever.Mod"&gt;Revised Oberon TrampolineForever.Mod&lt;/a&gt;, with a workaround
for the removal of forward declarations of procedures:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-1" name="rest_code_f8ec27d6e0384417a80586688004ccb2-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-2" name="rest_code_f8ec27d6e0384417a80586688004ccb2-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-3" name="rest_code_f8ec27d6e0384417a80586688004ccb2-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-4" name="rest_code_f8ec27d6e0384417a80586688004ccb2-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-5" name="rest_code_f8ec27d6e0384417a80586688004ccb2-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-6" name="rest_code_f8ec27d6e0384417a80586688004ccb2-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-7" name="rest_code_f8ec27d6e0384417a80586688004ccb2-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-8" name="rest_code_f8ec27d6e0384417a80586688004ccb2-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-9" name="rest_code_f8ec27d6e0384417a80586688004ccb2-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-10" name="rest_code_f8ec27d6e0384417a80586688004ccb2-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-11" name="rest_code_f8ec27d6e0384417a80586688004ccb2-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-12" name="rest_code_f8ec27d6e0384417a80586688004ccb2-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-13" name="rest_code_f8ec27d6e0384417a80586688004ccb2-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-14" name="rest_code_f8ec27d6e0384417a80586688004ccb2-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-15" name="rest_code_f8ec27d6e0384417a80586688004ccb2-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-16" name="rest_code_f8ec27d6e0384417a80586688004ccb2-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-16"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-17" name="rest_code_f8ec27d6e0384417a80586688004ccb2-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-18" name="rest_code_f8ec27d6e0384417a80586688004ccb2-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-19" name="rest_code_f8ec27d6e0384417a80586688004ccb2-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-20" name="rest_code_f8ec27d6e0384417a80586688004ccb2-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-21" name="rest_code_f8ec27d6e0384417a80586688004ccb2-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-22" name="rest_code_f8ec27d6e0384417a80586688004ccb2-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-22"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-23" name="rest_code_f8ec27d6e0384417a80586688004ccb2-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-24" name="rest_code_f8ec27d6e0384417a80586688004ccb2-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-25" name="rest_code_f8ec27d6e0384417a80586688004ccb2-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-26" name="rest_code_f8ec27d6e0384417a80586688004ccb2-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-27" name="rest_code_f8ec27d6e0384417a80586688004ccb2-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-28" name="rest_code_f8ec27d6e0384417a80586688004ccb2-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-29" name="rest_code_f8ec27d6e0384417a80586688004ccb2-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-30" name="rest_code_f8ec27d6e0384417a80586688004ccb2-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-31" name="rest_code_f8ec27d6e0384417a80586688004ccb2-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-31"&gt;&lt;/a&gt;  &lt;span class="n"&gt;forward&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-32" name="rest_code_f8ec27d6e0384417a80586688004ccb2-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-33" name="rest_code_f8ec27d6e0384417a80586688004ccb2-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-34" name="rest_code_f8ec27d6e0384417a80586688004ccb2-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-35" name="rest_code_f8ec27d6e0384417a80586688004ccb2-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-36" name="rest_code_f8ec27d6e0384417a80586688004ccb2-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-37" name="rest_code_f8ec27d6e0384417a80586688004ccb2-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-38" name="rest_code_f8ec27d6e0384417a80586688004ccb2-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f8ec27d6e0384417a80586688004ccb2-39" name="rest_code_f8ec27d6e0384417a80586688004ccb2-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f8ec27d6e0384417a80586688004ccb2-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that with forward declarations removed, we just declare a
procedure variable, &lt;code class="docutils literal"&gt;forward&lt;/code&gt;, initialize it before starting the
trampoline, and refer to it instead of &lt;code class="docutils literal"&gt;foo&lt;/code&gt; in procedure &lt;code class="docutils literal"&gt;baz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And of course, since we mentioned &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; above, we should do a version
in that.  I'm using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GNAT"&gt;GNAT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/not_forever.adb"&gt;not_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-1" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-2" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;        &lt;span class="c1"&gt;-- recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-3" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-3"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-4" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times f has been called.&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-5" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-6" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-6"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-7" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-8" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-9" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-10" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-11" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-12" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-13" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-14" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-14"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-15" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-16" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-16"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f416681ad1b24816b56c89f0b0bb0cab-17" name="rest_code_f416681ad1b24816b56c89f0b0bb0cab-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f416681ad1b24816b56c89f0b0bb0cab-17"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; has exceptions, we actually catch the exception that
happens when the stack runs out of space:&lt;/p&gt;
&lt;pre class="literal-block"&gt;STORAGE_ERROR raised with i =  262002&lt;/pre&gt;
&lt;p&gt;Again, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; would have the same problem with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;s as
the Oberon dialects.  Don't look at the C version and wander off into
forest of &lt;code class="docutils literal"&gt;Ada.Unchecked_Conversion&lt;/code&gt; because that's unsafe, or the
thicket of &lt;code class="docutils literal"&gt;System.Address_To_Access_Conversions&lt;/code&gt;, because that
one's also unsafe and more complicated (and the simple approach didn't
work, when I tried it).  Instead, do the same thing as we did in the
Oberon dialects, and move to a global variable instead of returning
the values from the functions.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline.adb"&gt;trampoline.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-1" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-2" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;         &lt;span class="c1"&gt;-- Demonstrate lisp-style trampolines.&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-3" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-4" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-5" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-6" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-7" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-7"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-8" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-8"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-9" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-10" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-11" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-11"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-12" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-13" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-13"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-14" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-14"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-15" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-16" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-17" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-17"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-18" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-19" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-19"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-20" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-20"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-21" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-22" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-23" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-23"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-24" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-25" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-25"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-26" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-27" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-27"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-28" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-28"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-29" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-29"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_a832b8c4b0ab45cab7cf977a78951c56-30" name="rest_code_a832b8c4b0ab45cab7cf977a78951c56-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_a832b8c4b0ab45cab7cf977a78951c56-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline_forever.adb"&gt;trampoline_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-1" name="rest_code_31e5769f1709490c90100d1161461a94-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-2" name="rest_code_31e5769f1709490c90100d1161461a94-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-3" name="rest_code_31e5769f1709490c90100d1161461a94-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;-- Recurse forever without running out of stack space.&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-4" name="rest_code_31e5769f1709490c90100d1161461a94-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-4"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-5" name="rest_code_31e5769f1709490c90100d1161461a94-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times through the trampoline.&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-6" name="rest_code_31e5769f1709490c90100d1161461a94-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-7" name="rest_code_31e5769f1709490c90100d1161461a94-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-7"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-8" name="rest_code_31e5769f1709490c90100d1161461a94-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-9" name="rest_code_31e5769f1709490c90100d1161461a94-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-9"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-10" name="rest_code_31e5769f1709490c90100d1161461a94-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-11" name="rest_code_31e5769f1709490c90100d1161461a94-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-11"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- forward declaration.&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-12" name="rest_code_31e5769f1709490c90100d1161461a94-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-13" name="rest_code_31e5769f1709490c90100d1161461a94-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-13"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-14" name="rest_code_31e5769f1709490c90100d1161461a94-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-15" name="rest_code_31e5769f1709490c90100d1161461a94-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-16" name="rest_code_31e5769f1709490c90100d1161461a94-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-17" name="rest_code_31e5769f1709490c90100d1161461a94-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-18" name="rest_code_31e5769f1709490c90100d1161461a94-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-19" name="rest_code_31e5769f1709490c90100d1161461a94-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-19"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-20" name="rest_code_31e5769f1709490c90100d1161461a94-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-21" name="rest_code_31e5769f1709490c90100d1161461a94-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-22" name="rest_code_31e5769f1709490c90100d1161461a94-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-23" name="rest_code_31e5769f1709490c90100d1161461a94-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-24" name="rest_code_31e5769f1709490c90100d1161461a94-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-25" name="rest_code_31e5769f1709490c90100d1161461a94-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-25"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-26" name="rest_code_31e5769f1709490c90100d1161461a94-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-27" name="rest_code_31e5769f1709490c90100d1161461a94-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-28" name="rest_code_31e5769f1709490c90100d1161461a94-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-29" name="rest_code_31e5769f1709490c90100d1161461a94-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-30" name="rest_code_31e5769f1709490c90100d1161461a94-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-31" name="rest_code_31e5769f1709490c90100d1161461a94-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-32" name="rest_code_31e5769f1709490c90100d1161461a94-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-33" name="rest_code_31e5769f1709490c90100d1161461a94-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-33"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-34" name="rest_code_31e5769f1709490c90100d1161461a94-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-35" name="rest_code_31e5769f1709490c90100d1161461a94-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-35"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-36" name="rest_code_31e5769f1709490c90100d1161461a94-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-37" name="rest_code_31e5769f1709490c90100d1161461a94-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-37"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-38" name="rest_code_31e5769f1709490c90100d1161461a94-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-38"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-39" name="rest_code_31e5769f1709490c90100d1161461a94-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-39"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-40" name="rest_code_31e5769f1709490c90100d1161461a94-40" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-40"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_31e5769f1709490c90100d1161461a94-41" name="rest_code_31e5769f1709490c90100d1161461a94-41" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_31e5769f1709490c90100d1161461a94-41"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;Of course, languages with more sophisticated type systems have other
ways of dealing with things, but I haven't investigated them.  I did
stumble across an &lt;a class="reference external" href="https://gist.github.com/rapha/119788"&gt;example&lt;/a&gt; in OCaml (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/OCaml"&gt;OCAML1&lt;/a&gt;, &lt;a class="reference external" href="https://ocaml.org/"&gt;OCAML2&lt;/a&gt;).&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;If you want to play around with this, the code is in a
&lt;a class="reference external" href="https://github.com/tkurtbond/trampolines"&gt;repository&lt;/a&gt; at &lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="c" label="c"/>
    <category term="cheney-on-the-mta" label="cheney on the m.t.a."/>
    <category term="clisp" label="clisp"/>
    <category term="common-lisp" label="common lisp"/>
    <category term="continuation-passing-style" label="continuation-passing style"/>
    <category term="cps" label="cps"/>
    <category term="ecl" label="ecl"/>
    <category term="gcc" label="gcc"/>
    <category term="github" label="github"/>
    <category term="gnat" label="gnat"/>
    <category term="hanspeter-mossenbock" label="hanspeter m√∂ssenb√∂ck"/>
    <category term="lisp-style-trampolines" label="lisp-style trampolines"/>
    <category term="modula" label="modula"/>
    <category term="modula-2" label="modula-2"/>
    <category term="niklaus-wirth" label="niklaus wirth"/>
    <category term="no-assembly-required" label="no assembly required"/>
    <category term="oberon-system" label="oberon system"/>
    <category term="oberon-2" label="oberon-2"/>
    <category term="oberon-07" label="oberon-07"/>
    <category term="obnc" label="obnc"/>
    <category term="ocaml" label="ocaml"/>
    <category term="pascal" label="pascal"/>
    <category term="rabbit" label="rabbit"/>
    <category term="record-types" label="record types"/>
    <category term="revised-oberon" label="revised oberon"/>
    <category term="sbcl" label="sbcl"/>
    <category term="scheme" label="scheme"/>
    <category term="tail-call" label="tail call"/>
    <category term="tail-call-optimization" label="tail call optimization"/>
    <category term="trampolines" label="trampolines"/>
    <category term="type-extensions" label="type extensions"/>
    <category term="uuo-handler" label="uuo handler"/>
    <category term="vishap-oberon" label="vishap oberon"/>
  </entry>
  <entry>
    <title>Installing a recent version of the A2 operatinng system on UNIX</title>
    <id>https://tkurtbond.github.io/posts/2022/06/10/installing-a-recent-version-of-the-a2-operatinng-system-on-unix/</id>
    <updated>2022-06-10T11:28:40-04:00</updated>
    <published>2022-06-10T11:28:40-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/06/10/installing-a-recent-version-of-the-a2-operatinng-system-on-unix/"/>
    <summary type="html">&lt;p&gt;I recently ran across a &lt;a class="reference external" href="https://svn.inf.ethz.ch/svn/lecturers/a2/trunk/UnixAos/DarwinA2%20Installer/ReadMeFirst!.txt"&gt;document&lt;/a&gt; that explains how to install the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/A2_(operating_system)"&gt;A2&lt;/a&gt;
operating system (formerly Bluebottle, formerly Aos) in the form of
UnixAos hosted on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/MacOS"&gt;macOS&lt;/a&gt;, in the process of explaining how to make a
installer for macOS.  I think the same process will work for any
supported Unix.  [&lt;strong&gt;Later:&lt;/strong&gt; indeed, I used the &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/LinuxA2-64bit.tgz"&gt;LinuxA2-64bit.tgz&lt;/a&gt; file
and the same process worked fine on my &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Fedora_Linux"&gt;Fedora&lt;/a&gt; box.]&lt;/p&gt;
&lt;p&gt;I'll summarize what I did.&lt;/p&gt;
&lt;p&gt;I went to &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/"&gt;http://www.informatik.uni-bremen.de/~fld/UnixAos/&lt;/a&gt; and
selected the most recent revision, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/"&gt;rev.9799&lt;/a&gt; at the time of this
writing.  There I downloaded the install script, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/install.UnixA2"&gt;install.UnixA2&lt;/a&gt; and
the version for 64 bit macOS, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/DarwinA2-64bit.tgz"&gt;DarwinA2-64bit.tgz&lt;/a&gt;.  (There were also
Linux and Solaris versions for 32 and 64 bit systems.)&lt;/p&gt;
&lt;p&gt;Then I executed &lt;code class="docutils literal"&gt;chmod +x&lt;/code&gt;'ed the install script and ran it, passing
the &lt;span class="file"&gt;.tgz&lt;/span&gt; file to it.&lt;/p&gt;
&lt;p&gt;First, it asks for the installation directory, which should already
exist.  It has a default, but I installed to the directory
&lt;span class="file"&gt;/usr/local/sw/versions/aos/rev.9799&lt;/span&gt;.  Again, I had to create
that directory first.  (I don't like to write into &lt;span class="file"&gt;/usr&lt;/span&gt; or
&lt;span class="file"&gt;/usr/local&lt;/span&gt;, because those directory hierarchies are often
under the systems control.  Nobody uses &lt;span class="file"&gt;/usr/local/sw&lt;/span&gt; for
anything except me.)&lt;/p&gt;
&lt;p&gt;Second, it asks for the file name to copy the &lt;span class="file"&gt;aos&lt;/span&gt; script to.
I installed the &lt;span class="command"&gt;aos&lt;/span&gt; command to
&lt;span class="file"&gt;/Users/tkb/local/rndbin&lt;/span&gt;, (&lt;span class="file"&gt;/home/tkb/local/rndbin&lt;/span&gt; on
non-macOS systems) which is in my path.&lt;/p&gt;
&lt;p&gt;The install script assumes you are running as root, but I ran it first
as my normal user, and since the directory I was installing it to was
owned by me it seems to have worked ok, even though it complained
about &lt;span class="command"&gt;chgrp&lt;/span&gt; not being able to change the group of a &lt;em&gt;bunch&lt;/em&gt;
of files.&lt;/p&gt;
&lt;p&gt;Then when I issued the command &lt;code class="docutils literal"&gt;aos&lt;/code&gt; it started up and displayed a
window with A2 running in it.  (This requires X Windows, so you'll need
to install &lt;a class="reference external" href="https://www.xquartz.org/"&gt;XQuartz&lt;/a&gt; on macOS.)&lt;/p&gt;
&lt;p&gt;Here's a screen shot from macOS:&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Screenshot of A2 running under macOS" src="https://tkurtbond.github.io/a2-screenshot.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Screenshot of A2 running under macOS&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It seems to work ok, both on macOS and Fedora, though I haven't
investigated very much.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2022-06-12 15:39:49 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</summary>
    <category term="a2" label="a2"/>
    <category term="aos" label="aos"/>
    <category term="bluebottle" label="bluebottle"/>
    <category term="fedora" label="fedora"/>
    <category term="macos" label="macos"/>
    <category term="oberon" label="oberon"/>
    <category term="unix" label="unix"/>
  </entry>
  <entry>
    <title>The criticisms of Pascal in ‚ÄúWhy Pascal is Not My Favorite Programming Language‚Äù applied to Oberon</title>
    <id>https://tkurtbond.github.io/posts/2022/06/05/the-criticisms-of-pascal-in-why-pascal-is-not-my-favorite-programming-language-applied-to-oberon/</id>
    <updated>2022-06-05T12:29:05-04:00</updated>
    <published>2022-06-05T12:29:05-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/06/05/the-criticisms-of-pascal-in-why-pascal-is-not-my-favorite-programming-language-applied-to-oberon/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2023-02-14 06:27:01 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I reread Brian W. Kernighan‚Äôs famous paper ‚ÄúWhy Pascal is Not My
Favorite Programming Language‚Äù
(&lt;a class="reference external" href="https://www.cs.virginia.edu/~evans/cs655/readings/bwk-on-pascal.html"&gt;HTML&lt;/a&gt;,
&lt;a class="reference external" href="http://doc.cat-v.org/bell_labs/why_pascal/"&gt;PDF&lt;/a&gt;) to see if those or
similar criticisms can still be applied to the Oberon family of
languages,
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt;,
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;, and &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised
Oberon&lt;/a&gt;. I found
Oberon-2 to be particularly inspiring, but feel that both Oberon and
Oberon-2 lack some of the practical aspects that made C such a
revelation to me back in the 1980s when I first encountered it, after
having programmed mostly in various BASICs, 6502 machine code, VAX
MACRO, and Pascal.&lt;/p&gt;
&lt;p&gt;So, here are Kernighan‚Äôs summary, nine criticisms, along with my
comments.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Since the size of an array is part of its type, it is not possible to
write general-purpose routines, that is, to deal with arrays of
different sizes. In particular, string handling is very difficult.&lt;/p&gt;
&lt;p&gt;This is still a problem in the original Oberon, but Oberon-2
introduced open arrays, which allows any size of array to be passed
to a procedure. While you can‚Äôt return arrays of arbitrary sizes from
a procedure, you can dynamically allocate any size array using
&lt;code class="docutils literal"&gt;POINTER TO ARRAY&lt;/code&gt; and &lt;code class="docutils literal"&gt;NEW&lt;/code&gt;, and return the pointer. Revised
Oberon adopted open arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lack of static variables, initialization and a way to communicate
non-hierarchically combine to destroy the ‚Äúlocality‚Äù of a program -
variables require much more scope than they ought to.&lt;/p&gt;
&lt;p&gt;This criticism still applies. None of the Oberon languages include
static variables or initialization.&lt;/p&gt;
&lt;p&gt;The lack of static variables is somewhat mitigated by the ability to
divide things up using modules, since the tendency is to create a
module for the shared variable and the procedures that depend on it,
but is still clumsy if the only thing you need is a static variable
in one procedure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The one-pass nature of the language forces procedures and functions
to be presented in an unnatural order; the enforced separation of
various declarations scatters program components that logically
belong together.&lt;/p&gt;
&lt;p&gt;Oberon and Oberon-2 allow mixing &lt;code class="docutils literal"&gt;CONST&lt;/code&gt;, &lt;code class="docutils literal"&gt;TYPE&lt;/code&gt; and &lt;code class="docutils literal"&gt;VAR&lt;/code&gt;
declarations in any order and to appear multiple times, but still
requires procedure and forward procedure declarations to come after
all other declarations. In Revised Oberon &lt;code class="docutils literal"&gt;CONST&lt;/code&gt;, &lt;code class="docutils literal"&gt;TYPE&lt;/code&gt;, and
&lt;code class="docutils literal"&gt;VAR&lt;/code&gt; declarations must occur and in that order, followed by
procedure declarations, so the original criticism applies entirely
again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lack of separate compilation impedes the development of large
programs and makes the use of libraries impossible.&lt;/p&gt;
&lt;p&gt;Not a problem any more. All the Oberon languages use modules,
introduced in Modula. Arguably, this is much superior to C‚Äôs model
of separate compilation and using header files to ensure function
and external variable declarations are consistent across files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The order of logical expression evaluation cannot be controlled,
which leads to convoluted code and extraneous variables.&lt;/p&gt;
&lt;p&gt;This appears to not apply to the Oberon languages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The ‚Äòcase‚Äô statement is emasculated because there is no default
clause.&lt;/p&gt;
&lt;p&gt;Original Oberon and Oberon-2 both have &lt;code class="docutils literal"&gt;ELSE&lt;/code&gt; clauses for &lt;code class="docutils literal"&gt;CASE&lt;/code&gt;
statements. Revised Oberon does not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The standard I/O is defective. There is no sensible provision for
dealing with files or program arguments as part of the standard
language, and no extension mechanism.&lt;/p&gt;
&lt;p&gt;IO in the Oberon family of languages is mostly defined by the
procedures provided in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(operating_system)"&gt;Oberon
System&lt;/a&gt;,
the operating system written in Oberon (and later in Oberon-2). It
has good facilities for dealing with files, considered by some to be
a better API than the familiar Unix/C API, for the functionality it
provides.&lt;/p&gt;
&lt;p&gt;None of the Oberon languages provide a standard method for access
to program arguments in the Unix/C style, as the Oberon System used
entirely different mechanisms.  Those Oberon[-2] implementations
I've used outside of the Oberon System all provided some access to
the program arguments, usually as a procedure that returns the
number of program arguments and another that returns a specific
argument, but none of them used the same API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The language lacks most of the tools needed for assembling large
programs, most notably file inclusion.&lt;/p&gt;
&lt;p&gt;The addition of separately compiled modules that provide a defined
interface mostly obviates this criticism and is superior to the
kludge of separate complication and include files provided by C.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is no escape.&lt;/p&gt;
&lt;p&gt;All the Oberon languages include the module &lt;code class="docutils literal"&gt;SYSTEM&lt;/code&gt;, which
provides low level access to addresses of variables and to individual
bits of memory, along with bit manipulation of integers. Revised
Oberon adds access to sizes of types. Oberon and Oberon-2 provide a
&lt;code class="docutils literal"&gt;VAL&lt;/code&gt; function that allows interpreting a variable of one type as a
variable of another type. Revised Oberon does not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All the Oberon languages still have semicolon as separator instead of
semicolon as terminator.   I much prefer semicolon as terminator.&lt;/p&gt;
&lt;p&gt;All-in-all, I'm disappointed in Revised Oberon.  While I approve of a
few of its changes, most of them seem to be a definite step backward.
I think Wirth's minimalism does him a disservice here.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="c" label="c"/>
    <category term="oberon" label="oberon"/>
    <category term="oberon-system" label="oberon system"/>
    <category term="oberon-2" label="oberon-2"/>
    <category term="pascal" label="pascal"/>
    <category term="revised-oberon" label="revised oberon"/>
    <category term="unix" label="unix"/>
  </entry>
  <entry>
    <title>Recording the books I read with org-mode and org-capture</title>
    <id>https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/</id>
    <updated>2022-05-21T07:17:18-04:00</updated>
    <published>2022-05-21T07:17:18-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/"/>
    <summary type="html">&lt;p&gt;I used to record the books that I read on this &lt;a class="reference external" href="https://tkurtbond.github.io/categories/recent-reading/"&gt;blog&lt;/a&gt;, but that took
too much &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2010/07/21/reading-but-not-recording/"&gt;effort&lt;/a&gt;.  However, if I don't record the books I read, I
sometimes can't remember whether I read a particular book or not,
especially with Kindle Unlimited books.  (Was it the seventh book of
the series that I read last, or the eighth?)&lt;/p&gt;
&lt;p&gt;I record the books that I read in &lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt; using &lt;a class="reference external" href="https://orgmode.org/"&gt;org-mode&lt;/a&gt; and ‚Äî
since today ‚Äî &lt;a class="reference external" href="ttps://orgmode.org/manual/Capture.html"&gt;org-capture&lt;/a&gt;.  Here's what the org file looks like:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-1" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-1" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-1"&gt;&lt;/a&gt;* 2022
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-2" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-2" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-2"&gt;&lt;/a&gt;** Read
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-3" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-3" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-3"&gt;&lt;/a&gt;*** : Title of Book I Haven't Finished Reading -- https://www.amazon.com/amazon-book-link-if-it-exists
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-4" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-4" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-4"&gt;&lt;/a&gt;...
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-5" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-5" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-5"&gt;&lt;/a&gt;*** 2022-05-21: Title of Book I **Have** Finished Reading -- https://www.amazon.com/amazon-book-link-if-it-exists
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-6" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-6" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-6"&gt;&lt;/a&gt;...
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-7" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-7" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-7"&gt;&lt;/a&gt;** Did not finish
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-8" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-8" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-8"&gt;&lt;/a&gt;*** : Title of Book I Won't Finish Reading -- https://www.amazon.com/amazon-book-link-if-it-exists
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-9" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-9" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-9"&gt;&lt;/a&gt;...
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-10" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-10" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-10"&gt;&lt;/a&gt;* 2021
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-11" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-11" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-11"&gt;&lt;/a&gt;* Previously read, sometime
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-12" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-12" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-12"&gt;&lt;/a&gt;** Title of Book I Finished Reading at some indeterminate date in the past -- https://www.amazon.com/amazon-book-link-if-it-exists
&lt;a id="rest_code_46a022e92ec448a5bb67cf75b1289f44-13" name="rest_code_46a022e92ec448a5bb67cf75b1289f44-13" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_46a022e92ec448a5bb67cf75b1289f44-13"&gt;&lt;/a&gt;...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I keep the org file in a &lt;span class="app"&gt;git&lt;/span&gt; repository hosted online so I can
edit it on whatever computer is close at hand, or on my cell phone.
(Having a &lt;span class="app"&gt;git&lt;/span&gt; client with a simple editor on my phone is
wonderful!)&lt;/p&gt;
&lt;p&gt;When I start reading a book I create a new entry by selecting the
title and author of the book on its Amazon page, use the Chrome
extension Create Link to create a plain text link, which I then insert
into the org file at the right heading level and with a &lt;code class="docutils literal"&gt;:‚ê¢&lt;/code&gt; (a
colon followed by a blank space) after the asterisks of the heading
and before the link.  When I'm done with reading the book I put the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/ISO_8601"&gt;ISO 8601&lt;/a&gt; date (&lt;em&gt;YYYY-MM-DD&lt;/em&gt;) before the colon.&lt;/p&gt;
&lt;p&gt;I wrote a script today to count how many books I've read so far this
year:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-1" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-1" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-2" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-2" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-3" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-3" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;YEAR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'+%Y'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-4" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-4" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-4"&gt;&lt;/a&gt;&lt;span class="nv"&gt;LAST_YEAR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;YEAR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-5" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-5" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-6" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-6" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-6"&gt;&lt;/a&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-E&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/^\* &lt;/span&gt;&lt;span class="nv"&gt;$YEAR&lt;/span&gt;&lt;span class="s2"&gt;/,/^(\*\* Did not finish|\* &lt;/span&gt;&lt;span class="nv"&gt;$LAST_YEAR&lt;/span&gt;&lt;span class="s2"&gt;)/p"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$READ_FILE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-7" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-7" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/^* &lt;/span&gt;&lt;span class="nv"&gt;$YEAR&lt;/span&gt;&lt;span class="s2"&gt;/d"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/^** Read/d"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-8" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-8" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/^(\*\* Did not finish|\* &lt;/span&gt;&lt;span class="nv"&gt;$LAST_YEAR&lt;/span&gt;&lt;span class="s2"&gt;)/d"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-9" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-9" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-E&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/^\*\*\*[ \t]+[0-9]/p"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_1359e10b4b134effa4c86df344d4ffd2-10" name="rest_code_1359e10b4b134effa4c86df344d4ffd2-10" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_1359e10b4b134effa4c86df344d4ffd2-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="w"&gt; &lt;/span&gt;-l
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gets all the lines for this year, or just up to the ones that I did not finish, if there are any yet, then gets read of the leading&lt;/p&gt;
&lt;p&gt;This works pretty well.&lt;/p&gt;
&lt;p&gt;And so far I've read 227 books this year.&lt;/p&gt;
&lt;p&gt;And then I got to thinking: I could probably use &lt;a class="reference external" href="ttps://orgmode.org/manual/Capture.html"&gt;org-capture&lt;/a&gt; to
automate finding the file, finding the right place to insert the
information, and then copying the link from the clipboard and
inserting it along with the heading formation!&lt;/p&gt;
&lt;p&gt;Here's the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;org-capture-templates&lt;/span&gt;&lt;/code&gt; value I use for this:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_515c5b95313143598108ce6367bdca4d-1" name="rest_code_515c5b95313143598108ce6367bdca4d-1" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_515c5b95313143598108ce6367bdca4d-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;org-capture-templates&lt;/span&gt;
&lt;a id="rest_code_515c5b95313143598108ce6367bdca4d-2" name="rest_code_515c5b95313143598108ce6367bdca4d-2" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_515c5b95313143598108ce6367bdca4d-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Add book about to read"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;entry&lt;/span&gt;
&lt;a id="rest_code_515c5b95313143598108ce6367bdca4d-3" name="rest_code_515c5b95313143598108ce6367bdca4d-3" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_515c5b95313143598108ce6367bdca4d-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file+olp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;expand-file-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"~/Repos/tkb-org/Books/read.org"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_515c5b95313143598108ce6367bdca4d-4" name="rest_code_515c5b95313143598108ce6367bdca4d-4" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_515c5b95313143598108ce6367bdca4d-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"%Y"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Read"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_515c5b95313143598108ce6367bdca4d-5" name="rest_code_515c5b95313143598108ce6367bdca4d-5" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_515c5b95313143598108ce6367bdca4d-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="s"&gt;"*** : %c"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;:prepend&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll want to read &lt;a class="reference external" href="https://orgmode.org/manual/Capture-templates.html"&gt;Capture templates&lt;/a&gt; to understand how this works.&lt;/p&gt;
&lt;p&gt;Of course, then I thought: what if my &lt;span class="app"&gt;emacs&lt;/span&gt; session lasts from
one year into the other, and I then add a new book?  It will have the
wrong year!&lt;/p&gt;
&lt;p&gt;And then I immediately thought of &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Advising-Functions.html"&gt;Advising Emacs Lisp Functions&lt;/a&gt;!
(I feel old ‚Äî it was the &lt;code class="docutils literal"&gt;defadvice&lt;/code&gt; function when I started using
it.)&lt;/p&gt;
&lt;p&gt;So I added the following code:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-1" name="rest_code_2726d5c87c8c46f589c6178d91297793-1" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-1"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defvar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tkb-org-year&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"%Y"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-2" name="rest_code_2726d5c87c8c46f589c6178d91297793-2" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;"The year the current emacs session was started, for use with org-capture."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-3" name="rest_code_2726d5c87c8c46f589c6178d91297793-3" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tkb-org-capture-advice-update-year&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;&amp;amp;optional&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;goto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-4" name="rest_code_2726d5c87c8c46f589c6178d91297793-4" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;"Update ‚Äòtkb-org-year‚Äô and update the entry for adding a book in&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-5" name="rest_code_2726d5c87c8c46f589c6178d91297793-5" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-5"&gt;&lt;/a&gt;&lt;span class="s"&gt;‚Äòorg-capture-templates‚Äô to use the new value."&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-6" name="rest_code_2726d5c87c8c46f589c6178d91297793-6" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;new-year&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format-time-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"%Y"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-7" name="rest_code_2726d5c87c8c46f589c6178d91297793-7" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unless&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string-equal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tkb-org-year&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;new-year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-8" name="rest_code_2726d5c87c8c46f589c6178d91297793-8" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tkb-org-year&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;new-year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-9" name="rest_code_2726d5c87c8c46f589c6178d91297793-9" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;assoc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;org-capture-templates&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-10" name="rest_code_2726d5c87c8c46f589c6178d91297793-10" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;assoc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'file+olp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;nth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-11" name="rest_code_2726d5c87c8c46f589c6178d91297793-11" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nv"&gt;tkb-org-year&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;a id="rest_code_2726d5c87c8c46f589c6178d91297793-12" name="rest_code_2726d5c87c8c46f589c6178d91297793-12" href="https://tkurtbond.github.io/posts/2022/05/21/recording-the-books-i-read-with-org-mode-and-org-capture/#rest_code_2726d5c87c8c46f589c6178d91297793-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;advice-add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'org-capture&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;:before&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;tkb-org-capture-advice-update-year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tested this by manually setting &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;tkb-org-year&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal"&gt;"2021"&lt;/code&gt; and
capturing a new book.  It worked fine!&lt;/p&gt;</summary>
    <category term="advice-add" label="advice-add"/>
    <category term="defadvice" label="defadvice"/>
    <category term="emacs" label="emacs"/>
    <category term="emacs-advice" label="emacs advice"/>
    <category term="org-capture" label="org-capture"/>
    <category term="org-mode" label="org-mode"/>
    <category term="reading" label="reading"/>
  </entry>
  <entry>
    <title>POISE DMS-PLus, a Description</title>
    <id>https://tkurtbond.github.io/posts/2022/02/22/poise-dms-plus-a-description/</id>
    <updated>2022-02-22T09:49:38-05:00</updated>
    <published>2022-02-22T09:49:38-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/02/22/poise-dms-plus-a-description/"/>
    <summary type="html">&lt;p&gt;Some time ago I &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2014/11/23/poise-dms-plus/"&gt;linked&lt;/a&gt; to a description of the POISE DMS-Plus, a Data
Management System that I've used extensively since the mid 1980s.
Last time I knew it was owned by Jenzabar.  Since Jenzabar's
description of it (as part of Jenzabar PX) has vanished from their web
pages I thought it would be useful to have a description of it on my
blog.&lt;/p&gt;
&lt;p&gt;I'll include &lt;a class="reference external" href="https://web.archive.org/web/20060313120910/http://www2.esp-tulsa.com/products.htm#dmsplus"&gt;Jenzabar's description&lt;/a&gt; of the POISE DMS-Plus here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DMS-Plus&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each Jenzabar PX Administrative application module is built on
Jenzabar PX DMS-Plus¬Æ, a relational database management system (RDBMS)
using fourth-generation (4GL) language. DMS-Plus includes a powerful
report-writer, an information-retrieval system using multiple keys,
screen generation, and has multiple user levels: the operator,
intermediate user, advanced user, and application developers. It also
includes an Administrative Systems Query (ASQ or ask) language that is
designed to make the software easier to use for administrative
personnel. ASQ permits users to select, order, display, and print
information through simple English-like commands. In addition to ASQ,
another option for queries and reporting is QBF (Query By Form), a
point and select method which leads users through the data files and
query options.&lt;/p&gt;
&lt;p&gt;The benefits of a DMS-Plus approach to administrative processing
include ease of use by nontechnical personnel, a greater flexibility,
and speed and simplicity when implementing changes. It includes a
powerful data management and information retrieval facility with
right-to-use source code available. DMS-Plus includes list processing
as well as interfaces to stand-alone word processing systems. Future
enhancement to DMS-Plus are provided as part of the ongoing
subscription services. DMS-Plus is the common language for all types
of users.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DMS-Plus Highlights&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus provides Report Generators for easy sorting, selecting, and
printing along with Screen Generators for easy data entry, update,
and review.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus utilizes data manipulation for inserting, updating and
deleting data in the database. In addition to data definition for
adding new elements to the database, data control is also available
for accessing data by persons who have been granted access.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus has a menu processor, import/export capability via ASCII
file formats, a WordPerfect interface, and SQL compliant.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus is a user-oriented system that operates in a multi-user
environment. Simple English-like language prompts and responses are
used to interact with the system. By utilizing the flexibility of
DMS-Plus, each user office can determine the information collected,
can regulate work flow, can set its own schedules for updating
files, and can produce its own reports without depending on
Information System services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus supports multi-user access. These application systems use
many of the same functions and techniques that provide continuity
across user departments and also allows cross-utilization of
personnel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many applications for information management needs may be
implemented through the software provided with little or no
additional programming.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DMS-Plus provides an integrated base of information for
administrative data processing. Information introduced into the
system may be carried forward into all appropriate areas without
redundant entry.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;While the above describes the POISE DMS-Plus as a ‚Äúrelational database
management system‚Äù, it isn't really.  It does not use a relational
database.  It comes from the time &lt;strong&gt;before&lt;/strong&gt; relational databases.&lt;/p&gt;
&lt;p&gt;To me, a database is a program that controls access to a collection of
data - you can‚Äôt get to the data without asking the database program
for it.&lt;/p&gt;
&lt;p&gt;A data management system (the DMS in DMS-Plus) just lets you associate
related data together, and then multiple programs can access the
pieces, usually using a standard API implemented as a library.&lt;/p&gt;
&lt;p&gt;Before the advent of Unix, files were often much more complicated that
just a stream of bytes.  For instance, under VMS (where I've used the
POISE DMS-Plus the most) the &lt;em&gt;Record Management Services&lt;/em&gt; (RMS)
provides sequential, relative, and indexed file organization, and
fixed-length and variable-length record formats, and allows you to
access records within these files sequentially, directly by key value,
directly by relative record number, or directly by record file
address.  It was common practice for programs to each use their own
specific mix of these aspects of RMS, with the details directly coded
into the program.&lt;/p&gt;
&lt;p&gt;The advantage of the POISE DMS-Plus is it provided a suite of programs
that worked together, allowing users to describe the format of the
files they wanted, enter and modify data in those files, sort and
select data, and produce nicely formatted reports, without having to
write any code.  The programs were interactive, issuing a series of
prompts to the user for what they needed to do next, and were very
easy to learn.  If a secretary wanted to keep track of the inventory
of their office, they would run &lt;span class="command"&gt;DMS:DESCRIBE&lt;/span&gt; to describe
the fields they wanted and allocate space for the file, then run
&lt;span class="command"&gt;DMS:ADD&lt;/span&gt; to add data, &lt;span class="command"&gt;DMS:SEARCH&lt;/span&gt; to search and
update it, &lt;span class="command"&gt;DMS:SORT&lt;/span&gt; to sort and select data, and
&lt;span class="command"&gt;DMS:PRINT&lt;/span&gt; to produce a nicely formatted report.  If they
had to do a lot of data entry into the file, or it was large or
complicated, they could run &lt;span class="command"&gt;DMS:SCREEN&lt;/span&gt; to define a text
user interface screen format for interactive user input, arranging the
fields or subsets of the fields on the screen to make data entry easy,
and then run &lt;span class="command"&gt;DMS:SCOPE&lt;/span&gt; using that screen format to do data
entry.  (I keep wishing for something as easy to use as
&lt;span class="command"&gt;DMS:SCREEN&lt;/span&gt; in the area of database backed web applications,
but haven't found it yet.)&lt;/p&gt;
&lt;p&gt;POISE DMS-Plus files &lt;em&gt;were&lt;/em&gt; relational in that it was possible for
fields in one file to refer to values in fields in another file,
similar to SQL &lt;code class="docutils literal"&gt;JOIN&lt;/code&gt;s and &lt;code class="docutils literal"&gt;FOREIGN KEY&lt;/code&gt; constraints.  So, for
instance, it was possible to have a code field in one file, but on
reports include the description of the code by pulling it from a code
file, keyed by the code field.&lt;/p&gt;
&lt;p&gt;All the POISE DMS-Plus programs used a documented API, the Support
Procedure Library, which programmers could use to write programs that
accessed POISE DMS-Plus files for applications that required
sophisticated, special purpose processing.  Furthermore, they
documented the file structures they used, so it was possible to write
programs that accessed DMS-Plus files directly, if necessary.&lt;/p&gt;
&lt;p&gt;POISE, by the way, stood for ‚ÄúPeople Oriented Interactive Software for
Education‚Äù, and it probably had its greatest success in systems for
education administration, but it was a general purpose tool and I have
worked on projects using it for many other areas, including local and
state government, real estate sales management, oil and gas royalty
management, and many others.&lt;/p&gt;</summary>
    <category term="dms-plus" label="dms-plus"/>
    <category term="jenzabar-px" label="jenzabar px"/>
    <category term="openvms" label="openvms"/>
    <category term="poise" label="poise"/>
    <category term="vms" label="vms"/>
  </entry>
  <entry>
    <title>Redimensioning formal parameter arrays in OpenVMS BASIC, Revisited</title>
    <id>https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/</id>
    <updated>2022-02-05T16:08:22-05:00</updated>
    <published>2022-02-05T16:08:22-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/"/>
    <summary type="html">&lt;p&gt;I was working on a program on a VAX today, and needed to redimension
dynamically allocated arrays that are passed to an external function.
I've done this in the past (an &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt;, and the &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/"&gt;old blog
post&lt;/a&gt; that mentions it), but this time I managed to simplify my
solution, and generalize it to work with both lower and upper bounds,
and so the same function would work with multiple VMS BASIC data
types.  Here's the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;.  (How's that for thread
necromancy?)&lt;/p&gt;
&lt;p&gt;I'll include the code in this blog post, too, for ease of reference.
Here's &lt;span class="file"&gt;vax_redim_best.bas&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-1" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-1"&gt;&lt;/a&gt;program vax_redim_best
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-2" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-3" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-4" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-4"&gt;&lt;/a&gt;    record rec
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-5" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-5"&gt;&lt;/a&gt;        string s = 13
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-6" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-6"&gt;&lt;/a&gt;        long   i
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-7" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-7"&gt;&lt;/a&gt;    end record rec
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-8" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-9" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-9"&gt;&lt;/a&gt;    ! Don't declare the parameters, and everything works, even passing
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-10" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-10"&gt;&lt;/a&gt;    ! different types.
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-11" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-11"&gt;&lt;/a&gt;    external sub redim
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-12" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-13" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-13"&gt;&lt;/a&gt;    declare long stat, i
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-14" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-14"&gt;&lt;/a&gt;    i = 1
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-15" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-15"&gt;&lt;/a&gt;    dim rec rec(1 to i)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-16" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-16"&gt;&lt;/a&gt;    print "lbound (rec) at start: "; lbound (rec)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-17" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-17"&gt;&lt;/a&gt;    print "ubound (rec) at start: "; ubound (rec)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-18" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-18"&gt;&lt;/a&gt;    call redim (rec(), 3, 10)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-19" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-19"&gt;&lt;/a&gt;    print "lbound (rec) after redim: "; lbound (rec)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-20" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-20" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-20"&gt;&lt;/a&gt;    print "ubound (rec) after redim: "; ubound (rec)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-21" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-21" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-22" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-22" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-22"&gt;&lt;/a&gt;    dim string s(1 to i)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-23" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-23" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-23"&gt;&lt;/a&gt;    print "lbound (s) at start: "; lbound (s)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-24" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-24" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-24"&gt;&lt;/a&gt;    print "ubound (s) at start: "; ubound (s)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-25" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-25" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-25"&gt;&lt;/a&gt;    call redim (s(), 3, 10)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-26" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-26" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-26"&gt;&lt;/a&gt;    print "lbound (s) after redim: "; lbound (s)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-27" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-27" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-27"&gt;&lt;/a&gt;    print "ubound (s) after redim: "; ubound (s)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-28" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-28" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-29" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-29" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-29"&gt;&lt;/a&gt;    dim long l(1 to i)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-30" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-30" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-30"&gt;&lt;/a&gt;    print "lbound (l) at start: "; lbound (l)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-31" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-31" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-31"&gt;&lt;/a&gt;    print "ubound (l) at start: "; ubound (l)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-32" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-32" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-32"&gt;&lt;/a&gt;    call redim (l(), 3, 10)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-33" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-33" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-33"&gt;&lt;/a&gt;    print "lbound (l) after redim: "; lbound (l)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-34" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-34" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-34"&gt;&lt;/a&gt;    print "ubound (l) after redim: "; ubound (l)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-35" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-35" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-36" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-36" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-36"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-37" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-37" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-37"&gt;&lt;/a&gt;end program ! vax_redim_best
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-38" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-38" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-39" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-39" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-39"&gt;&lt;/a&gt;function long redim (long s, long low, long high)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-40" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-40" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-40"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-41" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-41" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-41"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-42" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-42" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-42"&gt;&lt;/a&gt;    external long function bas$rt_dim_bounds (long by value, long by value, long by value)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-43" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-43" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-43"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-44" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-44" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-44"&gt;&lt;/a&gt;    r = bas$rt_dim_bounds (loc (s), low, high)
&lt;a id="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-45" name="rest_code_ee380519db7b48a1b0067cdbb7c7e32d-45" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_ee380519db7b48a1b0067cdbb7c7e32d-45"&gt;&lt;/a&gt;end function r ! redim
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll just point out, which I failed to do in the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt; or
the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;, that you have to use a &lt;strong&gt;variable&lt;/strong&gt; when using
the VMS BASIC &lt;code class="docutils literal"&gt;dim&lt;/code&gt; statement or you get a fatal runtime error.  Ooops.&lt;/p&gt;
&lt;p&gt;So use:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_127e7fb164004ba5ab9869ffeacd0073-1" name="rest_code_127e7fb164004ba5ab9869ffeacd0073-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_127e7fb164004ba5ab9869ffeacd0073-1"&gt;&lt;/a&gt;declare long i
&lt;a id="rest_code_127e7fb164004ba5ab9869ffeacd0073-2" name="rest_code_127e7fb164004ba5ab9869ffeacd0073-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_127e7fb164004ba5ab9869ffeacd0073-2"&gt;&lt;/a&gt;i = 5
&lt;a id="rest_code_127e7fb164004ba5ab9869ffeacd0073-3" name="rest_code_127e7fb164004ba5ab9869ffeacd0073-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_127e7fb164004ba5ab9869ffeacd0073-3"&gt;&lt;/a&gt;dim string s(1 to i) ! Notice that last thing is the variable, i
&lt;a id="rest_code_127e7fb164004ba5ab9869ffeacd0073-4" name="rest_code_127e7fb164004ba5ab9869ffeacd0073-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_127e7fb164004ba5ab9869ffeacd0073-4"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you had said:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_5da84c560bcc4618bcf5aee73183c5f7-1" name="rest_code_5da84c560bcc4618bcf5aee73183c5f7-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_5da84c560bcc4618bcf5aee73183c5f7-1"&gt;&lt;/a&gt;dim string s(1 to 5) ! Notice that last thing is a constant, 5
&lt;a id="rest_code_5da84c560bcc4618bcf5aee73183c5f7-2" name="rest_code_5da84c560bcc4618bcf5aee73183c5f7-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_5da84c560bcc4618bcf5aee73183c5f7-2"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'd have gotten the following error:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-1" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-1"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-2" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-2"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-3" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-3"&gt;&lt;/a&gt;-BAS-I-FROMOD, In module Y
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-4" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-4"&gt;&lt;/a&gt;%TRACE-F-TRACEBACK, symbolic stack dump follows
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-5" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-5"&gt;&lt;/a&gt;module name     routine name                     line       rel PC    abs PC
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-6" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-7" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-7"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-8" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-8"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-9" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-9"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-10" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-10"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-11" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-11"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-12" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-12"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-13" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-13"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-14" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-14"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-15" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-15"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-16" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-16"&gt;&lt;/a&gt;                                                           0004A352  0004A352
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-17" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-17"&gt;&lt;/a&gt;                                                           00054E37  00054E37
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-18" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-18"&gt;&lt;/a&gt;ALT_REDIM       ALT_REDIM                          43      0000002E  00000AC2
&lt;a id="rest_code_4f015bc1b4a34c819e3396b8823782e8-19" name="rest_code_4f015bc1b4a34c819e3396b8823782e8-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_4f015bc1b4a34c819e3396b8823782e8-19"&gt;&lt;/a&gt;Y               Y                                  24      0000015D  0000095D
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't actually submit an SPR, of course: you did it to yourself by
using an undocumented VMS BASIC internal runtime function.&lt;/p&gt;
&lt;p&gt;Oh, I don't have access to an Alpha these days, so I haven't tried it
there, but I imagine using something named &lt;code class="docutils literal"&gt;DBASIC$RT_DIM_BOUNDS&lt;/code&gt;
instead of &lt;code class="docutils literal"&gt;DBASIC$RT_DIM&lt;/code&gt; would likely work there.&lt;/p&gt;</summary>
    <category term="alpha" label="alpha"/>
    <category term="basic" label="basic"/>
    <category term="hacks" label="hacks"/>
    <category term="usenet" label="usenet"/>
    <category term="vax" label="vax"/>
    <category term="vms" label="vms"/>
  </entry>
</feed>
