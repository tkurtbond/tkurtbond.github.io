<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about programming)</title>
  <id>https://tkurtbond.github.io/categories/programming.atom</id>
  <updated>2024-11-22T21:11:45Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/programming.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/programming/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Splitting Strings on a Delimiter in the Ada Programming Language</title>
    <id>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</id>
    <updated>2022-08-05T11:10:39-04:00</updated>
    <published>2022-08-05T11:10:39-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;Last edited: 2024-11-22 16:10:42 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I did a search for “splitting strings on a delimiter in the Ada
programming language” recently I did not get many useful results.
Eventually I stumbled over &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-String_005fSplit-g-strspl-ads.html#GNAT-String_005fSplit-g-strspl-ads"&gt;GNAT.String_Split&lt;/a&gt; which is an
instantiation of the generic package &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-Array_005fSplit-g-arrspl-ads.html#GNAT-Array_005fSplit-g-arrspl-ads"&gt;GNAT.Array_Split&lt;/a&gt;.  I also
finally &lt;a class="reference external" href="https://blog.adacore.com/new-strings-package-in-gnatcoll"&gt;found&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings_impl.ads"&gt;GNATCOLL.Strings_Impl&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings.ads"&gt;GNATCOLL.Strings&lt;/a&gt;, its
default instantiation, which looks especially interesting, contains
a split implementation, and which seems to be designed to be a more
efficient string implementation than  than &lt;code class="docutils literal"&gt;Ada.Strings.Unbounded&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, those are all a little complicated, so it might be
appropriate to show a simpler implementation.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;String&lt;/code&gt; type in Ada is a array of characters.  Once
declared, a &lt;code class="docutils literal"&gt;String&lt;/code&gt; variable always has the same length.  That
means that all the strings in an array of strings have to be the same
length.  However, an &lt;code class="docutils literal"&gt;access&lt;/code&gt; (Ada's version of a
pointer) to a &lt;code class="docutils literal"&gt;String&lt;/code&gt; can point to a string of any length, so for
this version we'll return an array of pointers to &lt;code class="docutils literal"&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;String&lt;/code&gt; are defined in &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-3.html"&gt;Ada.Strings.Fixed&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-1" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-2" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-3" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-4" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-5" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-6" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-6"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Ada.Text_IO contains a type, Count, that would conflict with&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-7" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-7"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- the function Ada.Strings.Fixed.Count, so don't "use Ada.Text_IO;"&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-8" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-8"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- instead, make a package the gives it a shorter name, and use all its&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-9" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-9"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- procedures with that as the prefix.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-10" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;ATIO&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="nc"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-11" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;String_Ptr&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-12" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-13" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-14" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-14"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Allocate a new String in a storage pool, initializing it to S, and&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-15" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-15"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- returning an access to it (a pointer).&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-16" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-16"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;  &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-17" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;'(&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-18" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-18"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-19" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-19"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-20" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-20"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-21" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-22" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-22"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-23" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-23"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-24" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-24"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-25" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-25"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-26" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-27" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-28" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-28"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-29" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-30" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-30"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-31" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-31"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-32" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-32"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-33" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-33"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-34" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-34"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-35" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-35"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-36" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-36"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-37" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-38" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-39" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-39"&gt;&lt;/a&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-40" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-41" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-41"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-42" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-42"&gt;&lt;/a&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-43" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-43"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-44" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-44"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-45" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-46" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-46"&gt;&lt;/a&gt;      &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-47" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-47"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-48" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-48"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-49" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-49"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-50" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-50"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-51" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-51"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-52" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-52"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-53" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-53"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-54" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-55" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-56" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-57" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-58" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-59" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-60" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-61" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-61"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-62" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-63" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                 &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-64" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-65" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-65"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-66" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-67" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-68" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-68"&gt;&lt;/a&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-69" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-70" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-70" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-70"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-71" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-71" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-71"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-72" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-72" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-72"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-73" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-73" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-73"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-74" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-74" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-74"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-75" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-75" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-75"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_12487beca9f64c0e938d0204ae71a8b2-76" name="rest_code_12487beca9f64c0e938d0204ae71a8b2-76" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_12487beca9f64c0e938d0204ae71a8b2-76"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; type in Ada has a maximum capacity and a
current length.  You instantiate a new package for each different
maximum capacity that you want, producing a different type for each.
You can assign any string smaller than or equal to the maximum length,
and the current length is recorded.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-4.html"&gt;Ada.Strings.Bounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-1" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-2" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-3" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Bounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-4" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-5" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-6" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-7" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-8" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Strings.Bounded.Generic_Bounded_Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Max&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 128&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-9" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-10" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String_IO&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt; &lt;span class="nc"&gt;Bounded_IO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;B_String&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-11" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-12" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-13" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-14" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-14"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-15" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-15"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-16" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-16"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-17" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-18" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-19" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-20" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-21" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-22" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-23" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-24" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-25" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-26" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-26"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-27" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-27"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-28" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-28"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-29" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-30" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-31" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-31"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-32" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-33" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-33"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-34" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-34"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-35" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-36" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-36"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-37" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-38" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-38"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-39" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-39"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-40" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-41" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-41"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-42" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-43" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-44" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-44"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-45" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-46" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-47" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-47"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-48" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-49" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-50" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-51" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-52" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-53" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-54" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-55" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-56" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-57" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-57"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-58" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-59" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-60" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-61" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-61"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-62" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-63" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-64" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-65" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-66" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-67" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_4ce2a5afcd37470daf07e221ffe247aa-68" name="rest_code_4ce2a5afcd37470daf07e221ffe247aa-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_4ce2a5afcd37470daf07e221ffe247aa-68"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; type in Ada grows dynamically as needed,
but is not as time efficient as fixed strings or bounded strings.
For this version, we'll use &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-18-2.html"&gt;Ada.Containers.Vectors&lt;/a&gt; for a
dynamically expending vector, rather than a fixed size vector.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-5.html"&gt;Ada.Strings.Unbounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-1" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-2" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-3" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_Io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-4" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-5" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Containers.Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-6" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-7" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;Unbounded_String_Vectors&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-8" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Containers.Vectors&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;Natural&lt;span class="p"&gt;,&lt;/span&gt; Unbounded_String&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-9" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-10" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-11" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-12" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-12"&gt;&lt;/a&gt;                &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="n"&gt;To_Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-13" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-13"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;subtype&lt;/span&gt; &lt;span class="kt"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-14" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-15" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-15"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-16" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-16"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-17" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-18" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-19" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-20" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-21" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-22" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-23" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-24" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-25" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-26" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-26"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-27" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-27"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-28" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-28"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-29" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-29"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-30" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-31" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-32" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-32"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-33" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-33"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-34" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-35" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-35"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-36" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-36"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-37" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-37"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-38" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-39" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-39"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-40" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-40"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-41" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-41"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;First_Index&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Last_Index&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-42" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-43" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-44" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-44"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-45" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-45"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-46" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-46"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-47" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-48" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-49" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-50" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-51" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-52" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-53" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-54" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-55" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-56" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-57" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-58" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-58"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-59" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-60" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-61" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-62" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-62"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-63" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-64" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-65" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-66" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-67" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-68" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-68"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_99b2f59bbca54664822518b16e7fc2ef-69" name="rest_code_99b2f59bbca54664822518b16e7fc2ef-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_99b2f59bbca54664822518b16e7fc2ef-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="programming" label="programming"/>
    <category term="splitting-strings" label="splitting strings"/>
    <category term="splitting-strings-in-ada" label="splitting strings in ada"/>
  </entry>
  <entry>
    <title>Multics Emacs programmed by secretaries</title>
    <id>https://tkurtbond.github.io/posts/2012/06/15/multics-emacs-programmed-by-secretaries/</id>
    <updated>2012-06-15T09:10:09-05:00</updated>
    <published>2012-06-15T09:10:09-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2012/06/15/multics-emacs-programmed-by-secretaries/"/>
    <summary type="html">&lt;p&gt;RMS &lt;a class="reference external" href="http://www.gnu.org/gnu/rms-lisp.html"&gt;relates&lt;/a&gt; how programming Multics Emacs was so convenient that secretaries started to learn to use it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… The language that you build your extensions on shouldn't be
thought of as a programming language in afterthought; it should be
designed as a programming language. In fact, we discovered that
the best programming language for that purpose was Lisp.&lt;/p&gt;
&lt;p&gt;It was Bernie Greenberg, who discovered that it was (5). He wrote
a version of Emacs in Multics MacLisp, and he wrote his commands
in MacLisp in a straightforward fashion. The editor itself was
written entirely in Lisp. Multics Emacs proved to be a great
success — programming new editing commands was so convenient that
even the secretaries in his office started learning how to use
it. They used a manual someone had written which showed how to
extend Emacs, but didn't say it was a programming. So the
secretaries, who believed they couldn't do programming, weren't
scared off. They read the manual, discovered they could do useful
things and they learned to program.&lt;/p&gt;
&lt;p&gt;So Bernie saw that an application — a program that does something
useful for you — which has Lisp inside it and which you could
extend by rewriting the Lisp programs, is actually a very good way
for people to learn programming. It gives them a chance to write
small programs that are useful for them, which in most arenas you
can't possibly do. They can get encouragement for their own
practical use — at the stage where it's the hardest — where they
don't believe they can program, until they get to the point where
they are programmers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- Wasn't troff also used by secretaries? --&gt;</summary>
    <category term="emacs" label="emacs"/>
    <category term="lisp" label="lisp"/>
    <category term="programming" label="programming"/>
  </entry>
  <entry>
    <title>sqlite implements table constraints</title>
    <id>https://tkurtbond.github.io/posts/2009/12/17/sqlite-implements-table-constraints/</id>
    <updated>2009-12-17T17:02:04-05:00</updated>
    <published>2009-12-17T17:02:04-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2009/12/17/sqlite-implements-table-constraints/"/>
    <summary type="html">&lt;p&gt;It's nice to see SQLite supports table constraints:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ sqlite3 test.db
SQLite version 3.6.19
Enter ".help" for instructions
Enter SQL statements terminated with a ";"
sqlite&amp;gt; create table t1
   ...&amp;gt; (k int,
   ...&amp;gt;  s int,
   ...&amp;gt;  e int,
   ...&amp;gt;  d int,
   ...&amp;gt;  constraint se_or_duration check
   ...&amp;gt;    ((s is not null and e is not null) or d is not null));
sqlite&amp;gt; insert into t1 values (1, 8, 4, null);
sqlite&amp;gt; insert into t1 values (2, null, null, 8);
sqlite&amp;gt; insert into t1 values (3, null, null, null);
SQL error: constraint failed
sqlite&amp;gt;&lt;/pre&gt;</summary>
    <category term="programming" label="programming"/>
    <category term="sql" label="sql"/>
    <category term="sqlite" label="sqlite"/>
  </entry>
  <entry>
    <title>I want a Dis-Integrated-Development-Environment</title>
    <id>https://tkurtbond.github.io/posts/2008/10/22/i-want-a-dis-integrated-development-environment/</id>
    <updated>2008-10-22T14:20:54-05:00</updated>
    <published>2008-10-22T14:20:54-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2008/10/22/i-want-a-dis-integrated-development-environment/"/>
    <summary type="html">&lt;p&gt;C.P. said: “I want a &lt;em&gt;dis&lt;/em&gt;-integrated development envronment, not an
integrated development environment.”  I agree.&lt;/p&gt;
&lt;p&gt;Microsoft's IDEs have always been about you adapting your working
style to their rigid idea of how that work should be done using their
monolithic tools.  Eclipse promises to let you add whatever
functionality you want to Eclipse, as long as you use their API (and
tools) and are willing to write a million lines of code.&lt;/p&gt;
&lt;p&gt;That's not what I want.&lt;/p&gt;
&lt;p&gt;I want to use the tools I find suitable to the job, and stitch them
together easily.  I want tools that work together, not get pasted
together.&lt;/p&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;Lucid's compiler suite with their IPC&lt;/p&gt;
&lt;p&gt;I like emacs, but I have no problem with acme.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    <category term="programming" label="programming"/>
    <category term="software" label="software"/>
  </entry>
  <entry>
    <title>Factor 0.90</title>
    <id>https://tkurtbond.github.io/posts/2007/08/25/factor-0.90/</id>
    <updated>2007-08-25T10:08:33-05:00</updated>
    <published>2007-08-25T10:08:33-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2007/08/25/factor-0.90/"/>
    <summary type="html">&lt;p&gt;It's been a while since I've looked at &lt;a class="reference external" href="http://factorcode.org/"&gt;Factor&lt;/a&gt;, and things are looking good.&lt;/p&gt;
&lt;p&gt;When using emacs with Factor under Microsoft Windows, remember to make
sure before you start Factor that &lt;code class="docutils literal"&gt;emacsclient&lt;/code&gt; is in your path, and
then do:&lt;/p&gt;
&lt;pre class="literal-block"&gt;"editors.emacs" require&lt;/pre&gt;
&lt;p&gt;to tell Factor your going to use emacs.  After that, make sure that
you've started the server in emacs with &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;server-start&lt;/span&gt;&lt;/code&gt; and try
something like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;\ . edit&lt;/pre&gt;
&lt;p&gt;to see the definition of the &lt;code class="docutils literal"&gt;.&lt;/code&gt; word.&lt;/p&gt;
&lt;aside class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;This is a &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2008/07/07/new-blog-first-post/"&gt;timewarp&lt;/a&gt; post.&lt;/p&gt;
&lt;/aside&gt;</summary>
    <category term="factor" label="factor"/>
    <category term="programming" label="programming"/>
    <category term="timewarp" label="timewarp"/>
  </entry>
</feed>
