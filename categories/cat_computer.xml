<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about computer)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/cat_computer.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Sun, 10 Nov 2019 10:57:22 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Fixing more broken links in this blog</title><link>https://tkurtbond.github.io/posts/2019/11/10/fixing-more-broken-links-in-this-blog/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I did another round of searching for broken internal links on this
blog and fixing them.  It took several hours.  Along the way I
annotated some old blog posts with notes from the present and fixed
typos. I think the blog is in pretty good shape now, though.&lt;/p&gt;</description><category>blog</category><guid>https://tkurtbond.github.io/posts/2019/11/10/fixing-more-broken-links-in-this-blog/</guid><pubDate>Sun, 10 Nov 2019 10:55:15 GMT</pubDate></item><item><title>macOS Catalina doesn't have a FTP client!</title><link>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Ack!  macOS Catalina doesn't have an FTP client!  Yes, I know it is
terribly insecure, but I only use it inside our firewall to access one
legacy computer system.  I was glad &lt;a class="reference external" href="https://brew.sh/"&gt;brew&lt;/a&gt; had &lt;a class="reference external" href="https://lftp.yar.ru/"&gt;LFTP&lt;/a&gt;, and I figured out
how to use active mode in &lt;code class="docutils literal"&gt;LFTP&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_325baa6af1144cb988025e3826dc01c2-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; ftp:passive-mode off
&lt;/pre&gt;&lt;p&gt;because that machine's FTP server only works with active mode.&lt;/p&gt;&lt;/div&gt;</description><category>catalina</category><category>ftp</category><category>macos</category><guid>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</guid><pubDate>Sun, 10 Nov 2019 03:00:04 GMT</pubDate></item><item><title>Playing with Hashlife</title><link>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;C.P. found &lt;a class="reference external" href="https://github.com/stylewarning"&gt;Robert Smith&lt;/a&gt;'s &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random/tree/master/hashlife"&gt;implementation&lt;/a&gt; of Bill Gosper's HASHLIFE
algorithm and wanted my help with running it.  I cloned the &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random"&gt;repo&lt;/a&gt; it
was in and ran &lt;code class="docutils literal"&gt;sbcl&lt;/code&gt; in the &lt;code class="docutils literal"&gt;hashlife&lt;/code&gt; directory.  Then I
entered:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a name="rest_code_870b9c61f60545db8eee015564a896e2-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt; &lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt; &lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;That result in &lt;code class="docutils literal"&gt;Component CHARMLIFE not found&lt;/code&gt; error in sbcl.  I
thought that was odd — it was right there in the current directory.  I
looked at &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;, and the only thing in it was
the quicklisp directory.  The ASDF &lt;a class="reference external" href="https://common-lisp.net/~mmommer/asdf-howto.shtml#sec11"&gt;howto&lt;/a&gt; showed an example of setting
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-2"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;;; Default directories, usually just the ``current directory''&lt;/span&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;*default-pathname-defaults*&lt;/span&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-5"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;;; Additional places where ASDF can find&lt;/span&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;;; system definition files&lt;/span&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-7"&gt;&lt;/a&gt;    &lt;span class="l l-Other"&gt;#p"/home/foo/lisp/systems/"&lt;/span&gt;
&lt;a name="rest_code_02801ccd1dd94b63a7eabeb7f30c29c1-8"&gt;&lt;/a&gt;    &lt;span class="l l-Other"&gt;#p"/usr/share/common-lisp/systems/"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Noticing that it had the symbol &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;*default-pathname-defaults*&lt;/span&gt;&lt;/code&gt; in the
new value, I guessed that it being missing from mine caused ASDF to
not find the system in the current directory.  So I added it and tried
again.  This time ASDF couldn't find &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;cl-charms&lt;/span&gt;&lt;/code&gt;.  I guessed and
used &lt;a class="reference external" href="https://www.quicklisp.org/"&gt;Quicklisp&lt;/a&gt; to load it.  That worked.  Then I looked at
&lt;code class="docutils literal"&gt;charmlife.lisp&lt;/code&gt; and looked at the &lt;code class="docutils literal"&gt;main&lt;/code&gt; function and figured out
how to run it and how to interact with the program when it was running.&lt;/p&gt;
&lt;p&gt;Here's what I had to do:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a name="rest_code_b836dd7671044943aea67e124e85a86d-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;
&lt;a name="rest_code_b836dd7671044943aea67e124e85a86d-2"&gt;&lt;/a&gt;      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons&lt;/span&gt; &lt;span class="ss"&gt;'*default-pathname-defaults*&lt;/span&gt;
&lt;a name="rest_code_b836dd7671044943aea67e124e85a86d-3"&gt;&lt;/a&gt;            &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_b836dd7671044943aea67e124e85a86d-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ql:quickload&lt;/span&gt; &lt;span class="s"&gt;"cl-charms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b836dd7671044943aea67e124e85a86d-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt; &lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt; &lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b836dd7671044943aea67e124e85a86d-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;charmlife:main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>common lisp</category><category>hashlife</category><category>life</category><guid>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</guid><pubDate>Fri, 08 Nov 2019 14:43:19 GMT</pubDate></item><item><title>Looping on 'dnf -y system-upgrade download' until it succeeds</title><link>https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Fedora 31 is out, and fool that I am I'm upgrading to it.
Unfortunately, my DSL connection is slow and my DSL modem router is flaky.
With over 3000 packages to download,&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_bf673262ca4d4c76952d4900024fbdaa-1"&gt;&lt;/a&gt;dnf -y system-upgrade download --refresh --releasever&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;is bound to die in the middle at least once, if not multiple times,
and with more than 6 hours estimated for the download to run I can't
sit watching it and restarting it every time it dies.&lt;/p&gt;
&lt;p&gt;I tried running &lt;code class="docutils literal"&gt;dnf&lt;/code&gt; as the argument to a while loop, but was
unable to C-c to interrupt it when I &lt;em&gt;did&lt;/em&gt; want to kill it since
&lt;code class="docutils literal"&gt;dnf&lt;/code&gt; caught the SIGINT and the loop started the &lt;code class="docutils literal"&gt;dnf&lt;/code&gt; command
over again before I could C-c the shell.&lt;/p&gt;
&lt;p&gt;Here's the script I came up with to work around the issue:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/tryfedoraupdate.html"&gt;tryfedoraupdate&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/tryfedoraupdate"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-1"&gt; 1&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-2"&gt; 2&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-3"&gt; 3&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-4"&gt; 4&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-5"&gt; 5&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-6"&gt; 6&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-7"&gt; 7&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-8"&gt; 8&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-9"&gt; 9&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-10"&gt;10&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-11"&gt;11&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-12"&gt;12&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-13"&gt;13&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/#rest_code_29a6ef84a27246289dc2e6c1d287f9b9-14"&gt;14&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/bash&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt; ! dnf -y system-upgrade download --refresh --releasever&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;read&lt;/span&gt; -t &lt;span class="m"&gt;30&lt;/span&gt; -p &lt;span class="s2"&gt;"Continue? (y/n) "&lt;/span&gt; reply
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&amp;gt;128&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-7"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"timed out, continuing..."&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$reply&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="o"&gt;[&lt;/span&gt;Nn&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-9"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Exiting..."&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-10"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-11"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-12"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Continuing..."&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;a name="rest_code_29a6ef84a27246289dc2e6c1d287f9b9-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This way I can stop the script easily, but if it dies itself it will
continue after a timeout.&lt;/p&gt;&lt;/div&gt;</description><category>bash</category><category>dnf</category><category>fedora</category><guid>https://tkurtbond.github.io/posts/2019/11/07/looping-on-dnf-y-system-upgrade-download-until-it-succeeds/</guid><pubDate>Fri, 08 Nov 2019 02:16:59 GMT</pubDate></item><item><title>Converting my pyBloxsom blog into a Nikola blog</title><link>https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Yesterday I decided to try blogging again.  I started writing a post
at blogger.com, but that was like wading through a rotting whale
corpse.  Instead I decided to use &lt;a class="reference external" href="https://help.github.com/en/github/working-with-github-pages/about-github-pages"&gt;GitHub Pages&lt;/a&gt;
and use the static blog/site generator &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt; to generate the
content, editing reStructuredText (ReST) files.&lt;/p&gt;
&lt;p&gt;I wrote my first &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/"&gt;post&lt;/a&gt; and it was good!  Using ReST again was much
better than editing in a GUI like blogger.com, and having it hosted by
GitHub Pages was more restful than running a machine hosting a
website.&lt;/p&gt;
&lt;p&gt;But then I thought off all the posts I had in my old blog, before I
stopped running machine hosting a website.  They were all written in
ReST — maybe I could put them up on my new blog?&lt;/p&gt;
&lt;p&gt;I took a couple three hours and wrote a shell script to find the old
&lt;a class="reference external" href="https://pyblosxom.github.io/"&gt;pyBloxsom&lt;/a&gt; files and feed them into a python script that I also wrote.
Along the way I made sure the files all had &lt;code class="docutils literal"&gt;#published&lt;/code&gt; and
&lt;code class="docutils literal"&gt;#tags&lt;/code&gt; lines, in that order, immediately following the title line.&lt;/p&gt;
&lt;p&gt;Here's the shell script:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/drive-pyblox-to-nikola.html"&gt;drive-pyblox-to-nikola&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/drive-pyblox-to-nikola"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_dfaca502e889479e81ee85f96100fc77-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a name="rest_code_dfaca502e889479e81ee85f96100fc77-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_dfaca502e889479e81ee85f96100fc77-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/myblog &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a name="rest_code_dfaca502e889479e81ee85f96100fc77-4"&gt;&lt;/a&gt;     find notentries/ entries/ -type f -name &lt;span class="se"&gt;\*&lt;/span&gt;.rst &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_dfaca502e889479e81ee85f96100fc77-5"&gt;&lt;/a&gt;         ~/comp/tkbtools/Scripts/pyblox-to-nikola&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Here's the python script:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/pyblox-to-nikola.html"&gt;pyblox-to-nikola&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/pyblox-to-nikola"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-1"&gt; 1&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-2"&gt; 2&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-3"&gt; 3&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-4"&gt; 4&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-5"&gt; 5&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-6"&gt; 6&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-7"&gt; 7&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-8"&gt; 8&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-9"&gt; 9&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-10"&gt;10&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-11"&gt;11&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-12"&gt;12&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-13"&gt;13&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-14"&gt;14&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-15"&gt;15&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-16"&gt;16&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-17"&gt;17&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-18"&gt;18&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-19"&gt;19&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-20"&gt;20&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-21"&gt;21&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-22"&gt;22&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-23"&gt;23&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-24"&gt;24&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-25"&gt;25&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-26"&gt;26&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-27"&gt;27&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-28"&gt;28&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-29"&gt;29&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-30"&gt;30&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-31"&gt;31&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-32"&gt;32&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-33"&gt;33&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-34"&gt;34&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-35"&gt;35&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-36"&gt;36&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-37"&gt;37&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-38"&gt;38&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-39"&gt;39&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-40"&gt;40&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-41"&gt;41&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-42"&gt;42&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-43"&gt;43&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-44"&gt;44&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-45"&gt;45&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-46"&gt;46&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-47"&gt;47&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-48"&gt;48&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-49"&gt;49&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-50"&gt;50&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-51"&gt;51&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-52"&gt;52&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-53"&gt;53&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-54"&gt;54&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-55"&gt;55&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-56"&gt;56&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-57"&gt;57&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-58"&gt;58&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-59"&gt;59&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-60"&gt;60&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-61"&gt;61&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-62"&gt;62&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-63"&gt;63&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-64"&gt;64&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-65"&gt;65&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-66"&gt;66&lt;/a&gt;
&lt;a href="https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/#rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-67"&gt;67&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env python3.7&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-6"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# datetime.strptime ('2019-11-05 20:32:24', '%Y-%m-%d %H:%M:%S')&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# dt.strftime ('%Y-%m-%d %H:%M:%S UTC-05:00')&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;entries_prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'entries/'&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;notentries_prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'notentries/'&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;published_prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'#published '&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-14"&gt;&lt;/a&gt;&lt;span class="n"&gt;tags_prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'#tags '&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-16"&gt;&lt;/a&gt;&lt;span class="n"&gt;files_read&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-17"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entries_prefix&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entries_prefix&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-23"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notentries_prefix&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-24"&gt;&lt;/a&gt;        &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notentries_prefix&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-25"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-26"&gt;&lt;/a&gt;        &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-27"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitext&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-28"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'filename: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;basename: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;dirname: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;category: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;slug: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-29"&gt;&lt;/a&gt;           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-30"&gt;&lt;/a&gt;    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-31"&gt;&lt;/a&gt;    &lt;span class="n"&gt;files_read&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;files_read&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-32"&gt;&lt;/a&gt;    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-33"&gt;&lt;/a&gt;    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-35"&gt;&lt;/a&gt;    &lt;span class="n"&gt;published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-36"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;published_prefix&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-37"&gt;&lt;/a&gt;        &lt;span class="n"&gt;published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;published_prefix&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-38"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-39"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Unknown line should be #published'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-40"&gt;&lt;/a&gt;    &lt;span class="n"&gt;published_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-41"&gt;&lt;/a&gt;    &lt;span class="n"&gt;nikola_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;published_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S UTC-05:00'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-42"&gt;&lt;/a&gt;    &lt;span class="n"&gt;datepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;published_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y/%m/&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-43"&gt;&lt;/a&gt;    &lt;span class="n"&gt;newdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/Users/tkb/nikola/newblog/posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datepath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-44"&gt;&lt;/a&gt;    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newdir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exist_ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-45"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-46"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-47"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tags_prefix&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-48"&gt;&lt;/a&gt;        &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tags_prefix&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-49"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-50"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Unknown line should be #tags'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-51"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-52"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outfname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newdir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-53"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'outfname: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;outfname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-54"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outfname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-55"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. title: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-56"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. slug: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-57"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. date: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;nikola_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-58"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. tags: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-59"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. category: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-60"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. link: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-61"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. description: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-62"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.. type: text&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-64"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-65"&gt;&lt;/a&gt;        &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-66"&gt;&lt;/a&gt;    &lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6523d5fbe0d14ce78c8b5daa05a8da0e-67"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s1"&gt;Files Read: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;files_read&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;There were 810 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; files to process.  Once that was
done, I had to work through those files multiple times finding all the
broken internal links, since many of them were absolute links to my
old blog or other pages on my old website.  I did &lt;cite&gt;grep-find&lt;/cite&gt; in Emacs
multiple times to find all the occurances of my old website's hostname
(which went through a couple of variations over time), then looked for
site relative links that started with &lt;code class="docutils literal"&gt;/~tkb&lt;/code&gt;, a tedious but not too
difficult process.&lt;/p&gt;&lt;/div&gt;</description><category>blog</category><category>conversion</category><category>nikola</category><category>pybloxsom</category><guid>https://tkurtbond.github.io/posts/2019/11/06/converting-my-pybloxsom-blog-into-a-nikola-blog/</guid><pubDate>Wed, 06 Nov 2019 19:10:35 GMT</pubDate></item><item><title>POISE DMS-PLus</title><link>https://tkurtbond.github.io/posts/2014/11/23/poise-dms-plus/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I found a &lt;a class="reference external" href="http://www2.esp-tulsa.com/products.htm#dmsplus"&gt;web page&lt;/a&gt; that lists all the POISE products, now known as the
Jenzabar PX Administrative Information Systems, including the POISE
DMS-Plus.&lt;/p&gt;</description><category>dms-plus</category><category>jenzabar px</category><category>poise</category><guid>https://tkurtbond.github.io/posts/2014/11/23/poise-dms-plus/</guid><pubDate>Sun, 23 Nov 2014 06:48:58 GMT</pubDate></item><item><title>Mac OS X go likes gcc 4.2.1 doesn't lke 4.7.2</title><link>https://tkurtbond.github.io/posts/2012/11/13/mac-os-x-go-likes-gcc-4.2.1-doesnt-lke-4.7.2/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I have gcc from MacPorts (“gcc version 4.7.2 (MacPorts gcc47
4.7.2_2)”) installed on my laptop running Mac OS X 10.6.8, and when
updated and recompiled go the tests failed in the race detector with a
message about a MachO segment being missing.  I put /usr/bin/gcc at
the front of the path, and everything compiled tested fine.&lt;/p&gt;</description><category>gcc</category><category>go language</category><category>mac os x</category><guid>https://tkurtbond.github.io/posts/2012/11/13/mac-os-x-go-likes-gcc-4.2.1-doesnt-lke-4.7.2/</guid><pubDate>Tue, 13 Nov 2012 18:58:24 GMT</pubDate></item><item><title>Defining keys in the C-x 8 prefix keymap</title><link>https://tkurtbond.github.io/posts/2012/10/03/defining-keys-in-the-c-x-8-prefix-keymap/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Yay!  I finally found it!&lt;/p&gt;
&lt;p&gt;Suppose you hate typing “C-x 8 RET GREEK SMALL LETTER LAMBDA” to
insert a lowercase lambda character in emacs (perhaps because you have
a dull American keyboard and aren't very savvy to input methods).  You
can add a key definition to the “C-x 8 prefix keymap”, say “gl”, so
you can type “C-x 8 g l” and insert a lowercase lambda.&lt;/p&gt;
&lt;p&gt;Here's how you might do it for “λ”, “Λ”, and “§”:&lt;/p&gt;
&lt;pre class="literal-block"&gt;(load-library "iso-transl.el")
(iso-transl-define-keys '(("gl" . [?λ])   ; greek lowercase lambda
                          ("gL" . [?Λ])   ; greek uppercase lambda
                          ("ps" . [?§]))) ; punctuation SECTION SIGN&lt;/pre&gt;&lt;/div&gt;</description><category>emacs</category><category>emacs lisp</category><category>key translation</category><category>unicode</category><guid>https://tkurtbond.github.io/posts/2012/10/03/defining-keys-in-the-c-x-8-prefix-keymap/</guid><pubDate>Thu, 04 Oct 2012 04:54:40 GMT</pubDate></item><item><title>Why does Cygwin unzip create executables that can't be executed outside Cygwin?</title><link>https://tkurtbond.github.io/posts/2012/07/06/why-does-cygwin-unzip-create-executables-that-cant-be-executed-outside-cygwin/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;When I unzip a MS Windows emacs distribution using the Cygwin
&lt;code class="app docutils literal"&gt;unzip&lt;/code&gt; and try to execute &lt;code class="app docutils literal"&gt;addpm&lt;/code&gt; with the MS Windows
Explorer &lt;strong&gt;as the same user&lt;/strong&gt;, why do I get an error about not having
the correct protections to execute the file?&lt;/p&gt;</description><category>cygwin</category><category>ms windows</category><category>unzip</category><guid>https://tkurtbond.github.io/posts/2012/07/06/why-does-cygwin-unzip-create-executables-that-cant-be-executed-outside-cygwin/</guid><pubDate>Sat, 07 Jul 2012 00:43:07 GMT</pubDate></item><item><title>Multics Emacs programmed by secretaries</title><link>https://tkurtbond.github.io/posts/2012/06/15/multics-emacs-programmed-by-secretaries/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;RMS &lt;a class="reference external" href="http://www.gnu.org/gnu/rms-lisp.html"&gt;relates&lt;/a&gt; how programming Multics Emacs was so convenient that secretaries started to learn to use it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… The language that you build your extensions on shouldn't be
thought of as a programming language in afterthought; it should be
designed as a programming language. In fact, we discovered that
the best programming language for that purpose was Lisp.&lt;/p&gt;
&lt;p&gt;It was Bernie Greenberg, who discovered that it was (5). He wrote
a version of Emacs in Multics MacLisp, and he wrote his commands
in MacLisp in a straightforward fashion. The editor itself was
written entirely in Lisp. Multics Emacs proved to be a great
success — programming new editing commands was so convenient that
even the secretaries in his office started learning how to use
it. They used a manual someone had written which showed how to
extend Emacs, but didn't say it was a programming. So the
secretaries, who believed they couldn't do programming, weren't
scared off. They read the manual, discovered they could do useful
things and they learned to program.&lt;/p&gt;
&lt;p&gt;So Bernie saw that an application — a program that does something
useful for you — which has Lisp inside it and which you could
extend by rewriting the Lisp programs, is actually a very good way
for people to learn programming. It gives them a chance to write
small programs that are useful for them, which in most arenas you
can't possibly do. They can get encouragement for their own
practical use — at the stage where it's the hardest — where they
don't believe they can program, until they get to the point where
they are programmers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- Wasn't troff also used by secretaries? --&gt;&lt;/div&gt;</description><category>emacs</category><category>lisp</category><category>programming</category><guid>https://tkurtbond.github.io/posts/2012/06/15/multics-emacs-programmed-by-secretaries/</guid><pubDate>Fri, 15 Jun 2012 14:10:09 GMT</pubDate></item></channel></rss>