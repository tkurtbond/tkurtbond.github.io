<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about computer)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/cat_computer.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Sun, 03 May 2020 06:58:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Customizing pandoc ms output with a Lua filter</title><link>https://tkurtbond.github.io/posts/2020/05/03/customizing-pandoc-ms-output-with-a-lua-filter/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;This article started as a &lt;a class="reference external" href="https://groups.google.com/d/msg/pandoc-discuss/UJgyLbxTNxo/MZDVFts-BAAJ"&gt;message&lt;/a&gt; I sent to the the &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/pandoc-discuss"&gt;pandoc-discuss&lt;/a&gt;
Google Group.  This version has more links and has been slightly
reworded.&lt;/p&gt;
&lt;p&gt;I work with &lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;ReStructuredText&lt;/a&gt; documents a lot and often use &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt; to
format them, especially to PDF by way of &lt;span class="app"&gt;pandoc&lt;/span&gt;'s &lt;code class="docutils literal"&gt;ms&lt;/code&gt;
output format, which uses &lt;span class="app"&gt;groff&lt;/span&gt; with the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-ms&lt;/span&gt;&lt;/code&gt; macros to produce the
PDF output.  Using &lt;code class="docutils literal"&gt;ms&lt;/code&gt; output is fast, &lt;span class="app"&gt;groff&lt;/span&gt; is usually available
on the operating systems I use, and if you &lt;em&gt;do&lt;/em&gt; have to install &lt;span class="app"&gt;groff&lt;/span&gt;
it is easy to do and much, much smaller than any &lt;span class="app"&gt;TeX&lt;/span&gt; distributions.&lt;/p&gt;
&lt;p&gt;However, it would be a nice to be able to customize the &lt;code class="docutils literal"&gt;ms&lt;/code&gt; output
more for specific input, like if you are using technical writing and
are pining for something like the various inline roles of &lt;a class="reference external" href="https://tdg.docbook.org/tdg/5.1/ch02.html#s.inline"&gt;DocBook&lt;/a&gt;, or
wanted poems to be typeset more stylishly that the &lt;code class="docutils literal"&gt;ms&lt;/code&gt; output does.&lt;/p&gt;
&lt;p&gt;You should probably be a little familiar with the &lt;a class="reference external" href="https://pandoc.org/MANUAL.html"&gt;Pandoc User
Manual&lt;/a&gt; and have the documentation for &lt;a class="reference external" href="https://pandoc.org/lua-filters.html"&gt;Lua Filter&lt;/a&gt;'s available for
reference while reading this article.  And having a reading
familiarity with &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; and its &lt;a class="reference external" href="https://www.gnu.org/software/groff/manual/"&gt;manual&lt;/a&gt; and specifically the &lt;a class="reference external" href="https://www.gnu.org/software/groff/manual/html_node/ms.html#ms"&gt;-ms
macros&lt;/a&gt; will be useful too.  And maybe &lt;a class="reference external" href="https://www.lua.org/"&gt;Lua&lt;/a&gt; as well.&lt;/p&gt;
&lt;p&gt;Starting with an &lt;a class="reference external" href="https://dave.autonoma.ca/blog/2020/04/28/typesetting-markdown-part-8/"&gt;article&lt;/a&gt; from Dave Jarvis that had an example &lt;a class="reference external" href="https://pandoc.org/lua-filters.html"&gt;Lua
filter&lt;/a&gt; for customizing the &lt;span class="app"&gt;ConTeXt&lt;/span&gt; output and a little help
from the pandoc-discuss mailing list I came up with this example &lt;a class="reference external" href="https://pandoc.org/lua-filters.html"&gt;Lua
Filter&lt;/a&gt; that formats program names and poems specially.&lt;/p&gt;
&lt;p&gt;This filter wraps spans with a class, such as from interpreted text
roles defined in the source ReST (like &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;:program:`pandoc`&lt;/span&gt;&lt;/code&gt;) in calls
to user defined &lt;span class="app"&gt;groff&lt;/span&gt; strings &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;\*[start&amp;lt;class&amp;gt;]&lt;/span&gt;&lt;/code&gt; and
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;\*[stop&amp;lt;class&amp;gt;]&lt;/span&gt;&lt;/code&gt;.  (I've specified the string definitions for
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;\*[startprogram]&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;\*[stopprogram]&lt;/span&gt;&lt;/code&gt; in the source ReST as a
raw block for &lt;code class="docutils literal"&gt;ms&lt;/code&gt; output but they could be in a customized &lt;code class="docutils literal"&gt;ms&lt;/code&gt;
pandoc template, too.)  These strings can include &lt;span class="app"&gt;groff&lt;/span&gt; escapes to
change the font and the glyph color and then change back to the
previous font and glyph color.  In this example I made PDF output for
the interpreted text role &lt;code class="docutils literal"&gt;program&lt;/code&gt; come out in a constant width
font and in red.&lt;/p&gt;
&lt;p&gt;It also wraps divs with classes with calls to user defined &lt;span class="app"&gt;groff&lt;/span&gt;
macros &lt;code class="docutils literal"&gt;.start&amp;lt;class&amp;gt;&lt;/code&gt; and &lt;code class="docutils literal"&gt;.stop&amp;lt;class&amp;gt;&lt;/code&gt; (also included in the
source ReST in the raw block for ms output).&lt;/p&gt;
&lt;p&gt;For divs with the poem class, it converts any contained LineBlock
elements into a list of Plain elements containing its contents,
avoiding the ms output for the LineBlock starting with &lt;code class="docutils literal"&gt;.LP&lt;/code&gt;, which
would cancel the &lt;code class="docutils literal"&gt;.DS&lt;/code&gt; (display start) macro I want to use in the
.startpoem macro definition.  The &lt;code class="docutils literal"&gt;.LP&lt;/code&gt; would also reset the font family
in use to the default, another reason to avoid it. &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2020/05/03/customizing-pandoc-ms-output-with-a-lua-filter/#lp" id="id1"&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The filter also converts the empty element that occurs in the line block
as a result of a blank line in the line block input into a RawBlock
that creates a blank line in the ms output, to show the division into
stanzas of the poem.&lt;/p&gt;
&lt;p&gt;Interestingly, the first Str elements in the each line in the content
of the line block preserved the leading spaces from the input as
Unicode NO-BREAK SPACE characters, preserving indentation of lines in
the line block.  Unfortunately, the width of those spaces alone is not
enough create a visually distinct indentation, so this filter changes
those Str elements into a RawInline that outputs a &lt;span class="app"&gt;groff&lt;/span&gt; horizfontal
movement whose width is based on the number of leading NO-BREAK SPACE
characters, and follow this with a new Str element that has the
leading NO-BREAK SPACE characters removed.&lt;/p&gt;
&lt;p&gt;Here is the Lua filter:&lt;/p&gt;
&lt;pre class="code lua"&gt;&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;onig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"rex_onig"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;-- Need a regex package that understands UTF8.&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- text in LineBreak preserves leading spaces as Unicode NO-BREAK SPACE&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;leading_nobreakspace_rx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;onig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"^(&lt;/span&gt;&lt;span class="se"&gt;\u{a0}&lt;/span&gt;&lt;span class="s2"&gt;+)(.*)$"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"UTF8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-5"&gt;&lt;/a&gt;&lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-6"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;find_if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;matches&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-7"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;numPara&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-8"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="kr"&gt;then&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-9"&gt;&lt;/a&gt;     &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"[^%w]*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-10"&gt;&lt;/a&gt;     &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"poem"&lt;/span&gt; &lt;span class="kr"&gt;then&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;walk_block&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-12"&gt;&lt;/a&gt;           &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-13"&gt;&lt;/a&gt;              &lt;span class="c1"&gt;-- Replace LineBlock element with a list of Plain elements&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-14"&gt;&lt;/a&gt;              &lt;span class="c1"&gt;-- containing the LineBlock's subelements.&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-15"&gt;&lt;/a&gt;              &lt;span class="n"&gt;LineBlock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-16"&gt;&lt;/a&gt;                 &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-17"&gt;&lt;/a&gt;                 &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subel&lt;/span&gt; &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;ipairs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;do&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-18"&gt;&lt;/a&gt;                    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;subel&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="kr"&gt;then&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-19"&gt;&lt;/a&gt;                       &lt;span class="c1"&gt;-- If subel is an empty table, output a raw empty line&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-20"&gt;&lt;/a&gt;                       &lt;span class="nb"&gt;table.insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RawBlock&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ms"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-21"&gt;&lt;/a&gt;                    &lt;span class="kr"&gt;else&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-22"&gt;&lt;/a&gt;                       &lt;span class="c1"&gt;-- Check for leading NO-BREAK SPACE charaters&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-23"&gt;&lt;/a&gt;                       &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;onig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-24"&gt;&lt;/a&gt;                                                  &lt;span class="n"&gt;leading_nobreakspace_rx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-25"&gt;&lt;/a&gt;                       &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt; &lt;span class="kr"&gt;then&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-26"&gt;&lt;/a&gt;                          &lt;span class="c1"&gt;-- Replace the NO-BREAK SPACE characters with a raw&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-27"&gt;&lt;/a&gt;                          &lt;span class="c1"&gt;-- groff horizontal movement, because the&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-28"&gt;&lt;/a&gt;                          &lt;span class="c1"&gt;-- NO-BREAK SPACE characters are too narrow.&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-29"&gt;&lt;/a&gt;                          &lt;span class="nb"&gt;table.insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RawInline&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ms"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;string.format&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;h'%dn'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;utf8.len&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-30"&gt;&lt;/a&gt;                          &lt;span class="c1"&gt;-- Modify what was used to be the first item to just&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-31"&gt;&lt;/a&gt;                          &lt;span class="c1"&gt;-- include the trailing characters of the match.&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-32"&gt;&lt;/a&gt;                          &lt;span class="n"&gt;subel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Str&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-33"&gt;&lt;/a&gt;                          &lt;span class="nb"&gt;table.insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plain&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subel&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-34"&gt;&lt;/a&gt;                       &lt;span class="kr"&gt;else&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-35"&gt;&lt;/a&gt;                          &lt;span class="c1"&gt;-- Just put the subel in Plain element.&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-36"&gt;&lt;/a&gt;                          &lt;span class="nb"&gt;table.insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plain&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subel&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-37"&gt;&lt;/a&gt;                       &lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-38"&gt;&lt;/a&gt;                    &lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-39"&gt;&lt;/a&gt;                 &lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-40"&gt;&lt;/a&gt;                 &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-41"&gt;&lt;/a&gt;        &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-42"&gt;&lt;/a&gt;     &lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-43"&gt;&lt;/a&gt;     &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-44"&gt;&lt;/a&gt;        &lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;".start"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-45"&gt;&lt;/a&gt;        &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-46"&gt;&lt;/a&gt;        &lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;".stop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-47"&gt;&lt;/a&gt;     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-48"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-49"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-50"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-51"&gt;&lt;/a&gt;&lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-52"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;find_if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-53"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-54"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="kr"&gt;then&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-55"&gt;&lt;/a&gt;     &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"[^%w]*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-56"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-57"&gt;&lt;/a&gt;     &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-58"&gt;&lt;/a&gt;        &lt;span class="n"&gt;ms_inline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;*[start"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"]"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-59"&gt;&lt;/a&gt;        &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-60"&gt;&lt;/a&gt;        &lt;span class="n"&gt;ms_inline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;*[stop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"]"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-61"&gt;&lt;/a&gt;     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-62"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-63"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-64"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-65"&gt;&lt;/a&gt;&lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-66"&gt;&lt;/a&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"^%a+"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-67"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-68"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;macro&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-70"&gt;&lt;/a&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RawBlock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"ms"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;macro&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-71"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-72"&gt;&lt;/a&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-73"&gt;&lt;/a&gt;&lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;ms_inline&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;macro&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-74"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RawInline&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ms"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;macro&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;annotation&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1397e8a10c944cc4a728ec03e0c650e3-75"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Here is the ReST source of the document:&lt;/p&gt;
&lt;pre class="code ReST"&gt;&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-1"&gt;&lt;/a&gt;Lua Filters For Massaging &lt;span class="s"&gt;``ms``&lt;/span&gt; Output
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-2"&gt;&lt;/a&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; ms
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-6"&gt;&lt;/a&gt;   .ds startprogram \\f[CW]\\m[red]
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-7"&gt;&lt;/a&gt;   .ds stopprogram \\m[]\\fP
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-8"&gt;&lt;/a&gt;   .de startpoem
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-9"&gt;&lt;/a&gt;   .ds OLDFAM \\*[FAM]
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-10"&gt;&lt;/a&gt;   .ds FAM BM
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-11"&gt;&lt;/a&gt;   .DS I 3
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-12"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   ..&lt;/span&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-13"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   .de stoppoem&lt;/span&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-14"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   .DE&lt;/span&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-15"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   .ds FAM \\*[OLDFAM]&lt;/span&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-16"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   ..&lt;/span&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;role&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; program
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-20"&gt;&lt;/a&gt;This is a sentence.  This sentence talks about &lt;span class="na"&gt;:program:&lt;/span&gt;&lt;span class="nv"&gt;`pandoc`&lt;/span&gt;.
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-21"&gt;&lt;/a&gt;This is
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-22"&gt;&lt;/a&gt;another sentence.
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;class&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; poem
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-26"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt; Some say the world will end in fire,
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-27"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt;    Some say in ice.
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-28"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt; From what I've tasted of desire
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-29"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt;    I hold with those who favor fire.
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-30"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt; But if it had to perish twice,
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-31"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt;    I think I know enough of hate
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-32"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt;    To say that for destruction ice
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-33"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt;    Is also great,
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-34"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt; And would suffice.
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-35"&gt;&lt;/a&gt;   |
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-36"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt; And another line,
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-37"&gt;&lt;/a&gt;   &lt;span class="o"&gt;|&lt;/span&gt;    And an indented line.
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-38"&gt;&lt;/a&gt;
&lt;a name="rest_code_b5eca125ab6341c6a9e09f98f83dd3c9-39"&gt;&lt;/a&gt;This is a final sentence.
&lt;/pre&gt;&lt;p&gt;And here is the ms output:&lt;/p&gt;
&lt;pre class="code groff"&gt;&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-1"&gt;&lt;/a&gt;.&lt;span class="k"&gt;SH&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-2"&gt;&lt;/a&gt;Lua Filters For Massaging &lt;span class="se"&gt;\f[CB]ms\f[B]&lt;/span&gt; Output
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-3"&gt;&lt;/a&gt;.&lt;span class="k"&gt;pdfhref&lt;/span&gt; &lt;span class="s"&gt;O&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s2"&gt;"Lua Filters For Massaging ms Output"&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-4"&gt;&lt;/a&gt;.&lt;span class="k"&gt;pdfhref&lt;/span&gt; &lt;span class="s"&gt;M&lt;/span&gt; &lt;span class="s2"&gt;"lua-filters-for-massaging-ms-output"&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-5"&gt;&lt;/a&gt;.&lt;span class="k"&gt;ds&lt;/span&gt; &lt;span class="s"&gt;startprogram&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;f[CW]\\m[red]&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-6"&gt;&lt;/a&gt;.&lt;span class="k"&gt;ds&lt;/span&gt; &lt;span class="s"&gt;stopprogram&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;m[]\\fP&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-7"&gt;&lt;/a&gt;.&lt;span class="k"&gt;de&lt;/span&gt; &lt;span class="s"&gt;startpoem&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-8"&gt;&lt;/a&gt;.&lt;span class="k"&gt;ds&lt;/span&gt; &lt;span class="s"&gt;OLDFAM&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;*[FAM]&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-9"&gt;&lt;/a&gt;.&lt;span class="k"&gt;ds&lt;/span&gt; &lt;span class="s"&gt;FAM&lt;/span&gt; &lt;span class="s"&gt;BM&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-10"&gt;&lt;/a&gt;.&lt;span class="k"&gt;DS&lt;/span&gt; &lt;span class="s"&gt;I&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-12"&gt;&lt;/a&gt;.&lt;span class="k"&gt;de&lt;/span&gt; &lt;span class="s"&gt;stoppoem&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-13"&gt;&lt;/a&gt;.&lt;span class="k"&gt;DE&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-14"&gt;&lt;/a&gt;.&lt;span class="k"&gt;ds&lt;/span&gt; &lt;span class="s"&gt;FAM&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;*[OLDFAM]&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-16"&gt;&lt;/a&gt;.&lt;span class="k"&gt;LP&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-17"&gt;&lt;/a&gt;This is a sentence.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-18"&gt;&lt;/a&gt;This sentence talks about &lt;span class="se"&gt;\*[startprogram]pandoc\*[stopprogram]&lt;/span&gt;.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-19"&gt;&lt;/a&gt;This is
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-20"&gt;&lt;/a&gt;another sentence.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-21"&gt;&lt;/a&gt;.&lt;span class="k"&gt;startpoem&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-22"&gt;&lt;/a&gt;Some say the world will end in fire,
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-23"&gt;&lt;/a&gt;&lt;span class="se"&gt;\h&lt;/span&gt;'3n'Some say in ice.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-24"&gt;&lt;/a&gt;From what I&lt;span class="se"&gt;\[&lt;/span&gt;aq]ve tasted of desire
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-25"&gt;&lt;/a&gt;&lt;span class="se"&gt;\h&lt;/span&gt;'3n'I hold with those who favor fire.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-26"&gt;&lt;/a&gt;But if it had to perish twice,
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-27"&gt;&lt;/a&gt;&lt;span class="se"&gt;\h&lt;/span&gt;'3n'I think I know enough of hate
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-28"&gt;&lt;/a&gt;&lt;span class="se"&gt;\h&lt;/span&gt;'3n'To say that for destruction ice
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-29"&gt;&lt;/a&gt;&lt;span class="se"&gt;\h&lt;/span&gt;'3n'Is also great,
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-30"&gt;&lt;/a&gt;And would suffice.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-31"&gt;&lt;/a&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-32"&gt;&lt;/a&gt;And another line,
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-33"&gt;&lt;/a&gt;&lt;span class="se"&gt;\h&lt;/span&gt;'3n'And an indented line.
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-34"&gt;&lt;/a&gt;.&lt;span class="k"&gt;stoppoem&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-35"&gt;&lt;/a&gt;.&lt;span class="k"&gt;LP&lt;/span&gt;
&lt;a name="rest_code_51c91e62f05f46d08c7219ebca031e70-36"&gt;&lt;/a&gt;This is a final sentence.
&lt;/pre&gt;&lt;p&gt;The command to produce the ms output is:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_2abf2670373149538dce7d48d8ba18f2-1"&gt;&lt;/a&gt;pandoc -f rst -t ms --lua-filter classify-rst-ms.lua --wrap=preserve poem-plus.rst
&lt;/pre&gt;&lt;p&gt;and the command to produce a PDF is:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9199f2ea46d54f7abbe0fdc1e6383e51-1"&gt;&lt;/a&gt;pandoc -f rst -t ms --lua-filter classify-rst-ms.lua --wrap&lt;span class="o"&gt;=&lt;/span&gt;preserve poem-plus.rst --output&lt;span class="o"&gt;=&lt;/span&gt;poem-plus-rst-ms.pdf
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/poem-plus-rst-ms.pdf"&gt;Here&lt;/a&gt; is the output PDF.&lt;/p&gt;
&lt;p&gt;Being able to rewrite the tree and insert RawBlocks and RawInlines is
really powerful when it comes to customizing output for particular
output formats.&lt;/p&gt;
&lt;p&gt;I hope this example is useful for others like me just learning to use
Lua filters.&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="lp"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://tkurtbond.github.io/posts/2020/05/03/customizing-pandoc-ms-output-with-a-lua-filter/#id1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;The &lt;code class="docutils literal"&gt;.LP&lt;/code&gt; macro in the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-ms&lt;/span&gt;&lt;/code&gt; macros resets a lot of
things back to the default when it is used, so if you want the custom
&lt;span class="app"&gt;groff&lt;/span&gt; setting from your user defined macros to continue from the
start to the end you can't allow the use of &lt;code class="docutils literal"&gt;.LP&lt;/code&gt; between the
&lt;code class="docutils literal"&gt;.start&amp;lt;class&amp;gt;&lt;/code&gt; and &lt;code class="docutils literal"&gt;.stop&amp;lt;class&amp;gt;&lt;/code&gt; macros.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;</description><category>groff ms macros</category><category>lua filters</category><category>pandoc</category><category>pandoc-discuss</category><category>pdf</category><category>restructuredtext</category><guid>https://tkurtbond.github.io/posts/2020/05/03/customizing-pandoc-ms-output-with-a-lua-filter/</guid><pubDate>Sun, 03 May 2020 05:01:53 GMT</pubDate></item><item><title>Binding a symbol defined with DEFCONSTANT with LET is not portable in Common Lisp</title><link>https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.sbcl.org/"&gt;SBCL&lt;/a&gt; and &lt;a class="reference external" href="https://ccl.clozure.com/"&gt;CCL&lt;/a&gt; and &lt;a class="reference external" href="https://clisp.sourceforge.io/"&gt;CLISP&lt;/a&gt; think binding a symbol defined with &lt;code class="docutils literal"&gt;defconstant&lt;/code&gt;
is an error, so if you do&lt;/p&gt;
&lt;pre class="code common-lisp"&gt;&lt;a name="rest_code_3c0ac046cc934a26af4f0b3b0417ba45-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defconstant&lt;/span&gt; &lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_3c0ac046cc934a26af4f0b3b0417ba45-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;you get an error.  But in &lt;a class="reference external" href="https://abcl.org/"&gt;ABCL&lt;/a&gt; and &lt;a class="reference external" href="https://common-lisp.net/project/ecl/"&gt;ECL&lt;/a&gt; you donât.&lt;/p&gt;
&lt;p&gt;If you try&lt;/p&gt;
&lt;pre class="code common-lisp"&gt;&lt;a name="rest_code_e11c81000bd04c11b01c366e7f6562da-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;in SBCL and CCL you get an error when the function is compiled.
In SBCL the function is defined, but always gives an error when run.
In CCL the function does not get defined.&lt;/p&gt;&lt;/div&gt;</description><category>abcl</category><category>ccl</category><category>clisp</category><category>common lisp</category><category>ecl</category><category>sbcl</category><guid>https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/</guid><pubDate>Sat, 25 Apr 2020 03:46:39 GMT</pubDate></item><item><title>Making digest-sized pages with pandoc and ms output</title><link>https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;After I wrote this post, I made a last minute check of the options
to &lt;span class="app"&gt;pandoc&lt;/span&gt; and found that the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=&lt;/span&gt;&lt;/code&gt; option
does exactly what I want.  How embarrassing.  So I changed this
post, showing both the easy way and the hard way to do it.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I use &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt; to produce digest-sized pages (5Â½Ã8Â½ inches) in PDF
documents from &lt;a class="reference external" href="https://en.wikipedia.org/wiki/ReStructuredText"&gt;ReStructuredText&lt;/a&gt;.  I have a &lt;span class="app"&gt;ms&lt;/span&gt; output template,
&lt;span class="file"&gt;digest2.ms&lt;/span&gt; in &lt;span class="file"&gt;~/pandoc/templates&lt;/span&gt; that sets the page
width and page height correctly.  Unfortunately, there is no way to
set the papersize properly in the template. &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#heirloomtroff" id="id1"&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Luckily, &lt;span class="app"&gt;pandoc&lt;/span&gt; has the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=&lt;/span&gt;&lt;/code&gt; option to pass
options to the PDF engine that &lt;span class="app"&gt;pandoc&lt;/span&gt; is using, in this case
&lt;span class="app"&gt;pdfroff&lt;/span&gt;.  In the case of &lt;span class="app"&gt;ms&lt;/span&gt; output the thing to do is
pass the argument &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#recursively" id="id2"&gt;2&lt;/a&gt;,
like below.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pdf-engine-opt.html"&gt;GNUmakefile.pandoc-digest-pdf-engine-opt&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pdf-engine-opt"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_5a65b95088cf441a969e67aec685c364-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.digest.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_5a65b95088cf441a969e67aec685c364-2"&gt;&lt;/a&gt;        pandoc -s -r rst -w ms --template&lt;span class="o"&gt;=&lt;/span&gt;digest2 &lt;span class="k"&gt;$(&lt;/span&gt;VARIABLES&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_5a65b95088cf441a969e67aec685c364-3"&gt;&lt;/a&gt;                --output&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt; --pdf-engine-opt&lt;span class="o"&gt;=&lt;/span&gt;-P-p8.5i,5.5i $&amp;lt;
&lt;/pre&gt;&lt;p&gt;Unfortunately when I originally had this need for digest pages I
hadn't realized that the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=&lt;/span&gt;&lt;/code&gt; option existed.&lt;/p&gt;
&lt;p&gt;So I used &lt;code class="docutils literal"&gt;pandoc &lt;span class="pre"&gt;--verbose&lt;/span&gt;&lt;/code&gt; and found the &lt;span class="app"&gt;pdfroff&lt;/span&gt; invocation
&lt;span class="app"&gt;pandoc&lt;/span&gt; uses, and made my &lt;span class="app"&gt;pandoc&lt;/span&gt; invocation output
&lt;span class="app"&gt;ms&lt;/span&gt; instead of PDF, then passed it through a &lt;span class="app"&gt;pdfroff&lt;/span&gt;
command with the added &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; argument.  Here's what I put
in my &lt;span class="file"&gt;GNUmakefile&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-save-ms.html"&gt;GNUmakefile.pandoc-digest-save-ms&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-save-ms"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_d5dd0856f39440da89e5b4d09932f3bc-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.digest.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_d5dd0856f39440da89e5b4d09932f3bc-2"&gt;&lt;/a&gt;        pandoc -s -r rst -w ms -s --template&lt;span class="o"&gt;=&lt;/span&gt;digest2 &lt;span class="k"&gt;$(&lt;/span&gt;VARIABLES&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_d5dd0856f39440da89e5b4d09932f3bc-3"&gt;&lt;/a&gt;               --output&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;.ms $&amp;lt;
&lt;a name="rest_code_d5dd0856f39440da89e5b4d09932f3bc-4"&gt;&lt;/a&gt;        pdfroff -ms -mpdfmark -e -t -k -KUTF-8 --no-toc-relocation &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_d5dd0856f39440da89e5b4d09932f3bc-5"&gt;&lt;/a&gt;                -P-p8.5i,5.5i &lt;span class="nv"&gt;$*&lt;/span&gt;.ms &amp;gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Or, if you don't care about having the &lt;span class="app"&gt;ms&lt;/span&gt; output for debugging,
you could do it as a pipeline:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pipeline.html"&gt;GNUmakefile.pandoc-digest-pipeline&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pipeline"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_f39314aab2a64179b2106446ce792930-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.digest.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_f39314aab2a64179b2106446ce792930-2"&gt;&lt;/a&gt;        pandoc -s -r rst -w ms -s --template&lt;span class="o"&gt;=&lt;/span&gt;digest2 &lt;span class="k"&gt;$(&lt;/span&gt;VARIABLES&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_f39314aab2a64179b2106446ce792930-3"&gt;&lt;/a&gt;               --output&lt;span class="o"&gt;=&lt;/span&gt;- $&amp;lt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_f39314aab2a64179b2106446ce792930-4"&gt;&lt;/a&gt;        pdfroff -ms -mpdfmark -e -t -k -KUTF-8 --no-toc-relocation &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_f39314aab2a64179b2106446ce792930-5"&gt;&lt;/a&gt;                -P-p8.5i,5.5i - &amp;gt;&lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;There are still some instances where this technique of having
&lt;span class="app"&gt;pandoc&lt;/span&gt; output the &lt;span class="app"&gt;ms&lt;/span&gt; source directly and pass it through
&lt;span class="app"&gt;pdfroff&lt;/span&gt; yourself.  For instance, if you have to do some
massaging of the &lt;span class="app"&gt;ms&lt;/span&gt; source, like changing &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;.RS/.RE&lt;/span&gt;&lt;/code&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;.QS/.QE&lt;/span&gt;&lt;/code&gt; to get around the problem with block quotes in &lt;span class="app"&gt;ms&lt;/span&gt;
output in the current &lt;span class="app"&gt;pandoc&lt;/span&gt; release, discussed &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2020/03/11/pandoc-discuss-post-can-the-rsre-macros-in-ms-output-be-replaced-with-qsqe/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="heirloomtroff"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#id1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Heirloom Troff (originally at &lt;a class="reference external" href="http://heirloom.sourceforge.net/doctools.html"&gt;H1&lt;/a&gt;, but now &lt;em&gt;I
think&lt;/em&gt; more up to date at &lt;a class="reference external" href="http://n-t-roff.github.io/heirloom/doctools.html"&gt;H2&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/n-t-roff/heirloom-doctools"&gt;H3&lt;/a&gt;) has the &lt;code class="docutils literal"&gt;.mediasize&lt;/code&gt; and
&lt;code class="docutils literal"&gt;.papersize&lt;/code&gt; commands for that.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="recursively"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#id2"&gt;2&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Amusingly, &lt;span class="app"&gt;pandoc&lt;/span&gt; passes the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; argument to &lt;span class="app"&gt;pdfroff&lt;/span&gt;,
which passes the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; part to &lt;span class="app"&gt;groff&lt;/span&gt;, which
passes the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; part to the (final) post processor â I'm
not sure if &lt;em&gt;that&lt;/em&gt; is &lt;span class="app"&gt;grops&lt;/span&gt; or &lt;span class="app"&gt;gropdf&lt;/span&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;</description><category>computer</category><category>groff</category><category>make</category><category>ms macros</category><category>pandoc</category><category>pdfroff</category><category>text processing</category><guid>https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/</guid><pubDate>Fri, 13 Mar 2020 18:01:10 GMT</pubDate></item><item><title>pandoc-discuss post: Can the .RS/.RE macros in ms output be replaced with .QS/.QE?</title><link>https://tkurtbond.github.io/posts/2020/03/11/pandoc-discuss-post-can-the-rsre-macros-in-ms-output-be-replaced-with-qsqe/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;On March 9, 2020 I made a &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/pandoc-discuss/zulmB6uujgc"&gt;post&lt;/a&gt; on the pandoc-discuss mailing list
that explains some changes to pandoc to better handle block quotes in
ms output, and a workaround for it until the version with changes
comes out, but I forgot to mention it here.&lt;/p&gt;
&lt;p&gt;In short, use a pipeline like this:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.change-RS-RE-to-QS-QE.html"&gt;GNUmakefile.change-RS-RE-to-QS-QE&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.change-RS-RE-to-QS-QE"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_91b358cd08b940bf91a0055197241376-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.qs.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_91b358cd08b940bf91a0055197241376-2"&gt;&lt;/a&gt;        pandoc --verbose -r rst -w ms &lt;span class="k"&gt;$(&lt;/span&gt;PANDOCOPTS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_91b358cd08b940bf91a0055197241376-3"&gt;&lt;/a&gt;                --output&lt;span class="o"&gt;=&lt;/span&gt;- $&amp;lt; &lt;span class="p"&gt;|&lt;/span&gt; gsed -e &lt;span class="s1"&gt;'s/^\.RS$$/.QS/'&lt;/span&gt; -e &lt;span class="s1"&gt;'s/^\.RE$$/.QE/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_91b358cd08b940bf91a0055197241376-4"&gt;&lt;/a&gt;        pdfroff -ms -mpdfmark -e -t -k -KUTF-8 -i --no-toc-relocation &amp;gt;&lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>.QS/.QE</category><category>.RS/.RE</category><category>block quotes</category><category>groff</category><category>ms macros</category><category>pandoc</category><guid>https://tkurtbond.github.io/posts/2020/03/11/pandoc-discuss-post-can-the-rsre-macros-in-ms-output-be-replaced-with-qsqe/</guid><pubDate>Thu, 12 Mar 2020 00:35:47 GMT</pubDate></item><item><title>Foreign File Systems on macOS: Fail!</title><link>https://tkurtbond.github.io/posts/2020/02/24/foreign-file-systems-on-macos-fail/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Back sometime in March 2018 I installed &lt;a class="reference external" href="https://www.tuxera.com/"&gt;Tuxera&lt;/a&gt; &lt;a class="reference external" href="https://www.tuxera.com/products/tuxera-ntfs-for-mac/"&gt;NTFS for Mac&lt;/a&gt;.  It was
the first NTFS for Mac that I found.  I used it casually for a while
and it seemed ok.&lt;/p&gt;
&lt;p&gt;Sometime later, probably in October 2019, I decided I needed to move
110 GB of files off my Macbook Pro laptop's internal drive and onto a
external drive.  I also wanted to access this drive from Linux, and
thought I'd just use a NTFS-formatted drive so it would be readable
there.&lt;/p&gt;
&lt;p&gt;I copied the files over using rsync and there seemed to be no
problems, until I (in a fit of paranoia) ran the Unix cmp command on
all the files on the original disk and the matching files on the
NTFS-formatted drive.  There were lots of differences. Uh oh.&lt;/p&gt;
&lt;p&gt;I didn't see anything on the Internet complaining about this.&lt;/p&gt;
&lt;p&gt;So, sometime in October 2019 in I installed &lt;a class="reference external" href="https://www.paragon-drivers.com/"&gt;Paragon Software&lt;/a&gt;
&lt;a class="reference external" href="https://www.paragon-drivers.com/en/extfsmac/"&gt;extFS for Mac&lt;/a&gt;. (I see now that they have a &lt;a class="reference external" href="https://www.paragon-drivers.com/en/ntfsmac/"&gt;NTFS for Mac&lt;/a&gt;; I
haven't tried it.)&lt;/p&gt;
&lt;p&gt;I wanted to try the same thing and see if it worked more reliably with
extFS.  I originally wrote short shell scripts for this, for
consistency, so I could just change the volume name and run them
again.  Again there were lots of differences.  Uh oh.&lt;/p&gt;
&lt;p&gt;Again, I didn't see anything on the Internet complaining about this.&lt;/p&gt;
&lt;p&gt;All I was doing was running &lt;code class="docutils literal"&gt;rsync &lt;span class="pre"&gt;-avz&lt;/span&gt;&lt;/code&gt; with the appropriate
directories; it should have worked.&lt;/p&gt;
&lt;p&gt;I formatted the drive to Mac OS Extended (Journaled) and recopied the
files, and this time they all compared ok.&lt;/p&gt;
&lt;p&gt;I decided to just use &lt;a class="reference external" href="https://www.cis.upenn.edu/~bcpierce/unison/"&gt;Unison&lt;/a&gt; to sync the files to a couple of my
computers for backup and local use instead of connecting the external
drive to each computer in turn.  This is working ok for me.&lt;/p&gt;
&lt;p&gt;Maybe this was user error on my part, but it happened consistently
with both of these file systems.&lt;/p&gt;&lt;/div&gt;</description><category>extfs</category><category>macos</category><category>ntfs</category><category>paragon</category><category>tuxera</category><guid>https://tkurtbond.github.io/posts/2020/02/24/foreign-file-systems-on-macos-fail/</guid><pubDate>Mon, 24 Feb 2020 22:40:34 GMT</pubDate></item><item><title>Failing at Ada Again</title><link>https://tkurtbond.github.io/posts/2019/11/10/failing-at-ada-again/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Back on May 20th, 2019 I ordered a copy of &lt;a class="reference external" href="https://www.amazon.com/gp/product/110742481X/"&gt;Programming in Ada&lt;/a&gt; by
John Barnes and spent some time reading it and working with Ada.  I
get interested again in Ada &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/07/24/2003-07-24-ada-cohen/"&gt;periodically&lt;/a&gt;.  In theory, I ought to like
programming in Ada â it's one of the last remaining widely used members
of the Pascal language family, which I like.  There is a distribution
of the &lt;a class="reference external" href="https://www.adacore.com/download"&gt;GNAT Community Edition&lt;/a&gt; for macOS which bundles the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GNAT"&gt;GNAT&lt;/a&gt; Ada
compiler and some useful libraries.  But I could never get
comfortable.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;GNAT Community Edition for macOS doesn't include GtkAda, so I
couldn't easily write GUI programs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Getting programming libraries was back to the old download and
install it from scratch yourself method.  I find it much easier to
use systems like Chicken Scheme's &lt;a class="reference external" href="http://wiki.call-cc.org/chicken-projects/egg-index-5.html"&gt;Eggs Unlimited&lt;/a&gt; to find and
install software, or &lt;a class="reference external" href="https://ocaml.org/"&gt;OCaml&lt;/a&gt;'s &lt;a class="reference external" href="https://opam.ocaml.org/"&gt;opam&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://brew.sh"&gt;Brew&lt;/a&gt;, a package manager for macOS, doesn't include GNAT and
GtkAda. The case is better in &lt;a class="reference external" href="https://www.macports.org/"&gt;MacPorts&lt;/a&gt; and much better on Fedora,
but not good on Ubuntu.  I think there are are fewer packaged Ada
libraries across the open source Unixes in general.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lack of a garbage collector is annoying.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The type system is strict and not very flexible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And especially irritating to me, I tried using  the Ada mode on GNU &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;Elpa&lt;/a&gt;
and it didn't indent Ada code properly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think in my current programming environment using Ada is still a
difficult task.&lt;/p&gt;&lt;/div&gt;</description><category>ada</category><guid>https://tkurtbond.github.io/posts/2019/11/10/failing-at-ada-again/</guid><pubDate>Sun, 10 Nov 2019 21:24:35 GMT</pubDate></item><item><title>Converting my emacs-lisp repository to GIT and putting it online</title><link>https://tkurtbond.github.io/posts/2019/11/10/converting-my-emacs-lisp-repository-to-git-and-putting-it-online/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;I've had a &lt;a class="reference external" href="https://www.mercurial-scm.org/"&gt;mercurial&lt;/a&gt; repository for my Emacs Lisp initialization
files since Thursday, Oct 29, 2009, but had actually used it very
little.  Recently I had occasion to untangle my initialization files
somewhat â they had over 12,000 lines of code when I started, and I've
reduced that to 6,137 lines and switched over to using &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;Elpa&lt;/a&gt; packages
for as much stuff as I can.&lt;/p&gt;
&lt;p&gt;I decided I'd put it in one of the online repositories, and since I'm
already using &lt;a class="reference external" href="https://github.com/tkurtbond"&gt;github.com&lt;/a&gt; for my blog I decided to put it &lt;a class="reference external" href="https://github.com/tkurtbond/emacs-lisp"&gt;there&lt;/a&gt;.
But that meant converting it to &lt;a class="reference external" href="https://git-scm.com/"&gt;GIT&lt;/a&gt;.  I used the directions &lt;a class="reference external" href="https://git-scm.com/book/en/v2/Git-and-Other-Systems-Migrating-to-Git#_mercurial"&gt;here&lt;/a&gt;
using &lt;a class="reference external" href="https://github.com/frej/fast-export"&gt;fast-export&lt;/a&gt; which seemed to work fine.&lt;/p&gt;&lt;/div&gt;</description><category>conversion</category><category>emacs lisp</category><category>git</category><category>mercurial</category><guid>https://tkurtbond.github.io/posts/2019/11/10/converting-my-emacs-lisp-repository-to-git-and-putting-it-online/</guid><pubDate>Sun, 10 Nov 2019 19:09:17 GMT</pubDate></item><item><title>Fixing more broken links in this blog</title><link>https://tkurtbond.github.io/posts/2019/11/10/fixing-more-broken-links-in-this-blog/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I did another round of searching for broken internal links on this
blog and fixing them.  It took several hours.  Along the way I
annotated some old blog posts with notes from the present and fixed
typos. I think the blog is in pretty good shape now, though.&lt;/p&gt;</description><category>blog</category><guid>https://tkurtbond.github.io/posts/2019/11/10/fixing-more-broken-links-in-this-blog/</guid><pubDate>Sun, 10 Nov 2019 10:55:15 GMT</pubDate></item><item><title>macOS Catalina doesn't have a FTP client!</title><link>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;Ack!  macOS Catalina doesn't have an FTP client!  Yes, I know it is
terribly insecure, but I only use it inside our firewall to access one
legacy computer system.  I was glad &lt;a class="reference external" href="https://brew.sh/"&gt;brew&lt;/a&gt; had &lt;a class="reference external" href="https://lftp.yar.ru/"&gt;LFTP&lt;/a&gt;, and I figured out
how to use active mode in &lt;code class="docutils literal"&gt;LFTP&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_1f7d4b2cf5a24e08bbee246f9147ebba-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; ftp:passive-mode off
&lt;/pre&gt;&lt;p&gt;because that machine's FTP server only works with active mode.&lt;/p&gt;&lt;/div&gt;</description><category>catalina</category><category>ftp</category><category>macos</category><guid>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</guid><pubDate>Sun, 10 Nov 2019 03:00:04 GMT</pubDate></item><item><title>Playing with Hashlife</title><link>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;div&gt;&lt;p&gt;C.P. found &lt;a class="reference external" href="https://github.com/stylewarning"&gt;Robert Smith&lt;/a&gt;'s &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random/tree/master/hashlife"&gt;implementation&lt;/a&gt; of Bill Gosper's HASHLIFE
algorithm and wanted my help with running it.  I cloned the &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random"&gt;repo&lt;/a&gt; it
was in and ran &lt;code class="docutils literal"&gt;sbcl&lt;/code&gt; in the &lt;code class="docutils literal"&gt;hashlife&lt;/code&gt; directory.  Then I
entered:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a name="rest_code_744e11cd6e354e558ce00254f3a0aef3-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt; &lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt; &lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;That resulted in a &lt;code class="docutils literal"&gt;Component CHARMLIFE not found&lt;/code&gt; error in sbcl.  I
thought that was odd â it was right there in the current directory.  I
looked at &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;, and the only thing in it was
the quicklisp directory.  The ASDF &lt;a class="reference external" href="https://common-lisp.net/~mmommer/asdf-howto.shtml#sec11"&gt;howto&lt;/a&gt; showed an example of setting
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-2"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;;; Default directories, usually just the ``current directory''&lt;/span&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;*default-pathname-defaults*&lt;/span&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-5"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;;; Additional places where ASDF can find&lt;/span&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;;; system definition files&lt;/span&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-7"&gt;&lt;/a&gt;    &lt;span class="l l-Other"&gt;#p"/home/foo/lisp/systems/"&lt;/span&gt;
&lt;a name="rest_code_eebf4b94a54e4bd2ac96efbd1d4c62c2-8"&gt;&lt;/a&gt;    &lt;span class="l l-Other"&gt;#p"/usr/share/common-lisp/systems/"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Noticing that it had the symbol &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;*default-pathname-defaults*&lt;/span&gt;&lt;/code&gt; in the
new value, I guessed that it being missing from mine caused ASDF to
not find the system in the current directory.  So I added it and tried
again.  This time ASDF couldn't find &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;cl-charms&lt;/span&gt;&lt;/code&gt;.  I guessed and
used &lt;a class="reference external" href="https://www.quicklisp.org/"&gt;Quicklisp&lt;/a&gt; to load it.  That worked.  Then I looked at
&lt;code class="docutils literal"&gt;charmlife.lisp&lt;/code&gt; and looked at the &lt;code class="docutils literal"&gt;main&lt;/code&gt; function and figured out
how to run it and how to interact with the program when it was running.&lt;/p&gt;
&lt;p&gt;Here's what I had to do:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a name="rest_code_8b58a9b9d907496597415634a7fbbd83-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;
&lt;a name="rest_code_8b58a9b9d907496597415634a7fbbd83-2"&gt;&lt;/a&gt;      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons&lt;/span&gt; &lt;span class="ss"&gt;'*default-pathname-defaults*&lt;/span&gt;
&lt;a name="rest_code_8b58a9b9d907496597415634a7fbbd83-3"&gt;&lt;/a&gt;            &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_8b58a9b9d907496597415634a7fbbd83-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ql:quickload&lt;/span&gt; &lt;span class="s"&gt;"cl-charms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8b58a9b9d907496597415634a7fbbd83-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt; &lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt; &lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8b58a9b9d907496597415634a7fbbd83-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;charmlife:main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>common lisp</category><category>hashlife</category><category>life</category><guid>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</guid><pubDate>Fri, 08 Nov 2019 14:43:19 GMT</pubDate></item></channel></rss>