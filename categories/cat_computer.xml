<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about computer)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/cat_computer.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2024 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Fri, 22 Nov 2024 20:59:45 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Ada Quality and Style: Guidelines for Professional Programmers</title><link>https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;The &lt;cite&gt;Ada Quality and Style: Guidelines for Professional
Programmers&lt;/cite&gt; is available on the &lt;a class="reference external" href="http://archive.adaic.com/docs/style-guide/83style/html/"&gt;web&lt;/a&gt;, but I don't think that there is
a PDF copy anywhere easily found, so I'm making a copy available
&lt;a class="reference external" href="https://tkurtbond.github.io/83style/83style.pdf"&gt;here&lt;/a&gt;.  This is the style guide for Ada 83, by the way.  I got it from
the &lt;a class="reference external" href="http://archive.adaic.com/docs/style-guide/83style/"&gt;Ada Information Clearinghouse&lt;/a&gt;.  I downloaded the file
&lt;a class="reference external" href="http://archive.adaic.com/docs/style-guide/83style/style-ps.zip"&gt;style-ps.zip&lt;/a&gt;
into a temporary directory and then ran the shell script
&lt;a class="reference external" href="https://tkurtbond.github.io/83style/make-83style-pdf.sh"&gt;make-83style-pdf.sh&lt;/a&gt; to create the PDF file:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-1" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-1" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-2" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-2" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# First, unzip style-ps.zip.  Then, in another directory, unzip all six of&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-3" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-3" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# those zip files.  Then do the following:&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-4" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-4" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-4"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-x
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-5" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-5" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-5"&gt;&lt;/a&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;tmp&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-6" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-6" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tmp&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-7" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-7" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;../style-ps.zip&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-8" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-8" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;tmp&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-9" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-9" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tmp&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-10" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-10" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../*.zip&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-11" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-11" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.ps&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ps2pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;.ps&lt;span class="k"&gt;)&lt;/span&gt;.pdf&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-12" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-12" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;qpdf&lt;span class="w"&gt; &lt;/span&gt;--empty&lt;span class="w"&gt; &lt;/span&gt;-pages&lt;span class="w"&gt; &lt;/span&gt;covers.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;-3&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;covers_fixed.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;a id="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-13" name="rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-13" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_8acdea7fe8284c60a4bed6ee4e77dd7a-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;pdfunite&lt;span class="w"&gt; &lt;/span&gt;covers_fixed.pdf&lt;span class="w"&gt; &lt;/span&gt;preface.pdf&lt;span class="w"&gt; &lt;/span&gt;ack.pdf&lt;span class="w"&gt; &lt;/span&gt;toc.pdf&lt;span class="w"&gt; &lt;/span&gt;intro.pdf&lt;span class="w"&gt; &lt;/span&gt;source_c.pdf&lt;span class="w"&gt; &lt;/span&gt;readabil.pdf&lt;span class="w"&gt; &lt;/span&gt;prog_str.pdf&lt;span class="w"&gt; &lt;/span&gt;prog_pra.pdf&lt;span class="w"&gt; &lt;/span&gt;concurr.pdf&lt;span class="w"&gt; &lt;/span&gt;portabil.pdf&lt;span class="w"&gt; &lt;/span&gt;reuse.pdf&lt;span class="w"&gt; &lt;/span&gt;performa.pdf&lt;span class="w"&gt; &lt;/span&gt;complete.pdf&lt;span class="w"&gt; &lt;/span&gt;appendix.pdf&lt;span class="w"&gt; &lt;/span&gt;ref.pdf&lt;span class="w"&gt; &lt;/span&gt;bib_0188.pdf&lt;span class="w"&gt; &lt;/span&gt;index.pdf&lt;span class="w"&gt; &lt;/span&gt;83style.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I read through the PDF and made a &lt;a class="reference external" href="https://tkurtbond.github.io/83style/83style.bookmarks"&gt;bookmarks file&lt;/a&gt; for use with
&lt;a class="reference external" href="https://sourceforge.net/projects/jpdfbookmarks/"&gt;jpdfbookmarks&lt;/a&gt; (I use one of the releases from this github &lt;a class="reference external" href="https://github.com/life888888/JPdfBookmarks"&gt;repo&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;Ada Quality and Style/1
        Cover 1/1
        Cover 2/2
        Preface/4
        Authors and Acknowledgements/6
        Contents/8
        Chapter 1: Introduction/10
                1.1 How to use this book/11
                1.2 To the new Ada programmer/11
                1.3 To the experienced Ada programmer/12
                1.4 To the software project manager/12
                1.5 to contracting agencies and standards organizations/13
        Chapter 2: Source Code Presentation/14
                2.1 Code formatting/14
                        2.1.1 Horizontal spacing/14
                        2.1.2 Indentation/15
                        2.1.3 Alignment of operators/18
                        2.1.4 Alignment of declarations/19
                        2.1.5 More on alignmeent/20
                        2.1.6 Blank lines/21
                        2.1.7 Pagination/22
                        2.1.8 Number of statements per line/23
                        2.1.9 Source code line length/24
                2.2 Summary/24
        Chapter 3: Readability/26
                3.1 Spelling/26
                        3.1.1 Use of underscores/26
                        3.1.2 Numbers/26
                        3.1.3 Capitalization/27
                        3.1.4 Abbreviations/28
                3.2 Naming conventions/29
                        3.2.1 Names/29
                        3.2.2 Type names/29
                        3.2.3 Object names/30
                        3.2.4 Program unit names/31
                        3.2.5 Constants and named numbers/32
                3.3 Comments/33
                        3.3.1 General comments/34
                        3.3.2 File headers/35
                        3.3.3 Program unit specification header/35
                        3.3.4 Program unit body header/38
                        3.3.5 Data comments/39
                        3.3.6 Statement comments/41
                        3.3.7 Marker comments/43
                3.4 Using types/44
                        3.4.1 Declaring types/44
                        3.4.2 Enumeration types/45
                3.5 Summary/46
        Chapter 4: Program Structure/50
                4.1 High level structure/50
                        4.1.1 Separate compilation capabilities/50
                        4.1.2 Subprograms/51
                        4.1.3 Functions/52
                        4.1.4 Packages/53
                        4.1.5 Cohesion/53
                        4.1.6 Data coupling/54
                        4.1.7 Tasks/54
                4.2 Visibility/55
                        4.2.1 Minimization of interfaces/55
                        4.2.2 Nested packages/56
                        4.2.3 Restricting visibility/56
                        4.2.4 Hiding tasks/57
                4.3 Exceptions/59
                        4.3.1 Using exceptions to help define an abstraction/59
                4.4 Summary/61
        Chapter 5: Programming Practices/64
                5.1 Optional parts of the syntax/64
                        5.1.1 Loop names/64
                        5.1.2 Block names/65
                        5.1.3 Exit statements/66
                        5.1.4 Naming end statemnts/66
                5.2 Parameter lists/67
                        5.2.1 Formal parameters/67
                        5.2.2 Named association/67
                        5.2.33 Default parameters/68
                        5.2.4 Mode indication/69
                5.3 Types/69
                        5.3.1 Derived types and subtypes/69
                        5.3.2 Anonymous types/71
                        5.3.3 Private types/71
                5.4 Data structures/72
                        5.4.1 Heeterogeneous data/72
                        5.4.2 Nested records/73
                        5.4.3 Dynamic data/74
                5.5 Expressions/75
                        5.5.1 Range values/75
                        5.5.2 Array attributes/76
                        5.5.3 Parenthetical expressions/76
                        5.5.4 Positive forms of logic/77
                        5.5.5 Short circuit forms of the logical operators/77
                        5.5.6 Accuracy of operations with real operands/78
                5.6 Statements/78
                        5.6.1 Nesting/78
                        5.6.2 Slices/80
                        5.6.3 Case statements/80
                        5.6.4 Loops/81
                        5.6.5 Exit statements/82
                        5.6.6 Recursion and iteration bounds/83
                        5.6.8 Return statements/84
                        5.6.9 Blocks/85
                        5.6.10 Aggregates/86
                5.7 Visibility/86
                        5.7.1 The use clause/87
                        5.7.2 The renames clause/88
                        5.7.3 Overloaded subprograms/88
                        5.7.4 Overloaded operators/89
                        5.7.5 Overloading the equality operator/89
                5.8 Using exceptions/89
                        5.8.1 Handling versus avoiding exceptions/90
                        5.8.2 Handlers for others/90
                        5.8.3 Propagation/91
                        5.8.4 Localizing the causes of an exception/91
                5.9 Erroneous Execution/92
                        5.9.1 Unchecked conversion/92
                        5.9.2 Unchecked deallocation/93
                        5.9.3 Dependeence on parameter passing mechanism/93
                        5.9.4 Multiple address clauses/94
                        5.9.5 Suppression of exception check/94
                        5.9.6 Initialization/94
                        5.9.7 Direct_IO and Sequential_IO/95
                        5.9.8 Incorrect order dependencies/96
                5.10 Summary/96
        Chapter 6: Concurrency/100
                6.1 Tasking/100
                        6.1.1 Tasks/100
                        6.1.2 Anonymous task types/101
                        6.1.3 Dynamic tasks/102
                        6.1.4 Prioritis/103
                        6.1.5 Delay statements/104
                6.2 Commmunication/105
                        6.2.1 Effecient task communications/105
                        6.2.2 Defensive task communication/106
                        6.2.3 Attributes 'Count, 'Callable, and 'Terminated/108
                        6.2.4 Shared variables/109
                        6.2.5 Tenative rendezvous constructs/111
                        6.2.6 Commmunication complexity/112
                6.3 Termination/113
                        6.1.1 Avoiding termination/113
                        6.3.2 Normal termination/114
                        6.3.3 The abort statement/115
                        6.3.4 Abnormal termination/115
                6.4 Summary/116
        Chapter 7: Portability/118
                7.1 Fundamentals/119
                        7.1.1 Global assumptions/119
                        7.1.2 Actual limits/120
                        7.1.3 Comments/120
                        7.1.4 Main subprogram/121
                        7.1.5 Encapsulating implementation dependencies/121
                        7.1.6 Implementation-added features/122
                7.2 Numeric types and expressions/122
                        7.2.1 Predefined numeric types/122
                        7.2.2 Ada model/123
                        7.2.3 Analysis/123
                        7.2.4 Accuracy Constraints/124
                        7.2.5 Comments/124
                        7.2.6 Precision of constants/124
                        7.2.7 Subexpression evaluation/124
                        7.2.8 Relational tests/124
                7.3 Storage control/125
                        7.3.1 Representation clause/125
                7.4 Tasking/126
                        7.4.1 Task activation order/126
                        7.4.2 Delay statements/126
                        7.4.3 Package Calendar, type Duration, and System.Tick/126
                        7.4.4 Select statement evaluation ordr/126
                        7.4.5 Task scheduling algorithm/127
                        7.4.6 Abort/127
                        7.4.7 Shared variables and pragma shared/127
                7.5 Exceptions/127
                        7.5.1 Predefined exceptions/127
                        7.5.2 Constraint_Error and Numeric_Error/128
                        7.5.3 Implementation-defined exceptions/128
                7.6 Representationi clauses and implementation dependent features/128
                        7.6.1 Representation clauses/129
                        7.6.2 Package System/129
                        7.6.3 Machine code inserts/129
                        7.6.4 Interfacing Foreign Languages/130
                        7.6.5 Implementation-defined pragmas and attributes/130
                        7.6.6 Unchecked deallocation/130
                        7.6.7 Unchecked conversion/131
                7.7 Input/output/131
                        7.7.1 Name and Form parameters/132
                        7.7.2 File closing/132
                        7.7.3 I/O on access types/132
                        7.7.4 Package Low_Level_IO/132
                7.8 Summmary/133
        Chapter 8: Reusability/136
                8.1 Understanding and clarity/137
                        8.1.1 Application-independent naming/137
                        8.1.2 Abbreviations/138
                        8.1.3 Generic formal parameters/139
                8.2 Robustness/139
                        8.2.1 Named numbers/139
                        8.2.2 Unconstrained arrays/140
                        8.2.3 Assumptions/140
                        8.2.4 Subtypes in generic specifications/141
                        8.2.5 Overloading in generic units/143
                        8.2.6 Hidden tasks/143
                        8.2.7 Exceptions/143
                8.3 Adaptability/145
                        8.3.1 Complete functionality/145
                        8.3.2 Generic units/146
                        8.3.3 Using generic units to encapsulate algorithms/146
                        8.3.4 Using generic units for abstract data types/148
                        8.3.5 Iterators/151
                        8.3.6 Private and limited private types/154
                8.4 Independence/156
                        8.4.1 Using generic parameters to reduce coupling/156
                        8.4.2 Coupling due to pragmas/157
                        8.4.3 Part families/158
                        8.4.4 Conditional compilation/158
                        8.4.5 Table-driven programming/159
                8.5 Summary/160
        Chapter 9: Performance/162
                9.1 Improving exception speed/162
                        9.1.1 Pragma inline/162
                        9.1.2 Blocks/163
                        9.1.3 Arrays/163
                        9.1.4 Mod and rem operators/164
                        9.1.5 Constraint checking/164
                9.2 Summmary/165
        Chapter 10: Complete Examples/166
                10.1 Menu-driven user interface/166
                10.2 Line-oriented portablee dining philosophers example/174
                10.3 Window-oriented portable dining philosophers example/179
        Appendix A: Map from Ada Language Referencee Manual to Guidelines/188
        References/194
        Bibliography/198
        Index/202
&lt;/pre&gt;
&lt;p&gt;Then I ran another shell script, &lt;a class="reference external" href="https://tkurtbond.github.io/83style/build-bookmarks.sh"&gt;build-bookmarks.sh&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_7e526fe316ea4fcbac639fec9b9d1a16-1" name="rest_code_7e526fe316ea4fcbac639fec9b9d1a16-1" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_7e526fe316ea4fcbac639fec9b9d1a16-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_7e526fe316ea4fcbac639fec9b9d1a16-2" name="rest_code_7e526fe316ea4fcbac639fec9b9d1a16-2" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_7e526fe316ea4fcbac639fec9b9d1a16-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_7e526fe316ea4fcbac639fec9b9d1a16-3" name="rest_code_7e526fe316ea4fcbac639fec9b9d1a16-3" href="https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/#rest_code_7e526fe316ea4fcbac639fec9b9d1a16-3"&gt;&lt;/a&gt;jpdfbookmarks&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;tmp/tmp/83style.pdf&lt;span class="w"&gt; &lt;/span&gt;--apply&lt;span class="w"&gt; &lt;/span&gt;83style.bookmarks&lt;span class="w"&gt; &lt;/span&gt;--out&lt;span class="w"&gt; &lt;/span&gt;83style.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is a PDF of the style guide for &lt;a class="reference external" href="https://www.adaic.org/resources/add_content/docs/95style/95style.pdf"&gt;Ada 95&lt;/a&gt; online, but the links to the other formats listed on the &lt;a class="reference external" href="https://www.adaic.org/ada-resources/standards/ada-95-documents/"&gt;Ada 95 Documents&lt;/a&gt; page have bit rotted, alas.&lt;/p&gt;</description><category>ada</category><category>ada 83</category><category>style guide</category><guid>https://tkurtbond.github.io/posts/2024/11/22/ada-quality-and-style-guidelines-for-professional-programmers/</guid><pubDate>Fri, 22 Nov 2024 16:49:59 GMT</pubDate></item><item><title>SWTOOLS VOS shells need GRPNAM as well as CMEXEC and DETACH for subshells</title><link>https://tkurtbond.github.io/posts/2024/07/19/swtools-vos-shells-need-grpnam-as-well-as-cmexec-and-detach-for-subshells/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;The SWTOOLS VOS provides three shells, &lt;span class="command"&gt;sh&lt;/span&gt;, &lt;span class="command"&gt;hsh&lt;/span&gt;
(which adds a history mechanism), and &lt;span class="command"&gt;esh&lt;/span&gt; (which adds
&lt;span class="command"&gt;ed&lt;/span&gt;-style editing of the history).  The release notes state
that the shells need the privileges &lt;code class="docutils literal"&gt;DETACH&lt;/code&gt; and &lt;code class="docutils literal"&gt;CMEXEC&lt;/code&gt;, but
under VMS 5.5-2 it turns out that they need the &lt;code class="docutils literal"&gt;GRPNAM&lt;/code&gt; privilege
as well.&lt;/p&gt;</description><category>cmexec</category><category>detach</category><category>esh</category><category>fortran</category><category>grpnam</category><category>hsh</category><category>sh</category><category>swtools ratfor</category><category>swtools vos</category><category>vax/vms</category><guid>https://tkurtbond.github.io/posts/2024/07/19/swtools-vos-shells-need-grpnam-as-well-as-cmexec-and-detach-for-subshells/</guid><pubDate>Fri, 19 Jul 2024 16:03:19 GMT</pubDate></item><item><title>My first program using SWTOOLS VOS</title><link>https://tkurtbond.github.io/posts/2024/07/18/my-first-program-using-swtools-vos/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Well, it's my first program using SWTOOLS VOS &lt;strong&gt;this time around&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, I finished by first program using SWTOOLS.  It is a simple
directory lister, called l, that interprets all its arguments as as
file specifications to search for using normal RMS wildcards, or used
&lt;span class="file"&gt;*.*&lt;/span&gt; if not arguments are specified.  It only returns the files with
the highest version number, does not include the device, directory, or
version number in the output, and converts the filenames to lower
case.  It should only be used to list files in the current directory.
I needed it because I do things like&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code shell"&gt;&lt;a id="rest_code_0212f92d774d4b39935bf22416f3d83f-1" name="rest_code_0212f92d774d4b39935bf22416f3d83f-1" href="https://tkurtbond.github.io/posts/2024/07/18/my-first-program-using-swtools-vos/#rest_code_0212f92d774d4b39935bf22416f3d83f-1"&gt;&lt;/a&gt;l&lt;span class="w"&gt; &lt;/span&gt;*.sdcl&lt;span class="w"&gt; &lt;/span&gt;*.for&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sedit&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'s/{?+}$/ar uv src.ar $1'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and I don't want any version numbers to end up in the names of the
archive members, and so on.&lt;/p&gt;
&lt;p&gt;Rafor &lt;em&gt;is&lt;/em&gt; much better than Fortran 77.  And Fortran has even more
footguns than C when it comes to using separately compiled functions
and subroutines, with no notices that I'd passed things with the wrong
type until I actually ran the program and got a register dump because
of an access violation.&lt;/p&gt;
&lt;p&gt;I was not able to include things from
&lt;span class="file"&gt;SYS$LIBRARY:FORSYSDEF.TLB&lt;/span&gt; using the Fortran &lt;code class="docutils literal"&gt;INCLUDE&lt;/code&gt;
statement in ratfor, since it has its own include keyword , so I
separated that part of the program into its own Fortran source file.
Because that file wasn't run through ratfor I couldn't use the
standard macro definitions, like STDERR, so when I wanted to output
the filesnames, I just wrote a ratfor subroutine that would print them
and called that from the Fortran subroutine.  A little clunky, but it
worked.&lt;/p&gt;
&lt;p&gt;Annoying, the &lt;span class="command"&gt;fc&lt;/span&gt; command (which compiles &lt;span class="file"&gt;*.f&lt;/span&gt; files to
objects) doesn't work when run under &lt;span class="command"&gt;mmk&lt;/span&gt;, so I had to write
a command procedure &lt;span class="file"&gt;dommk&lt;/span&gt; that does &lt;code class="docutils literal"&gt;mmk/noact/out=tmp.com&lt;/code&gt;
and &lt;code class="docutils literal"&gt;@tmp.com&lt;/code&gt; to do the build.  (I think this was somehow due to
having multiple levels of subprocesses: &lt;span class="command"&gt;mmk&lt;/span&gt;'s and
&lt;span class="command"&gt;rc&lt;/span&gt;'s.)&lt;/p&gt;
&lt;p&gt;Anyway, the program ended up 48 lines of ratfor in three files and 84
lines of Fortran.  The C program I started with was 170 lines (in one
file), but doesn't work with the SWTOOLS shell's notions of I/O
redirection.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2024-07-19 12:44:44 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</description><category>fortran</category><category>swtools ratfor</category><category>swtools vos</category><category>vax/vms</category><guid>https://tkurtbond.github.io/posts/2024/07/18/my-first-program-using-swtools-vos/</guid><pubDate>Thu, 18 Jul 2024 20:10:56 GMT</pubDate></item><item><title>Fixing a 41 year old bug in the SWTOOLS VOS SEDIT commmand</title><link>https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Today I fixed a 41 year old bug in the SWTOOLS VOS &lt;span class="command"&gt;sedit&lt;/span&gt; commmand!&lt;/p&gt;
&lt;p&gt;At work part of my job is to maintain an emulated VAX/VMS 5.5-2 system
for one of our clients.  I have been using the SWTOOLS Virtual
Operating System &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2024/07/03/software-tools/"&gt;recently&lt;/a&gt; (Unix style
I/O redirection! And pipes!), and whenever I tried to use the sedit
command it would die with an integer overflow:&lt;/p&gt;
&lt;pre class="literal-block"&gt;%SYSTEM-F-INTOVF, arithmetic trap, integer overflow at PC=0002D6C9, PSL=03C00022

Improperly handled condition, image exit forced.

      Signal arguments              Stack contents

      Number = 00000003                00000000
      Name   = 0000047C                08000020
               0002D6C9                000017C4
               03C00022                7FEF9784
                                       0002D479
                                       00001DC0
                                       00000000
                                       08000020
                                       7FEF97B4
                                       7FEF979C

      Register dump

      R0 = 0000000E  R1 = 0002BAF4  R2 = 0000000F  R3 = 7FF6A489
      R4 = 7FFE5E0C  R5 = 7FFE5EBC  R6 = 00000000  R7 = 00000001
      R8 = 7FFECA4C  R9 = 7FFECC54  R10= 7FFED7D4  R11= 00001E94
      AP = 7FEF9738  FP = 7FEF96F8  SP = 7FEF976C  PC = 0002D6C9
      PSL= 03C00022&lt;/pre&gt;
&lt;p&gt;Drats, drats, drats.&lt;/p&gt;
&lt;p&gt;I use &lt;span class="command"&gt;sed&lt;/span&gt; frequently on Unix, and it would be nice to have
the SWTOOLS equivalent on VAX/VMS.  What could I do but set the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Wayback_Machine_(Peabody%27s_Improbable_History)"&gt;Wayback Machine&lt;/a&gt;
for 1986 and dive in!&lt;/p&gt;
&lt;p&gt;Those following along may want to read my post about how the &lt;a class="reference external" href="slug://how-the-lbl-software-tools-system-organized-its-source-files"&gt;Software Tools VOS organized its source files&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;The SWTOOLS VOS was written in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ratfor"&gt;Ratfor&lt;/a&gt;, which added structured
control structures and other niceties such as macros, include files,
and string constants to pre-1977 Fortran.  I suspect that even as late
as 1986, when the version of the SWTOOLS VOS was released, lots of
installations were on machines that only &lt;strong&gt;*had*&lt;/strong&gt; pre-1977 Fortran
compilers.&lt;/p&gt;
&lt;p&gt;Here's an example of &lt;span class="app"&gt;Ratfor&lt;/span&gt; source, from &lt;span class="file"&gt;sedit.r&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-1" name="rest_code_b401bc577706466c96a9d86bd14a3a24-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# copyf - copy file name to opened file fdo&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-2" name="rest_code_b401bc577706466c96a9d86bd14a3a24-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;copyf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-3" name="rest_code_b401bc577706466c96a9d86bd14a3a24-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-3"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ARB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-4" name="rest_code_b401bc577706466c96a9d86bd14a3a24-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-4"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;fdo&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-5" name="rest_code_b401bc577706466c96a9d86bd14a3a24-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-5"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-6" name="rest_code_b401bc577706466c96a9d86bd14a3a24-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="k"&gt;open&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-7" name="rest_code_b401bc577706466c96a9d86bd14a3a24-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-8" name="rest_code_b401bc577706466c96a9d86bd14a3a24-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-8"&gt;&lt;/a&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;getch&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-9" name="rest_code_b401bc577706466c96a9d86bd14a3a24-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-10" name="rest_code_b401bc577706466c96a9d86bd14a3a24-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c"&gt;!=EOS; i=i+1)               #get name into string&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-11" name="rest_code_b401bc577706466c96a9d86bd14a3a24-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-12" name="rest_code_b401bc577706466c96a9d86bd14a3a24-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-13" name="rest_code_b401bc577706466c96a9d86bd14a3a24-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;READ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-14" name="rest_code_b401bc577706466c96a9d86bd14a3a24-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ERR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-15" name="rest_code_b401bc577706466c96a9d86bd14a3a24-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;call &lt;/span&gt;&lt;span class="n"&gt;cant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namstr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-16" name="rest_code_b401bc577706466c96a9d86bd14a3a24-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-16"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;!= EOF)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-17" name="rest_code_b401bc577706466c96a9d86bd14a3a24-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;call &lt;/span&gt;&lt;span class="n"&gt;putch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-18" name="rest_code_b401bc577706466c96a9d86bd14a3a24-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-18"&gt;&lt;/a&gt;&lt;span class="k"&gt;call close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-19" name="rest_code_b401bc577706466c96a9d86bd14a3a24-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-19"&gt;&lt;/a&gt;&lt;span class="k"&gt;return&lt;/span&gt;
&lt;a id="rest_code_b401bc577706466c96a9d86bd14a3a24-20" name="rest_code_b401bc577706466c96a9d86bd14a3a24-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b401bc577706466c96a9d86bd14a3a24-20"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can tell it was inspired by Unix.&lt;/p&gt;
&lt;p&gt;Here's the corresponding generated Fortran&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-1" name="rest_code_b4b6bb99660649c2908323da632aa784-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-1"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;SUBROUTINE &lt;/span&gt;&lt;span class="n"&gt;COPYF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FDO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-2" name="rest_code_b4b6bb99660649c2908323da632aa784-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-3" name="rest_code_b4b6bb99660649c2908323da632aa784-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="n"&gt;FDO&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-4" name="rest_code_b4b6bb99660649c2908323da632aa784-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-5" name="rest_code_b4b6bb99660649c2908323da632aa784-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;INTEGER &lt;/span&gt;&lt;span class="k"&gt;OPEN&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-6" name="rest_code_b4b6bb99660649c2908323da632aa784-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;LOGICAL&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-7" name="rest_code_b4b6bb99660649c2908323da632aa784-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;LOGICAL&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GETCH&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-8" name="rest_code_b4b6bb99660649c2908323da632aa784-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-9" name="rest_code_b4b6bb99660649c2908323da632aa784-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-9"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23190&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="nb"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23192&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-10" name="rest_code_b4b6bb99660649c2908323da632aa784-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-11" name="rest_code_b4b6bb99660649c2908323da632aa784-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-11"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23191&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-12" name="rest_code_b4b6bb99660649c2908323da632aa784-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23190&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-13" name="rest_code_b4b6bb99660649c2908323da632aa784-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-13"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23192&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CONTINUE&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-14" name="rest_code_b4b6bb99660649c2908323da632aa784-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;      &lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-15" name="rest_code_b4b6bb99660649c2908323da632aa784-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-16" name="rest_code_b4b6bb99660649c2908323da632aa784-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="nb"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EQ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23193&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-17" name="rest_code_b4b6bb99660649c2908323da632aa784-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;CALL &lt;/span&gt;&lt;span class="n"&gt;CANT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAMSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-18" name="rest_code_b4b6bb99660649c2908323da632aa784-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-18"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23193&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CONTINUE&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-19" name="rest_code_b4b6bb99660649c2908323da632aa784-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-19"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23195&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="nb"&gt;NOT&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;GETCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23196&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-20" name="rest_code_b4b6bb99660649c2908323da632aa784-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;CALL &lt;/span&gt;&lt;span class="n"&gt;PUTCH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FDO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-21" name="rest_code_b4b6bb99660649c2908323da632aa784-21" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;GOTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23195&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-22" name="rest_code_b4b6bb99660649c2908323da632aa784-22" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-22"&gt;&lt;/a&gt;&lt;span class="mi"&gt;23196&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;CONTINUE&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-23" name="rest_code_b4b6bb99660649c2908323da632aa784-23" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-23"&gt;&lt;/a&gt;&lt;span class="k"&gt;      CALL CLOSE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FDI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-24" name="rest_code_b4b6bb99660649c2908323da632aa784-24" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;RETURN&lt;/span&gt;
&lt;a id="rest_code_b4b6bb99660649c2908323da632aa784-25" name="rest_code_b4b6bb99660649c2908323da632aa784-25" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_b4b6bb99660649c2908323da632aa784-25"&gt;&lt;/a&gt;&lt;span class="k"&gt;      END&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the &lt;code class="docutils literal"&gt;character&lt;/code&gt; variables got changed to &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;?
That turns out to be 1 byte variable...&lt;/p&gt;
&lt;p&gt;So, to start, I needed to run sedit in the debugger.  That's easy
enough:&lt;/p&gt;
&lt;pre class="literal-block"&gt;% cd ~tmp
% mkdir sedit
% cd sedit
/dua1/software/swtools/tmp/sedit/
% get -r1.5 ~src/sedit.tcs &amp;gt;sedit.w
% ar xv sedit.w
patdef
csedit
sedit.r
sedit.fmt
% rc -d -v sedit.r
~bin/ratp1.exe sedit.r | ~bin/ratp2.exe &amp;gt;sedit.f
~bin/fc.exe -v -d sedit.f
for/noop/object=sedit.obj/nolist/check=all/debug=all sedit.f
~bin/ld.exe -v -d sedit.obj
$ link/exe=dua1:[software.swtools.tmp.sedit]sedit.exe/debug/nomap sys$input/opti
ons
dua1:[software.swtools.tmp.sedit]sedit.obj,-
dua1:[software.swtools.bin]rlib.olb/incl=(tools$main),-
dua1:[software.swtools.bin]rlib.olb/libr
% echo Hello | sedit "s/H/J/"
%DEBUG-I-CANTCREATEMAIN, could not create the debugger subprocess
%DEBUG-I-CANTCREATEMAIN, could not create the debugger subprocess
-LIB-F-NOCLI, no CLI present to perform function
-LIB-F-NOCLI, no CLI present to perform function
%DEBUG-I-SHRPRC, debugger will share user process
%DEBUG-I-SHRPRC, debugger will share user process

         VAX DEBUG Version V5.5-023

%DEBUG-I-INITIAL, language is MACRO, module set to TOOLS$MAIN

DBG&amp;gt; go
%DEBUG-I-DYNMODSET, setting module DOCOM
%SYSTEM-F-INTOVF, arithmetic trap, integer overflow at PC=0002E345, PSL=03C00022
break on unhandled exception preceding DOCOM\%LINE 20
    20:       IF (.NOT.(CMD .EQ. 97))GOTO 23162
DBG&amp;gt; go
%DEBUG-I-DYNMODSET, setting module DOCOM
%SYSTEM-F-INTOVF, arithmetic trap, integer overflow at PC=0002E345, PSL=03C00022
break on unhandled exception preceding DOCOM\%LINE 20
    20:       IF (.NOT.(CMD .EQ. 97))GOTO 23162
DBG&amp;gt;&lt;/pre&gt;
&lt;p&gt;I guess we'll need a little more context.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-1" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-1"&gt;&lt;/a&gt;DBG&amp;gt; type docom\1:20
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-2" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-2"&gt;&lt;/a&gt;module DOCOM
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-3" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-3"&gt;&lt;/a&gt;     1:       SUBROUTINE DOCOM(I, LINBUF, LINENO)
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-4" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-4"&gt;&lt;/a&gt;     2:       LOGICAL*1 LINBUF(2048)
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-5" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-5"&gt;&lt;/a&gt;     3:       INTEGER I, LINENO
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-6" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-6"&gt;&lt;/a&gt;     4:       LOGICAL*1 CMD
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-7" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-7"&gt;&lt;/a&gt;     5:       INTEGER K1, K2
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-8" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-8"&gt;&lt;/a&gt;     6:       INTEGER AQ
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-9" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-9"&gt;&lt;/a&gt;     7:       INTEGER IQ
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-10" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-10"&gt;&lt;/a&gt;     8:       INTEGER BUF
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-11" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-11"&gt;&lt;/a&gt;     9:       INTEGER LASTBF
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-12" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-12"&gt;&lt;/a&gt;    10:       INTEGER NLINES
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-13" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-13"&gt;&lt;/a&gt;    11:       INTEGER LINE1
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-14" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-14"&gt;&lt;/a&gt;    12:       INTEGER LINE2
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-15" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-15"&gt;&lt;/a&gt;    13:       INTEGER PAT
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-16" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-16"&gt;&lt;/a&gt;    14:       INTEGER PREVC
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-17" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-17"&gt;&lt;/a&gt;    15:       INTEGER NFLAG
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-18" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-18"&gt;&lt;/a&gt;    16:       INTEGER QFLAG
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-19" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-19"&gt;&lt;/a&gt;    17:       COMMON /CSEDIT/ AQ, IQ, BUF(20000), LASTBF, NLINES, LINE1, LINE2,
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-20" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-20"&gt;&lt;/a&gt;    18:      *PAT(132), PREVC, NFLAG, QFLAG
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-21" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-21" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-21"&gt;&lt;/a&gt;    19:       CMD = BUF(I+5)
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-22" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-22" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-22"&gt;&lt;/a&gt;    20:       IF (.NOT.(CMD .EQ. 97))GOTO 23162
&lt;a id="rest_code_f1b3b236708b48b2aead8719840c2ec0-23" name="rest_code_f1b3b236708b48b2aead8719840c2ec0-23" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_f1b3b236708b48b2aead8719840c2ec0-23"&gt;&lt;/a&gt;DBG&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, line 19 is where the the integer overflow happened.  &lt;code class="docutils literal"&gt;BUF&lt;/code&gt; is an
array of &lt;code class="docutils literal"&gt;INTEGER&lt;/code&gt;s, while &lt;code class="docutils literal"&gt;CMD&lt;/code&gt; is a &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;, which, if I
look at the &lt;span class="file"&gt;sedit.r&lt;/span&gt; source:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-1" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# docom - execute a single command at buf(i) on linbuf and lineno&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-2" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;docom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linbuf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lineno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-3" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;linbuf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-4" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lineno&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-5" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-6" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k2&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-7" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;include &lt;/span&gt;&lt;span class="n"&gt;csedit&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-8" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-9" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;COMMAND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-10" name="rest_code_9884aae6ccf04c4190fe40e3f0c971d7-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_9884aae6ccf04c4190fe40e3f0c971d7-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;â¦&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;started as a &lt;code class="docutils literal"&gt;character&lt;/code&gt; and got translated to a &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;, the
one byte logical data type.  Normally that's ok, because we're just working
with ASCII, so any character should fit in in one byte.  Lets take a look:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-1" name="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8ccbab59d0b54e999f7cc1d440b4481c-1"&gt;&lt;/a&gt;DBG&amp;gt; ex buf[i+5]
&lt;a id="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-2" name="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8ccbab59d0b54e999f7cc1d440b4481c-2"&gt;&lt;/a&gt;DOCOM\BUF[19]:  00000173
&lt;a id="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-3" name="rest_code_8ccbab59d0b54e999f7cc1d440b4481c-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8ccbab59d0b54e999f7cc1d440b4481c-3"&gt;&lt;/a&gt;DBG&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh dear.  That's hexadecimal 173, which is decimal 371.  No wonder we
got an arithmetic trap, integer overflow.&lt;/p&gt;
&lt;p&gt;If I look for occurrences of &lt;code class="docutils literal"&gt;buf&lt;/code&gt; in &lt;span class="file"&gt;sedit.r&lt;/span&gt; (using emacs
18.55.105) I see lots of lines like where &lt;code class="docutils literal"&gt;buf&lt;/code&gt; is passed to
subroutine &lt;code class="docutils literal"&gt;addint&lt;/code&gt;, which is not documented in the manual pages,
unfortunately, but is in the runtime library &lt;span class="file"&gt;RLIB.OLB&lt;/span&gt;.  On
VAX/VMS the source for that is in &lt;span class="file"&gt;~vms/rlib.w&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-1" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# AddInt      Put int into intara if it fits, increment j&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-2" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# works with an array of integers&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-3" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-4" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-4"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer &lt;/span&gt;&lt;span class="k"&gt;function &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;intara&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-5" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-6" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;integer         &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;intara&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-7" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-8" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-9" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-10" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-11" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;intara&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-12" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-13" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-14" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-15" name="rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7fdcca2fa5524c2d96d23b3b8d99dd93-15"&gt;&lt;/a&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, that's just putting an integer in an array and incrementing the
variable that stores where the next one goes.&lt;/p&gt;
&lt;p&gt;Ok, lets look at all the
&lt;code class="docutils literal"&gt;addint&lt;/code&gt; calls.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-1" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Lines&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;matching&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"\\baddint\\b("&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sedit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-2" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-2"&gt;&lt;/a&gt;&lt;span class="mi"&gt;176&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-3" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-3"&gt;&lt;/a&gt;&lt;span class="mi"&gt;223&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nlines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-4" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-4"&gt;&lt;/a&gt;&lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-5" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-5"&gt;&lt;/a&gt;&lt;span class="mi"&gt;225&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-6" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-6"&gt;&lt;/a&gt;&lt;span class="mi"&gt;226&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-7" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-7"&gt;&lt;/a&gt;&lt;span class="mi"&gt;229&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NOTSTATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-8" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-8"&gt;&lt;/a&gt;&lt;span class="mi"&gt;235&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OKSTATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-9" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-9"&gt;&lt;/a&gt;&lt;span class="mi"&gt;236&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-10" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-10"&gt;&lt;/a&gt;&lt;span class="mi"&gt;238&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-11" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-11"&gt;&lt;/a&gt;&lt;span class="mi"&gt;242&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-12" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-12"&gt;&lt;/a&gt;&lt;span class="mi"&gt;248&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-13" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-13"&gt;&lt;/a&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-14" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-14"&gt;&lt;/a&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-15" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-15"&gt;&lt;/a&gt;&lt;span class="mi"&gt;269&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gflag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-16" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-16"&gt;&lt;/a&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pflag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-17" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-17"&gt;&lt;/a&gt;&lt;span class="mi"&gt;271&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-18" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-18"&gt;&lt;/a&gt;&lt;span class="mi"&gt;273&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-19" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-19"&gt;&lt;/a&gt;&lt;span class="mi"&gt;276&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-20" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-20" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-20"&gt;&lt;/a&gt;&lt;span class="mi"&gt;286&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-21" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-21" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-21"&gt;&lt;/a&gt;&lt;span class="mi"&gt;452&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;dotext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EOS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastbf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAXBUF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-22" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-22" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-22"&gt;&lt;/a&gt;&lt;span class="mi"&gt;695&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_7ea452909b7d49e096fe22958b0b1cec-23" name="rest_code_7ea452909b7d49e096fe22958b0b1cec-23" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_7ea452909b7d49e096fe22958b0b1cec-23"&gt;&lt;/a&gt;&lt;span class="mi"&gt;713&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxsiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some of the things they're adding to &lt;code class="docutils literal"&gt;buf&lt;/code&gt; are clearly integers
(&lt;code class="docutils literal"&gt;nlines&lt;/code&gt;, and probably &lt;code class="docutils literal"&gt;NOTSTATE&lt;/code&gt; and &lt;code class="docutils literal"&gt;OKSTATE&lt;/code&gt;), but those
&lt;code class="docutils literal"&gt;EOS&lt;/code&gt; are the SWTOOLS VOS equivalent of the C &lt;code class="docutils literal"&gt;'\0'&lt;/code&gt; that ends a
string, so those particular ones definitely hold characters.&lt;/p&gt;
&lt;p&gt;Well, if I want to debug that I'm going to have to rebuild the SWTOOLS
VOS with debugging turned on.  Investigating it turns out that I need
to add &lt;code class="docutils literal"&gt;/DEBUG&lt;/code&gt; to the &lt;span class="command"&gt;macro&lt;/span&gt; and &lt;span class="command"&gt;fortran&lt;/span&gt;
commands in &lt;span class="file"&gt;asmlib.com&lt;/span&gt;, &lt;span class="file"&gt;asmprm.com&lt;/span&gt;, &lt;span class="file"&gt;build.com&lt;/span&gt;,
and &lt;span class="file"&gt;compile.com&lt;/span&gt; in &lt;span class="file"&gt;~bin&lt;/span&gt;, and then execute
&lt;span class="file"&gt;~bin:toolgen.com&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Once that is done I start stepping through various routines.
Eventually I figure out that it &lt;code class="docutils literal"&gt;buf(19)&lt;/code&gt; is the element that ends
up with the 173 hex, and set a watch on it.  And indeed it is getting
passed a 173.  Sigh.&lt;/p&gt;
&lt;p&gt;Doing a &lt;code class="docutils literal"&gt;SHOW STACK&lt;/code&gt; in the &lt;span class="app"&gt;VMS Debugger&lt;/span&gt; shows that the
&lt;code class="docutils literal"&gt;addint()&lt;/code&gt; call that dies is in the subroutine &lt;code class="docutils literal"&gt;compil()&lt;/code&gt;.  Lets
take a look:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-1" name="rest_code_49478249ca594892b2d2ef5487665c04-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-1"&gt;&lt;/a&gt;DBG&amp;gt; type compil\50:65
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-2" name="rest_code_49478249ca594892b2d2ef5487665c04-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-2"&gt;&lt;/a&gt;module COMPIL
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-3" name="rest_code_49478249ca594892b2d2ef5487665c04-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-3"&gt;&lt;/a&gt;    50:       STATUS = ADDINT(LINE2, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-4" name="rest_code_49478249ca594892b2d2ef5487665c04-4" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-4"&gt;&lt;/a&gt;    51:       COM = CLOWER(LIN(I))
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-5" name="rest_code_49478249ca594892b2d2ef5487665c04-5" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-5"&gt;&lt;/a&gt;    52:       IF (.NOT.(COM .EQ. 33))GOTO 23068
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-6" name="rest_code_49478249ca594892b2d2ef5487665c04-6" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-6"&gt;&lt;/a&gt;    53:       STATUS = ADDINT(1, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-7" name="rest_code_49478249ca594892b2d2ef5487665c04-7" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-7"&gt;&lt;/a&gt;    54:       I = I+1
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-8" name="rest_code_49478249ca594892b2d2ef5487665c04-8" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-8"&gt;&lt;/a&gt;    55:       CALL SKIPBL(LIN, I)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-9" name="rest_code_49478249ca594892b2d2ef5487665c04-9" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-9"&gt;&lt;/a&gt;    56:       COM = CLOWER(LIN(I))
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-10" name="rest_code_49478249ca594892b2d2ef5487665c04-10" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-10"&gt;&lt;/a&gt;    57:       GOTO 23069
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-11" name="rest_code_49478249ca594892b2d2ef5487665c04-11" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-11"&gt;&lt;/a&gt;    58: 23068 CONTINUE
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-12" name="rest_code_49478249ca594892b2d2ef5487665c04-12" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-12"&gt;&lt;/a&gt;    59:       STATUS = ADDINT(0, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-13" name="rest_code_49478249ca594892b2d2ef5487665c04-13" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-13"&gt;&lt;/a&gt;    60: 23069 CONTINUE
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-14" name="rest_code_49478249ca594892b2d2ef5487665c04-14" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-14"&gt;&lt;/a&gt;    61:       STATUS = ADDINT(COM, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-15" name="rest_code_49478249ca594892b2d2ef5487665c04-15" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-15"&gt;&lt;/a&gt;    62:       IF (.NOT.(COM .EQ. 97 .AND. FD .NE. 0))GOTO 23070
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-16" name="rest_code_49478249ca594892b2d2ef5487665c04-16" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-16"&gt;&lt;/a&gt;    63:       STATUS = ADDINT(0, BUF, LASTBF, 20000)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-17" name="rest_code_49478249ca594892b2d2ef5487665c04-17" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-17"&gt;&lt;/a&gt;    64:       STATUS = DOTEXT(FD)
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-18" name="rest_code_49478249ca594892b2d2ef5487665c04-18" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-18"&gt;&lt;/a&gt;    65:       GOTO 23071
&lt;a id="rest_code_49478249ca594892b2d2ef5487665c04-19" name="rest_code_49478249ca594892b2d2ef5487665c04-19" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_49478249ca594892b2d2ef5487665c04-19"&gt;&lt;/a&gt;DBG&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Line 61 is the one that dies.  Here &lt;code class="docutils literal"&gt;addint()&lt;/code&gt; is being passed the
variable &lt;code class="docutils literal"&gt;COM&lt;/code&gt;.  Lets take a look at the &lt;span class="app"&gt;Ratfor&lt;/span&gt; source for
its definition:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code fortran"&gt;&lt;a id="rest_code_8270926a77c94de08721a016647db2ec-1" name="rest_code_8270926a77c94de08721a016647db2ec-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8270926a77c94de08721a016647db2ec-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;# compil - "compile" command in lin(i) from file fd, increment i&lt;/span&gt;
&lt;a id="rest_code_8270926a77c94de08721a016647db2ec-2" name="rest_code_8270926a77c94de08721a016647db2ec-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8270926a77c94de08721a016647db2ec-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;compil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_8270926a77c94de08721a016647db2ec-3" name="rest_code_8270926a77c94de08721a016647db2ec-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_8270926a77c94de08721a016647db2ec-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kt"&gt;character &lt;/span&gt;&lt;span class="n"&gt;lin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh, look, &lt;code class="docutils literal"&gt;com&lt;/code&gt; is a character, that gets translated by
&lt;span class="app"&gt;Ratfor&lt;/span&gt; to a &lt;code class="docutils literal"&gt;LOGICAL*1&lt;/code&gt;, and it is a byte, while the integers
that get passed in are longwords, which are 32 bytes longâ¦  Uh,
doesn't Fortran pass everything by reference?  So &lt;code class="docutils literal"&gt;addint()&lt;/code&gt; gets
passed the address of a byte, but interprets it as the address of a
longword, so it picks up 3 extra bytes.  For whatever reason, there is
a 1 in the byte right next to the byte for &lt;code class="docutils literal"&gt;com&lt;/code&gt;, so we get (hex,
remember) 173 instead of 73, which is the ASCII for &lt;code class="docutils literal"&gt;s&lt;/code&gt;, which the s
in our &lt;code class="docutils literal"&gt;sedit "s/H/J/"&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Ok, that should be easy to fix: introduce an integer temporary
variable, assign &lt;code class="docutils literal"&gt;com&lt;/code&gt; to it, and pass it instead.&lt;/p&gt;
&lt;p&gt;Here's the VMS diff:&lt;/p&gt;
&lt;pre class="literal-block"&gt;************
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;6
  206      integer comint
  207      integer fd
******
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;1
  206      integer fd
************
************
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;6
  237      comint = com
  238      status = addint(comint, buf, lastbf, MAXBUF)
  239      if (com == APPENDCOM &amp;amp; fd != NO) {
******
File DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;1
  236      status = addint(com, buf, lastbf, MAXBUF)
  237      if (com == APPENDCOM &amp;amp; fd != NO) {
************

Number of difference sections found: 2
Number of difference records found: 3

DIFFERENCES /IGNORE=()/MERGED=1/OUTPUT=DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.DIFF;1-
    DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;6-
    DUA1:[SOFTWARE.SWTOOLS.TMP]SEDIT.R;1&lt;/pre&gt;
&lt;p&gt;Recompile, lets see:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-1" name="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-1" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_2c25d94d9e8b4b908a1b6a68c742894e-1"&gt;&lt;/a&gt;% echo Hello | sedit "s/H/J/"
&lt;a id="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-2" name="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-2" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_2c25d94d9e8b4b908a1b6a68c742894e-2"&gt;&lt;/a&gt;Jello
&lt;a id="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-3" name="rest_code_2c25d94d9e8b4b908a1b6a68c742894e-3" href="https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/#rest_code_2c25d94d9e8b4b908a1b6a68c742894e-3"&gt;&lt;/a&gt;%
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That did it!&lt;/p&gt;</description><category>fortran</category><category>lbl tools</category><category>ratfor</category><category>software tools</category><category>software tools virtual operating system</category><category>swtools</category><guid>https://tkurtbond.github.io/posts/2024/07/15/fixing-a-41-year-old-bug-in-the-swtools-vos-sedit-commmand/</guid><pubDate>Mon, 15 Jul 2024 18:09:45 GMT</pubDate></item><item><title>How the LBL Software Tools system organized its source files</title><link>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;One of the things I've always found interesting about the LBL Software
Tools VOS was how its source files were structured.  I'll include here
page 10 of the release notes from the release on the DECUS LT86 tape:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1"&gt;&lt;/a&gt;                            Release Notes
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4"&gt;&lt;/a&gt;                        Source File Structure
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6"&gt;&lt;/a&gt;The  source  code  for  `tool' is contained in a file [...SRC]tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7"&gt;&lt;/a&gt;(if   the   tool   is   portable   across   operating   systems)    or
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8"&gt;&lt;/a&gt;[...VMS]tool.tcs  (if  it  is  an VMS-specific tool).  This TCS source
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9"&gt;&lt;/a&gt;file contains an edit history of all changes made to the source.   The
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10"&gt;&lt;/a&gt;output  of  the  `get' utility operating on a `.tcs' file results in a
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11"&gt;&lt;/a&gt;file (tool.w) which is all of the  environment  necessary  to  rebuild
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12"&gt;&lt;/a&gt;the  tool,  provided  that the VOS is operational.  The tool.w file is
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13"&gt;&lt;/a&gt;an archive containing:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15"&gt;&lt;/a&gt;  1. All of the files "included" by the ratfor source code.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16"&gt;&lt;/a&gt;  2. The ratfor source file, tool.r.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17"&gt;&lt;/a&gt;  3. The format input for the manual entry, tool.fmt.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18"&gt;&lt;/a&gt;  4. And optionally,  any  extra  definition  files  needed  to  build
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19"&gt;&lt;/a&gt;     alternate versions of the tool (eg. sh =&amp;gt; hsh).
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21"&gt;&lt;/a&gt;As  an  example,  suppose  that  you  wish  to  change  the subroutine
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22"&gt;&lt;/a&gt;"module" in "tool".  The suggested scenario is as follows:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24"&gt;&lt;/a&gt;   $ !Fetch the file tool.tcs from the appropriate directory in the container
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25"&gt;&lt;/a&gt;   $ !file on tape into st_src
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26"&gt;&lt;/a&gt;   $ hsh
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27"&gt;&lt;/a&gt;   % get ~src/tool.tcs tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28"&gt;&lt;/a&gt;   % ar xv tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29"&gt;&lt;/a&gt;   % ar xv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30"&gt;&lt;/a&gt;   % ed module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31"&gt;&lt;/a&gt;   (make changes and write file)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32"&gt;&lt;/a&gt;   % ar uv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33"&gt;&lt;/a&gt;   % rc -v tool.r
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34"&gt;&lt;/a&gt;   % (test out new tool.  repeat last three steps until satisfied.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35"&gt;&lt;/a&gt;   % ed tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36"&gt;&lt;/a&gt;   (modify writeup to reflect changes)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37"&gt;&lt;/a&gt;   % ar uv tool.w tool.r tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38"&gt;&lt;/a&gt;   % cp tool.exe ~usr/tool.exe
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39"&gt;&lt;/a&gt;   % delta tool.w ~src/tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40"&gt;&lt;/a&gt;   (Identify in the comments the reason for the changes,
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41"&gt;&lt;/a&gt;   and which modules changed.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42"&gt;&lt;/a&gt;   % format tool.fmt &amp;gt;tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43"&gt;&lt;/a&gt;   % ar uv ~man/s1 tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44"&gt;&lt;/a&gt;   % asam &amp;lt;~man/s1 | sort &amp;gt;~man/i1
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46"&gt;&lt;/a&gt;Placing tool.exe in ~usr  causes  the  shell  to  find  your  modified
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47"&gt;&lt;/a&gt;version  of  "tool"  rather  than  the  distributed one.  The last two
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48"&gt;&lt;/a&gt;commands  above  cause  the  manual  entry  for  `tool'  to  correctly
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49"&gt;&lt;/a&gt;correspond to the utility itself.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56"&gt;&lt;/a&gt;                                 -10-
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(It should be &lt;code&gt;% get ~src/tool.tcs &amp;gt;tool.w&lt;/code&gt; with a â&amp;gt;â
before &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt; in the above procedure.  Otherwise the contents
are echoed to the terminal instead of being written to &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;So, all the source files (source code &lt;em&gt;and&lt;/em&gt; documentation) are stored
in an archive file, which contains another archive file that has just
the ratfor source, from which you extract the modules you want to work
on, and at the end update the archives in the reverse order!  This
made organizing all the source much simpler, especially considering
some of the porting targets for this software didn't have hierarchical
directory structures, only flat directories.  So when moving around
parts of the system, like when you were preparing the distribution,
you normally only dealt with the top level archives, the &lt;code class="file docutils literal"&gt;.TCS&lt;/code&gt;
files, and only worked directly with the files that were contained
within that archive and its child archives if you had to make a change
to the source files.  Very clever!&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls" src="https://tkurtbond.github.io/images/Russian-Matroshka.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Russian-Matroshka.jpg"&gt;Source 1&lt;/a&gt;)&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls, opened" src="https://tkurtbond.github.io/images/Russian-Matroshka-opened.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Matryoshka_transparent.png"&gt;Source 2&lt;/a&gt;)&lt;/p&gt;</description><category>decus</category><category>lbltools</category><category>lt86 tape</category><category>source file structure</category><category>swtools</category><category>vax</category><category>vms</category><category>vos</category><guid>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</guid><pubDate>Wed, 03 Jul 2024 20:20:40 GMT</pubDate></item><item><title>Software Tools</title><link>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;When I was in college in the 1980s the school I was at used Digital
Equipment Corporation VAXes running VMS, and didn't have any Unix
machines.  I was quite interested in Unix and the Unix philosophy, but
was frustrated by my lack of access to Unix machines.  However,
Brian W. Kernighan and P. J. Plauger wrote a couple of books about
writing tools in the Unix style: &lt;cite&gt;Software Tools&lt;/cite&gt; was in
published in 1976 and used Fortran as its portable implementation
language, while &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; was published in
1981 and used Pascal.&lt;/p&gt;
&lt;img alt="/images/swtools.jpeg" src="https://tkurtbond.github.io/images/swtools.jpeg"&gt;
&lt;p&gt;Here is a quote repeated on each book's cover:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good Programming is not learned from generalities, but by seeing
how significant programs can be made clean, easy to read, easy to
maintain and modify, human-engineered, efficient, and reliable, by
the application of common sense and good programming practices.
Careful study and imitation of good programs leads to better
writing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both books worked through writing software tools that were simpler but
still useful versions of many of the standard Unix tools.&lt;/p&gt;
&lt;p&gt;I got &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; because I knew Pascal better
than Fortran and worked through implementing each of the programs on
the college's VAX, which taught me a lot about programming and was
significant influence on me.  I later got &lt;cite&gt;Software Tools&lt;/cite&gt;
because I wanted to read the section on implementing the ratfor
processor which that book used to add additional control structures
unavailable in the Fortran of the day.&lt;/p&gt;
&lt;p&gt;I was not the only person who was influenced by these books.
Deborah K. Scherrer, Dennis E. Hall, and Joseph S. Sventek at Lawrence
Berkeley National Laboratory with help from others greatly expanded
the set of programs from the book into an entire Virtual Operating
System (VOS), and founded the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Software_Tools_Users_Group"&gt;Software Tools Users Group&lt;/a&gt; in 1976
to distribute it, eventually leading to ports on over 50 operating
systems.&lt;/p&gt;
&lt;p&gt;Luckily for me VAX/VMS was one of those operating systems, and the
port appeared on various tapes distributed by DECUS, the Digital
Equipment Computer Users' Society.  Luckily MPL Corporation, where I
worked at the time, always got the DECUS tapes and had a Fortran
compiler, so I could install it there.  I found it a very useful and
usable computing environment.&lt;/p&gt;
&lt;p&gt;Anyway, I retain a fondness for that software, known variously as
LBLTOOLS, LBL SWTOOLS, and SWTOOLS VOS, and have begun using the version
from the &lt;a class="reference external" href="https://www.digiater.nl/openvms/decus/zips_vms_attributes/lt86a.zip"&gt;DECUS VAX Languages &amp;amp; Tools SIG tape from 1986&lt;/a&gt;
again on the (emulated) VAX I maintain at work.  This gave me the
opportunity create a &lt;a class="reference external" href="https://tkurtbond.github.io/swtoolsman.pdf"&gt;PDF with the documentation&lt;/a&gt;
for that version, which I'm making available here for the curious.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;âI really enjoyed that book.  The first computer book I read where
I thought my world was larger after reading it.â â C. Paul Bond&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2024-10-21 15:59:04 EDT&lt;/em&gt;
â Updated PDF with slight changes to structure and better bookmarks.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</description><category>brian w. kernighan</category><category>decus</category><category>fortran</category><category>lbltools</category><category>lt86 tape</category><category>p.j. plauger</category><category>pascal</category><category>ratfor</category><category>software tools</category><category>swtools</category><category>vax</category><category>vms</category><category>vos</category><guid>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</guid><pubDate>Wed, 03 Jul 2024 13:59:31 GMT</pubDate></item><item><title>Overcoming reST's limited table control by including raw groff TBL</title><link>https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2024-01-21 15:55:09 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So.  I have a CHICKEN Scheme program that converts &lt;a class="reference external" href="http://dyskami.ca/besm.html"&gt;Big Eyes Small
Mouth 4E&lt;/a&gt; characters from a YAML definition into &lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;reStructuredText&lt;/a&gt;
(reST).&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt;âs (and probably the orginal python &lt;a class="reference external" href="https://docutils.sourceforge.io/"&gt;docutils&lt;/a&gt;â),
formatting of tables from &lt;span class="app"&gt;reST&lt;/span&gt; is limited and doesnât let me do
what I need to do.&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#markdown" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hereâs an image of the BESM 4E character, Xeksil &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#xeksil" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, I played
Wednesday night:&lt;/p&gt;
&lt;img alt="Original charactersheet for Xeksil in :app:`reST` using grid tables" src="https://tkurtbond.github.io/images/xeksil-plain-rst-version.png"&gt;
&lt;p&gt;As you can see, it doesnât fully fill the width of the page, and the
first two columns are too wide for the information they contain.&lt;/p&gt;
&lt;p&gt;Iâm contemplating changing the program so that the actual tables are
in &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; format directly, and insert them into the
generated &lt;span class="app"&gt;reST&lt;/span&gt; file in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; directives.  That locks
me into using &lt;span class="app"&gt;pandoc&lt;/span&gt;âs &lt;span class="app"&gt;groff&lt;/span&gt; &lt;span class="app"&gt;ms&lt;/span&gt; macros output, but I
could just write a new version that outputs ConTeXt (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/ConTeXt"&gt;C1&lt;/a&gt;, &lt;a class="reference external" href="https://wiki.contextgarden.net/Main_Page"&gt;C2&lt;/a&gt;) if I
ever need oneâ¦&lt;/p&gt;
&lt;p&gt;As a test, I converted a character and his mecha into raw &lt;span class="app"&gt;groff&lt;/span&gt;
&lt;span class="app"&gt;ms&lt;/span&gt; with &lt;span class="app"&gt;tbl&lt;/span&gt; output.  Hereâs an image of that:&lt;/p&gt;
&lt;img alt="Test character sheet for Enyon Boase in plain groff -ms with TBL." src="https://tkurtbond.github.io/images/enyon-in-groff-ms-directly.png"&gt;
&lt;p&gt;As you can see, the tables fill the width of the text entirely and the
first two columns are narrower and the third column expands to fill
the width of the text.  I was also able to put double lines before and
after each entity, and put single lines after the headers and before
the total lines.&lt;/p&gt;
&lt;p&gt;I think this looks much better.&lt;/p&gt;
&lt;p&gt;Note that the first example is on 5.5â by 8.5â page (which I use for
things Iâm going to look at on the screen a lot, because it takes up
less space) and the second example is on 8.5â by 11â paper and in two
columns.  It was essentially impossible to have &lt;span class="app"&gt;pandoc&lt;/span&gt; (and Iâm
sure docutils) produce 2 column output and have the &lt;span class="app"&gt;reST&lt;/span&gt;
versions of the tables adapt to the width of the columns.  With the
narrower widths of the first two table columns the third table column
is wide enough that I can use pages with two columns.&lt;/p&gt;
&lt;p&gt;CPB (who I talked about this with earlier) commented: The data is in
YAML now right?  Why not just generate troff?&lt;/p&gt;
&lt;p&gt;Because when I write the actual text of things, I prefer &lt;span class="app"&gt;reST&lt;/span&gt;.
So, for instance, the description of the character or entity I write
in &lt;span class="app"&gt;reST&lt;/span&gt;.  And I like &lt;span class="app"&gt;reST&lt;/span&gt; for the main documents into
which I include these generated files because then I can output to
HTML too.  (Or to ConTexT; Iâve got some documents where I needed
features that ConTexT has and &lt;span class="app"&gt;pandoc&lt;/span&gt;âs groff -ms output doesnât
have.)&lt;/p&gt;
&lt;p&gt;Iâve already written the character formatting program (named
&lt;span class="command"&gt;besm-rst&lt;/span&gt;, originally enough) so that it can output the
table version or a terse version where the different sections are in
normal paragraphs, which is useful because it is much more compact.
Adding a version that outputs &lt;span class="app"&gt;reST&lt;/span&gt; with tables expressed as an
&lt;span class="app"&gt;reST&lt;/span&gt; &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt; block that contains the table sections as
&lt;span class="app"&gt;groff -ms&lt;/span&gt; &lt;span class="app"&gt;tbl&lt;/span&gt; source would just be writing another
version of the output routine, selectable with a command line option.&lt;/p&gt;
&lt;p&gt;The original output routine to produce &lt;span class="app"&gt;reST&lt;/span&gt; grid tables and its
support procedures were 315 lines.  The second output routine to
paragraphs and its new support procedures (it uses some of the first
output routineâs support procedures) was 158 lines.&lt;/p&gt;
&lt;p&gt;It will be interesting to see how long the troff output will be.&lt;/p&gt;
&lt;p&gt;Oh, here is Lieutenant Enyon Boase again, this time in paragraph format:&lt;/p&gt;
&lt;img alt="/images/enyon-terse-plain-rst-version.png" src="https://tkurtbond.github.io/images/enyon-terse-plain-rst-version.png"&gt;
&lt;p&gt;Thatâs also a 8.5â by 11â page, and as you can see, itâs much more
compact, but harder for folks to find each individual item.  This is
basically the format that was used in the original BESM 1E and 2E
books, and the table based version appeared in BESM 3E and was
continued in 4E.&lt;/p&gt;
&lt;p&gt;I think the table format is much easier to read.&lt;/p&gt;
&lt;p&gt;Now, when I use the &lt;span class="app"&gt;reST&lt;/span&gt; table output and generate HTML from it
it looks kinda crude:&lt;/p&gt;
&lt;img alt="Character sheet for Enyon Boase using reST grid tables for HTML output." src="https://tkurtbond.github.io/images/enyon-rst-grid-table-html-output.png"&gt;
&lt;p&gt;However, I think I may be able to fix that with CSS.&lt;/p&gt;
&lt;p&gt;The HTML is relatively clean.  (It probably doesn't really need the
width specifications in the colgroup element, but &lt;span class="app"&gt;pandoc&lt;/span&gt; puts
those in.)&lt;/p&gt;
&lt;p&gt;Thatâs actually six tables.  If I wrap them in one div with a
particular class I think I can get them formatted right.&lt;/p&gt;
&lt;p&gt;CPB commented: CSS supports printing.&lt;/p&gt;
&lt;p&gt;Yes, there is actually at least one commercial document formatting
system that uses CSS for sophisticated print output, much more
elaborate than what the browsers support, I think.  And there is at
least one open source solution, &lt;a class="reference external" href="https://weasyprint.org/"&gt;weasyprint&lt;/a&gt;, that uses CSS to produce
PDF.&lt;/p&gt;
&lt;p&gt;But I know &lt;span class="app"&gt;tbl&lt;/span&gt; better than CSS. ð&lt;/p&gt;
&lt;p&gt;I do have a need for good looking output html for the output of the
program: so I can put it on my blog!  It would be better than images
in cases where Iâm not actually comparing the PDF output of various
things.&lt;/p&gt;
&lt;p&gt;Well, it took me longer than I expected to write the new version of
the output routines for embedded &lt;span class="app"&gt;tbl&lt;/span&gt; in rst: 4Â¼ hours.  After
the first 2 hours I was fried (it had already been a long day): if I
had stopped then I probably could have finished it the next day in an
hour.  Oh well.  The new output routine and its new supporting
routines were 208 lines long.&lt;/p&gt;
&lt;p&gt;Here's an image of the page produced (probably from the same YAML
file; I have a couple, since one of them was an early test file for
&lt;span class="command"&gt;besm-rst&lt;/span&gt;) using the new output routine, with &lt;span class="app"&gt;reST&lt;/span&gt;
output with &lt;span class="app"&gt;tbl&lt;/span&gt; output in &lt;code class="docutils literal"&gt;.. raw:: ms&lt;/code&gt;, pulled from the
document with all the pregenerated characters:&lt;/p&gt;
&lt;img alt="Enyon Boase reST output with tbl in raw ms block" src="https://tkurtbond.github.io/images/enyon-boase-rst-output-with-raw-ms-tbl.png"&gt;
&lt;p&gt;And for reference, here is the YAML version of Enyon Boase:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-1" name="rest_code_c9466e80c056449ba187b75777b8423a-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-2" name="rest_code_c9466e80c056449ba187b75777b8423a-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Lieutenant Enyon Boase&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-3" name="rest_code_c9466e80c056449ba187b75777b8423a-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="c1"&gt;# Average: (/ (+ 8 6 6) 3.0) 6.666666666666667&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-4" name="rest_code_c9466e80c056449ba187b75777b8423a-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Body&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-5" name="rest_code_c9466e80c056449ba187b75777b8423a-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-6" name="rest_code_c9466e80c056449ba187b75777b8423a-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;16&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-7" name="rest_code_c9466e80c056449ba187b75777b8423a-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Mind&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-8" name="rest_code_c9466e80c056449ba187b75777b8423a-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-9" name="rest_code_c9466e80c056449ba187b75777b8423a-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-10" name="rest_code_c9466e80c056449ba187b75777b8423a-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Soul&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-11" name="rest_code_c9466e80c056449ba187b75777b8423a-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-12" name="rest_code_c9466e80c056449ba187b75777b8423a-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-13" name="rest_code_c9466e80c056449ba187b75777b8423a-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-14" name="rest_code_c9466e80c056449ba187b75777b8423a-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ACV&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-15" name="rest_code_c9466e80c056449ba187b75777b8423a-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-16" name="rest_code_c9466e80c056449ba187b75777b8423a-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DCV&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-17" name="rest_code_c9466e80c056449ba187b75777b8423a-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-18" name="rest_code_c9466e80c056449ba187b75777b8423a-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;DM&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-19" name="rest_code_c9466e80c056449ba187b75777b8423a-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;5&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-20" name="rest_code_c9466e80c056449ba187b75777b8423a-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;HP&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-21" name="rest_code_c9466e80c056449ba187b75777b8423a-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;70&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-22" name="rest_code_c9466e80c056449ba187b75777b8423a-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;EP&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-23" name="rest_code_c9466e80c056449ba187b75777b8423a-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;60&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-24" name="rest_code_c9466e80c056449ba187b75777b8423a-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SV&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-25" name="rest_code_c9466e80c056449ba187b75777b8423a-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-26" name="rest_code_c9466e80c056449ba187b75777b8423a-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-27" name="rest_code_c9466e80c056449ba187b75777b8423a-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Attack Mastery&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-28" name="rest_code_c9466e80c056449ba187b75777b8423a-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-29" name="rest_code_c9466e80c056449ba187b75777b8423a-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-30" name="rest_code_c9466e80c056449ba187b75777b8423a-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Extra Actions&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-31" name="rest_code_c9466e80c056449ba187b75777b8423a-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-32" name="rest_code_c9466e80c056449ba187b75777b8423a-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-33" name="rest_code_c9466e80c056449ba187b75777b8423a-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+1 Extra Action&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-34" name="rest_code_c9466e80c056449ba187b75777b8423a-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Item:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;FV2021&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Coleopteran"&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-35" name="rest_code_c9466e80c056449ba187b75777b8423a-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;35&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-36" name="rest_code_c9466e80c056449ba187b75777b8423a-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Skills&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-37" name="rest_code_c9466e80c056449ba187b75777b8423a-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-38" name="rest_code_c9466e80c056449ba187b75777b8423a-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-39" name="rest_code_c9466e80c056449ba187b75777b8423a-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;20 Skill Points&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-40" name="rest_code_c9466e80c056449ba187b75777b8423a-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-41" name="rest_code_c9466e80c056449ba187b75777b8423a-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Defect:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Obsessed&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;by&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Military&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;History"&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-42" name="rest_code_c9466e80c056449ba187b75777b8423a-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-43" name="rest_code_c9466e80c056449ba187b75777b8423a-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-44" name="rest_code_c9466e80c056449ba187b75777b8423a-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-45" name="rest_code_c9466e80c056449ba187b75777b8423a-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Interrogation&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-46" name="rest_code_c9466e80c056449ba187b75777b8423a-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-47" name="rest_code_c9466e80c056449ba187b75777b8423a-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-48" name="rest_code_c9466e80c056449ba187b75777b8423a-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Law&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-49" name="rest_code_c9466e80c056449ba187b75777b8423a-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-50" name="rest_code_c9466e80c056449ba187b75777b8423a-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-51" name="rest_code_c9466e80c056449ba187b75777b8423a-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-52" name="rest_code_c9466e80c056449ba187b75777b8423a-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-53" name="rest_code_c9466e80c056449ba187b75777b8423a-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Leadership&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-54" name="rest_code_c9466e80c056449ba187b75777b8423a-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-55" name="rest_code_c9466e80c056449ba187b75777b8423a-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-56" name="rest_code_c9466e80c056449ba187b75777b8423a-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Military Sciences&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-57" name="rest_code_c9466e80c056449ba187b75777b8423a-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-58" name="rest_code_c9466e80c056449ba187b75777b8423a-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-59" name="rest_code_c9466e80c056449ba187b75777b8423a-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Persuasion&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-60" name="rest_code_c9466e80c056449ba187b75777b8423a-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-61" name="rest_code_c9466e80c056449ba187b75777b8423a-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-62" name="rest_code_c9466e80c056449ba187b75777b8423a-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Political Sciences&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-63" name="rest_code_c9466e80c056449ba187b75777b8423a-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-64" name="rest_code_c9466e80c056449ba187b75777b8423a-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-65" name="rest_code_c9466e80c056449ba187b75777b8423a-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stealth&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-66" name="rest_code_c9466e80c056449ba187b75777b8423a-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-67" name="rest_code_c9466e80c056449ba187b75777b8423a-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-68" name="rest_code_c9466e80c056449ba187b75777b8423a-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Visual Arts&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-69" name="rest_code_c9466e80c056449ba187b75777b8423a-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-70" name="rest_code_c9466e80c056449ba187b75777b8423a-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-71" name="rest_code_c9466e80c056449ba187b75777b8423a-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Writing&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-72" name="rest_code_c9466e80c056449ba187b75777b8423a-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-73" name="rest_code_c9466e80c056449ba187b75777b8423a-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-74" name="rest_code_c9466e80c056449ba187b75777b8423a-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;specialisations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_c9466e80c056449ba187b75777b8423a-75" name="rest_code_c9466e80c056449ba187b75777b8423a-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_c9466e80c056449ba187b75777b8423a-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Reports&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is the YAML version of his FV2021 Coleopteran:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-1" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-1" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-1"&gt;&lt;/a&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-2" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-2" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-2"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;FV2021 Coleopteran&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-3" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-3" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;BRCS, p. 94=95&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-4" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-4" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-5" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-5" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;A three-metre talk British-built humanoid combat walker used by&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-6" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-6" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;the Canadians on Mars.  They use a new âmind-interfaceâ&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-7" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-7" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;neuro-helmet that makes the mecha very agile.  However, if a&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-8" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-8" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;different pilot wants to use the mecha, the neuro-helmet must be&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-9" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-9" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;âretunedâ to their brain waves â this takes a full day; until&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-10" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-10" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;then, halve the Defence Mastery and Combat Technique: Lightning&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-11" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-11" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;Reflexes Attribute bonuses.  The mecha are painted standard&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-12" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-12" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;colours: UN white, with sky-blue helmets.&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-13" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-13" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-14" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-14" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Health Points&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-15" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-15" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;80&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-16" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-16" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-17" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-17" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Features&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-18" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-18" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-19" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-19" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-20" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-20" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Radio,&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Inertial&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Naviagion"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-21" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-21" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Ground Speed&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-22" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-22" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-23" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-23" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-24" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-24" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Up to 50 kph&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-25" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-25" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Armour&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-26" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-26" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-27" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-27" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-28" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-28" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-29" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-29" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-30" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-30" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Unique&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Limiter:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Partial:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Thin"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-31" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-31" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-32" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-32" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Hit thin area with called shot for half Armour Rating; 20 AR;&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-33" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-33" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;20 Health Points&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-34" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-34" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Combat Technique&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-35" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-35" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-36" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-36" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-37" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-37" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Lightning&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Reflexes:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;major&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;edge&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;on&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Initiative&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;rolls"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-38" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-38" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Defence Mastery&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-39" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-39" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-40" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-40" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-41" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-41" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+2 to Defense Combat Value&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-42" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-42" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Resilient&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-43" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-43" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-44" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-44" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-45" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-45" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-46" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-46" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Space: low pressure, high pressure, intense cold, intense&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-47" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-47" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-47"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;heat, radiation, lack of air&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-48" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-48" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Supersense&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-49" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-49" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-50" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-50" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-51" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-51" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Sensors, range 10 km&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-52" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-52" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Superstrength&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-53" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-53" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-54" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-54" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;8&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-55" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-55" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-56" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-56" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Lift 500 kg (a horse); +10 Unarmed Combat Damage;&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-57" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-57" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;+2 Muscle Weapons Damage&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-58" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-58" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Tough&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-59" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-59" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-60" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-60" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-60"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;6&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-61" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-61" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;+60 Health Points&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-62" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-62" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Railgun"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-63" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-63" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-64" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-64" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-65" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-65" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;24&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-66" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-66" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-66"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-67" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-67" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier Ã&lt;/span&gt;&lt;span class="err"&gt;â&lt;/span&gt;&lt;span class="no"&gt;9; Range 10 km; fails and cannot be used&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-68" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-68" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;again on natural 2 or 3&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-69" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-69" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-70" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-70" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;5&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-71" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-71" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-72" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-72" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Unreliable&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-73" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-73" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Rocket&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pod"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-74" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-74" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-75" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-75" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-75"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;9&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-76" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-76" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-76"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;14&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-77" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-77" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-77"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-78" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-78" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-78"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier Ã&lt;/span&gt;&lt;span class="err"&gt;â&lt;/span&gt;&lt;span class="no"&gt;9; Autofire: 1 hit if attack exceeds defence&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-79" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-79" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-79"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;by 0â3, 2 hits if it exceeds by 4â6, 3 hits if it exceeds by&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-80" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-80" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-80"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;&amp;gt;7â9, etc.; Area 3m radius; Range 1 km; 3 shots; Can be&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-81" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-81" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-81"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;deflected or destroyed for 1 round; Alternate attack: cost&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-82" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-82" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-82"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;halved&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-83" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-83" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-83"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;enhancements&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-84" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-84" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-84"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Autofire&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-85" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-85" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-85"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Area&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-86" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-86" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-86"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-87" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-87" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-87"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-88" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-88" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-88"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Charges&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-89" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-89" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-89"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Stoppable&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-90" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-90" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-90"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Weapon:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Plasma&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Fist"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-91" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-91" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-91"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-92" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-92" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-92"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;effective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-93" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-93" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-93"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;11&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-94" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-94" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-94"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-95" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-95" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-95"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Damage Modifier Ã&lt;/span&gt;&lt;span class="err"&gt;â&lt;/span&gt;&lt;span class="no"&gt;12; Muscle Weapon; 6 shots; Alternate attack:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-96" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-96" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-96"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;cost halved&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-97" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-97" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-97"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;limiters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-98" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-98" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-98"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Charges&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-99" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-99" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-99"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;defects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-100" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-100" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-100"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Awkward Size&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-101" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-101" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-101"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-102" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-102" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-102"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-4&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-103" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-103" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-103"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-104" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-104" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-104"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;Size 2: Medium: +2 to be hit for every size attacker is&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-105" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-105" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-105"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;smaller, â2 to be hit for every size attack is larger, 1.5â8&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-106" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-106" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-106"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;tonnes, big horse to bigger than an elephant&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-107" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-107" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-107"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Conditional Ownership&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-108" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-108" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-108"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-109" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-109" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-109"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-110" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-110" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-110"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;UN Army ownership&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-111" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-111" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-111"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Special&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Requirement:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Frequent&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;maintenance"&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-112" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-112" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-112"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;a id="rest_code_b3ecc9d9b2d34197b611dbae71213495-113" name="rest_code_b3ecc9d9b2d34197b611dbae71213495-113" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#rest_code_b3ecc9d9b2d34197b611dbae71213495-113"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;-3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The git repo with this program and some test data is on &lt;a class="reference external" href="https://github.com/tkurtbond/besm-tools"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enyon Boase is a pregenerated character that I came up for my
&lt;span class="title"&gt;BESM 2ER&lt;/span&gt; rewrite of the &lt;span class="title"&gt;BESM 1E&lt;/span&gt; adventure âRed
Planet, Blue Helmetsâ, from &lt;span class="title"&gt;Big Robots, Cool Starships&lt;/span&gt;, which
I'm now converting to &lt;span class="title"&gt;BESM 4E&lt;/span&gt;.  The FV2021 Coleopteran is
also from that adventure.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="markdown" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;It's a little better coming from one of &lt;span class="app"&gt;pandoc&lt;/span&gt;'s
variants of Markdown, because you can specify alignment of columns
in some forms of tables, but you still have too little control over
the appearance of the table, and to make tables easy to read you
need more control than you have.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="xeksil" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Xeksil has the âDimension Walkâ attribute.  In the
backstory in my head he's the son of a woman from the Courts of
Chaos (from Zelazny's &lt;span class="series"&gt;Amber Chronicles&lt;/span&gt;) and a man that at
least &lt;em&gt;looks&lt;/em&gt; human (but may not be; I haven't decided yet), so for
Xeksil this ability is âShadow Shiftingâ.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>besm</category><category>besm 4e</category><category>big eyes small mouth</category><category>context</category><category>docutils</category><category>groff</category><category>html</category><category>pandoc</category><category>rest</category><category>restructuredtext</category><category>rpg</category><category>yaml</category><guid>https://tkurtbond.github.io/posts/2023/02/03/overcoming-rests-limited-table-control-by-including-raw-groff-tbl/</guid><pubDate>Fri, 03 Feb 2023 13:31:34 GMT</pubDate></item><item><title>Maintaining the old ada-mode.el formerly distributed with Emacs</title><link>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I wrote a &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/"&gt;post&lt;/a&gt; about using the old ada-mode.el that used to be
distributed with &lt;span class="app"&gt;Emacs&lt;/span&gt; because I couldn't get the newer,
separate package &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_mono/ada-mode.html"&gt;version&lt;/a&gt; to work for me.&lt;/p&gt;
&lt;p&gt;Well, this morning when I pulled up an Ada file in &lt;span class="app"&gt;Emacs&lt;/span&gt; version
28 there were two problems:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;The information to invoke ada-mode on Ada files was not in the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; variable in &lt;span class="app"&gt;Emacs&lt;/span&gt;.  That was easy
enough to fix: add &lt;span class="file"&gt;.ada&lt;/span&gt;, &lt;span class="file"&gt;.ads&lt;/span&gt;, and &lt;span class="file"&gt;.adb&lt;/span&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;auto-mode-alist&lt;/span&gt;&lt;/code&gt; (and &lt;span class="file"&gt;.gpr&lt;/span&gt;, too, since Ada mode works
for &lt;span class="app"&gt;gprbuild&lt;/span&gt; files as well):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_3171fdf25a0346d4b76c694574cb6c14-1" name="rest_code_3171fdf25a0346d4b76c694574cb6c14-1" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_3171fdf25a0346d4b76c694574cb6c14-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.gpr$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ada$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.ads$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.adb$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_3171fdf25a0346d4b76c694574cb6c14-2" name="rest_code_3171fdf25a0346d4b76c694574cb6c14-2" href="https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/#rest_code_3171fdf25a0346d4b76c694574cb6c14-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'ada-mode&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That was easy enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When I tried to do any indentation &lt;span class="command"&gt;emacs&lt;/span&gt; reported an error,
with the error message âEnd position is smaller than start
positionâ.  Eventually I tracked this down to a call to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt;.  It turns out
that somewhere after &lt;span class="app"&gt;Emacs&lt;/span&gt; version 27.2 was released the
&lt;span class="app"&gt;Emacs&lt;/span&gt; developers added a check to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;parse-partial-sexp&lt;/span&gt;&lt;/code&gt; to
ensure that the &lt;code class="docutils literal"&gt;FROM&lt;/code&gt; argument (which indicates where in the
buffer to start parsing) was less than the &lt;code class="docutils literal"&gt;TO&lt;/code&gt; argument (which
indicates where in the buffer to &lt;strong&gt;stop&lt;/strong&gt; parsing).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Drat.  Drat.  Drat.  Well, looking at the code it was clear that
since &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-in-open-paren-p&lt;/span&gt;&lt;/code&gt; is explicitly searching backwards
that &lt;code class="docutils literal"&gt;TO&lt;/code&gt; would &lt;strong&gt;always&lt;/strong&gt; be smaller than &lt;code class="docutils literal"&gt;FROM&lt;/code&gt;.  So I could
just transpose the s-expressions that found those two values.  I
tried it, and it worked!&lt;/p&gt;
&lt;p&gt;At that point I realized that I had committed to maintain the old
version of ada-mode, at least for myself, and that I'd already talked
about it on my blog and it was small step from there to setting up a
GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt; with the old code, adding an &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/1"&gt;issue&lt;/a&gt; describing the
problem, adding a &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/7ee6fe55862ec615c7fe23d881adfee2d0094770"&gt;commit&lt;/a&gt; with the fix, and then writing this blog
post.&lt;/p&gt;
&lt;p&gt;Somewhere, someone is laughing and enjoying the schadenfreude.  Maybe
this will help someone else.&lt;/p&gt;
&lt;p&gt;And since I already have a GitHub &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode"&gt;repository&lt;/a&gt;, I ought to document the
first &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/issues/2"&gt;problem&lt;/a&gt; and since it is a documentation problem, put a mention
in the &lt;a class="reference external" href="https://github.com/tkurtbond/old-ada-mode/commit/67a79caacd851120fee2bca4704938a2f27e1bba"&gt;README&lt;/a&gt;.&lt;/p&gt;</description><category>ada</category><category>ada-mode</category><category>ada-mode.el</category><category>emacs</category><guid>https://tkurtbond.github.io/posts/2022/12/06/maintaining-the-old-ada-modeel-formerly-distributed-with-emacs/</guid><pubDate>Tue, 06 Dec 2022 18:28:59 GMT</pubDate></item><item><title>Splitting Strings on a Delimiter in the Ada Programming Language</title><link>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 13:30:34 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I did a search for âsplitting strings on a delimiter in the Ada
programming languageâ recently I did not get many useful results.
Eventually I stumbled over &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-String_005fSplit-g-strspl-ads.html#GNAT-String_005fSplit-g-strspl-ads"&gt;GNAT.String_Split&lt;/a&gt; which is an
instantiation of the generic package &lt;a class="reference external" href="https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gnat_rm/GNAT-Array_005fSplit-g-arrspl-ads.html#GNAT-Array_005fSplit-g-arrspl-ads"&gt;GNAT.Array_Split&lt;/a&gt;.  I also
finally &lt;a class="reference external" href="https://blog.adacore.com/new-strings-package-in-gnatcoll"&gt;found&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings_impl.ads"&gt;GNATCOLL.Strings_Impl&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/AdaCore/gnatcoll-core/blob/master/src/gnatcoll-strings.ads"&gt;GNATCOLL.Strings&lt;/a&gt;, its
default instantiation, which looks especially interesting, contains
a split implementation, and which seems to be designed to be a more
efficient string implementation than  than &lt;code class="docutils literal"&gt;Ada.Strings.Unbounded&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, those are all a little complicated, so it might be
appropriate to show a simpler implementation.&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;String&lt;/code&gt; type in Ada is a array of characters.  Once
declared, a &lt;code class="docutils literal"&gt;String&lt;/code&gt; variable always has the same length.  That
means that all the strings in an array of strings have to be the same
length.  However, an &lt;code class="docutils literal"&gt;access&lt;/code&gt; (Ada's version of a
pointer) to a &lt;code class="docutils literal"&gt;String&lt;/code&gt; can point to a string of any length, so for
this version we'll return an array of pointers to &lt;code class="docutils literal"&gt;String&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;String&lt;/code&gt; are defined in &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-3.html"&gt;Ada.Strings.Fixed&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-1" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-2" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-3" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-4" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-5" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-5"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-6" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-6"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Ada.Text_IO contains a type, Count, that would conflict with&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-7" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-7"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- the function Ada.Strings.Fixed.Count, so don't "use Ada.Text_IO;"&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-8" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-8"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- instead, make a package the gives it a shorter name, and use all its&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-9" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-9"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- procedures with that as the prefix.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-10" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;ATIO&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="nc"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-11" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;String_Ptr&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-12" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-13" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-14" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-14"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- Allocate a new String in a storage pool, initializing it to S, and&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-15" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-15"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- returning an access to it (a pointer).&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-16" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-16"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt;  &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-17" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;SP&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String_Ptr&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;'(&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-18" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-18"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-19" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-19"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-20" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-20"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-21" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-22" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-22"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-23" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-23"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-24" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-24"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-25" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-25"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-26" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-26"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-27" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-27"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-28" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-28"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-29" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-30" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-30"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-31" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-31"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-32" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-32"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-33" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-33"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-34" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-34"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-35" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-35"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-36" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-36"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-37" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-38" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-39" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-39"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-40" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-41" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-41"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-42" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-42"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-43" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-43"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-44" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-44"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-45" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-46" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-46"&gt;&lt;/a&gt;      &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-47" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-47"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-48" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-48"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-49" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-49"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-50" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-50"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-51" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-51"&gt;&lt;/a&gt;         &lt;span class="n"&gt;ATIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-52" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-52"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-53" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-53"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-54" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-55" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-56" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-57" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                    &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-58" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-59" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-60" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-61" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-61"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-62" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-63" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                 &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-64" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-65" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-65"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-66" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-67" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-68" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-68"&gt;&lt;/a&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-69" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-70" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-70" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-70"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-71" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-71" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-71"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-72" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-72" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-72"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-73" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-73" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-73"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-74" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-74" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-74"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-75" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-75" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-75"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_3a17d3b427fa447ba8c0d81882e579c6-76" name="rest_code_3a17d3b427fa447ba8c0d81882e579c6-76" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_3a17d3b427fa447ba8c0d81882e579c6-76"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; type in Ada has a maximum capacity and a
current length.  You instantiate a new package for each different
maximum capacity that you want, producing a different type for each.
You can assign any string smaller than or equal to the maximum length,
and the current length is recorded.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Bounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-4.html"&gt;Ada.Strings.Bounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_66d697c13a22462c96763600443f7607-1" name="rest_code_66d697c13a22462c96763600443f7607-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-2" name="rest_code_66d697c13a22462c96763600443f7607-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-3" name="rest_code_66d697c13a22462c96763600443f7607-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Bounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-4" name="rest_code_66d697c13a22462c96763600443f7607-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-5" name="rest_code_66d697c13a22462c96763600443f7607-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-6" name="rest_code_66d697c13a22462c96763600443f7607-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-7" name="rest_code_66d697c13a22462c96763600443f7607-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-8" name="rest_code_66d697c13a22462c96763600443f7607-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Strings.Bounded.Generic_Bounded_Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Max&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; 128&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-9" name="rest_code_66d697c13a22462c96763600443f7607-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-10" name="rest_code_66d697c13a22462c96763600443f7607-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-10"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;B_String_IO&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt; &lt;span class="nc"&gt;Bounded_IO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;B_String&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;B_String_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-11" name="rest_code_66d697c13a22462c96763600443f7607-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-12" name="rest_code_66d697c13a22462c96763600443f7607-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-12"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="kr"&gt;range&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;)&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-13" name="rest_code_66d697c13a22462c96763600443f7607-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-14" name="rest_code_66d697c13a22462c96763600443f7607-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-14"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-15" name="rest_code_66d697c13a22462c96763600443f7607-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-15"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-16" name="rest_code_66d697c13a22462c96763600443f7607-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-16"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-17" name="rest_code_66d697c13a22462c96763600443f7607-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-18" name="rest_code_66d697c13a22462c96763600443f7607-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;B_String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-19" name="rest_code_66d697c13a22462c96763600443f7607-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-20" name="rest_code_66d697c13a22462c96763600443f7607-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-21" name="rest_code_66d697c13a22462c96763600443f7607-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-22" name="rest_code_66d697c13a22462c96763600443f7607-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-23" name="rest_code_66d697c13a22462c96763600443f7607-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-24" name="rest_code_66d697c13a22462c96763600443f7607-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-25" name="rest_code_66d697c13a22462c96763600443f7607-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-26" name="rest_code_66d697c13a22462c96763600443f7607-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-26"&gt;&lt;/a&gt;         &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-27" name="rest_code_66d697c13a22462c96763600443f7607-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-27"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-28" name="rest_code_66d697c13a22462c96763600443f7607-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-28"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-29" name="rest_code_66d697c13a22462c96763600443f7607-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-29"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-30" name="rest_code_66d697c13a22462c96763600443f7607-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-31" name="rest_code_66d697c13a22462c96763600443f7607-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-31"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Bounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-32" name="rest_code_66d697c13a22462c96763600443f7607-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-33" name="rest_code_66d697c13a22462c96763600443f7607-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-33"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-34" name="rest_code_66d697c13a22462c96763600443f7607-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-34"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-35" name="rest_code_66d697c13a22462c96763600443f7607-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-36" name="rest_code_66d697c13a22462c96763600443f7607-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-36"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Bounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-37" name="rest_code_66d697c13a22462c96763600443f7607-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-37"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-38" name="rest_code_66d697c13a22462c96763600443f7607-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-38"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-39" name="rest_code_66d697c13a22462c96763600443f7607-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-39"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-40" name="rest_code_66d697c13a22462c96763600443f7607-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-40"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;First&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-41" name="rest_code_66d697c13a22462c96763600443f7607-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-41"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-42" name="rest_code_66d697c13a22462c96763600443f7607-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-43" name="rest_code_66d697c13a22462c96763600443f7607-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-44" name="rest_code_66d697c13a22462c96763600443f7607-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-44"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-45" name="rest_code_66d697c13a22462c96763600443f7607-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-45"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-46" name="rest_code_66d697c13a22462c96763600443f7607-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-47" name="rest_code_66d697c13a22462c96763600443f7607-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-47"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-48" name="rest_code_66d697c13a22462c96763600443f7607-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-49" name="rest_code_66d697c13a22462c96763600443f7607-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-50" name="rest_code_66d697c13a22462c96763600443f7607-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-51" name="rest_code_66d697c13a22462c96763600443f7607-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-52" name="rest_code_66d697c13a22462c96763600443f7607-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-53" name="rest_code_66d697c13a22462c96763600443f7607-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-54" name="rest_code_66d697c13a22462c96763600443f7607-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-55" name="rest_code_66d697c13a22462c96763600443f7607-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-56" name="rest_code_66d697c13a22462c96763600443f7607-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-57" name="rest_code_66d697c13a22462c96763600443f7607-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-57"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-58" name="rest_code_66d697c13a22462c96763600443f7607-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-58"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;To_Bounded_String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-59" name="rest_code_66d697c13a22462c96763600443f7607-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-60" name="rest_code_66d697c13a22462c96763600443f7607-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-61" name="rest_code_66d697c13a22462c96763600443f7607-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-61"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-62" name="rest_code_66d697c13a22462c96763600443f7607-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-62"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-63" name="rest_code_66d697c13a22462c96763600443f7607-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-64" name="rest_code_66d697c13a22462c96763600443f7607-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-65" name="rest_code_66d697c13a22462c96763600443f7607-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-66" name="rest_code_66d697c13a22462c96763600443f7607-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-67" name="rest_code_66d697c13a22462c96763600443f7607-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_66d697c13a22462c96763600443f7607-68" name="rest_code_66d697c13a22462c96763600443f7607-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_66d697c13a22462c96763600443f7607-68"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_bounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; type in Ada grows dynamically as needed,
but is not as time efficient as fixed strings or bounded strings.
For this version, we'll use &lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-18-2.html"&gt;Ada.Containers.Vectors&lt;/a&gt; for a
dynamically expending vector, rather than a fixed size vector.&lt;/p&gt;
&lt;p&gt;Operations on &lt;code class="docutils literal"&gt;Unbounded_String&lt;/code&gt; are defined in
&lt;a class="reference external" href="http://www.ada-auth.org/standards/rm12_w_tc1/html/RM-A-4-5.html"&gt;Ada.Strings.Unbounded&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-1" name="rest_code_5c24738c4496413a8c53286f9df66f0b-1" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Strings.Unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-2" name="rest_code_5c24738c4496413a8c53286f9df66f0b-2" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-3" name="rest_code_5c24738c4496413a8c53286f9df66f0b-3" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Integer_Text_Io&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-4" name="rest_code_5c24738c4496413a8c53286f9df66f0b-4" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO.Unbounded_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-5" name="rest_code_5c24738c4496413a8c53286f9df66f0b-5" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Containers.Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-6" name="rest_code_5c24738c4496413a8c53286f9df66f0b-6" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-6"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-7" name="rest_code_5c24738c4496413a8c53286f9df66f0b-7" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-7"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nc"&gt;Unbounded_String_Vectors&lt;/span&gt; &lt;span class="kr"&gt;is new&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-8" name="rest_code_5c24738c4496413a8c53286f9df66f0b-8" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-8"&gt;&lt;/a&gt;     &lt;span class="nc"&gt;Ada.Containers.Vectors&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;Natural&lt;span class="p"&gt;,&lt;/span&gt; Unbounded_String&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-9" name="rest_code_5c24738c4496413a8c53286f9df66f0b-9" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-9"&gt;&lt;/a&gt;   &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-10" name="rest_code_5c24738c4496413a8c53286f9df66f0b-10" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-11" name="rest_code_5c24738c4496413a8c53286f9df66f0b-11" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-11"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;"+"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-12" name="rest_code_5c24738c4496413a8c53286f9df66f0b-12" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-12"&gt;&lt;/a&gt;                &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="kr"&gt;renames&lt;/span&gt; &lt;span class="n"&gt;To_Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-13" name="rest_code_5c24738c4496413a8c53286f9df66f0b-13" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-13"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;subtype&lt;/span&gt; &lt;span class="kt"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String_Vectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-14" name="rest_code_5c24738c4496413a8c53286f9df66f0b-14" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-15" name="rest_code_5c24738c4496413a8c53286f9df66f0b-15" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-15"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-16" name="rest_code_5c24738c4496413a8c53286f9df66f0b-16" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-16"&gt;&lt;/a&gt;                  &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-17" name="rest_code_5c24738c4496413a8c53286f9df66f0b-17" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-17"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Positive&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-18" name="rest_code_5c24738c4496413a8c53286f9df66f0b-18" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-18"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-19" name="rest_code_5c24738c4496413a8c53286f9df66f0b-19" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-19"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-20" name="rest_code_5c24738c4496413a8c53286f9df66f0b-20" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-21" name="rest_code_5c24738c4496413a8c53286f9df66f0b-21" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-21"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-22" name="rest_code_5c24738c4496413a8c53286f9df66f0b-22" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-22"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-23" name="rest_code_5c24738c4496413a8c53286f9df66f0b-23" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-23"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-24" name="rest_code_5c24738c4496413a8c53286f9df66f0b-24" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-24"&gt;&lt;/a&gt;         &lt;span class="kr"&gt;exit&lt;/span&gt; &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-25" name="rest_code_5c24738c4496413a8c53286f9df66f0b-25" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-25"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-26" name="rest_code_5c24738c4496413a8c53286f9df66f0b-26" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-26"&gt;&lt;/a&gt;          &lt;span class="c1"&gt;-- The pattern can be longer than one character.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-27" name="rest_code_5c24738c4496413a8c53286f9df66f0b-27" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-27"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-28" name="rest_code_5c24738c4496413a8c53286f9df66f0b-28" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-28"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-29" name="rest_code_5c24738c4496413a8c53286f9df66f0b-29" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-29"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Num_Parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-30" name="rest_code_5c24738c4496413a8c53286f9df66f0b-30" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-30"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Append&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Unbounded_Slice&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-31" name="rest_code_5c24738c4496413a8c53286f9df66f0b-31" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-32" name="rest_code_5c24738c4496413a8c53286f9df66f0b-32" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-32"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;return&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-33" name="rest_code_5c24738c4496413a8c53286f9df66f0b-33" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-33"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-34" name="rest_code_5c24738c4496413a8c53286f9df66f0b-34" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-35" name="rest_code_5c24738c4496413a8c53286f9df66f0b-35" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-35"&gt;&lt;/a&gt;   &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-36" name="rest_code_5c24738c4496413a8c53286f9df66f0b-36" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-36"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;Unbounded_String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-37" name="rest_code_5c24738c4496413a8c53286f9df66f0b-37" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-37"&gt;&lt;/a&gt;                               &lt;span class="nv"&gt;V&lt;/span&gt;&lt;span class="p"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-38" name="rest_code_5c24738c4496413a8c53286f9df66f0b-38" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-38"&gt;&lt;/a&gt;      &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Natural&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-39" name="rest_code_5c24738c4496413a8c53286f9df66f0b-39" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-39"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-40" name="rest_code_5c24738c4496413a8c53286f9df66f0b-40" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-40"&gt;&lt;/a&gt;      &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;": """&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-41" name="rest_code_5c24738c4496413a8c53286f9df66f0b-41" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-41"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;First_Index&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Last_Index&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-42" name="rest_code_5c24738c4496413a8c53286f9df66f0b-42" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-42"&gt;&lt;/a&gt;         &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-43" name="rest_code_5c24738c4496413a8c53286f9df66f0b-43" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-43"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    Part "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;": """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-44" name="rest_code_5c24738c4496413a8c53286f9df66f0b-44" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-44"&gt;&lt;/a&gt;         &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-45" name="rest_code_5c24738c4496413a8c53286f9df66f0b-45" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-45"&gt;&lt;/a&gt;      &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-46" name="rest_code_5c24738c4496413a8c53286f9df66f0b-46" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-46"&gt;&lt;/a&gt;   &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;Print_UBS_Vector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-47" name="rest_code_5c24738c4496413a8c53286f9df66f0b-47" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-48" name="rest_code_5c24738c4496413a8c53286f9df66f0b-48" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-48"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!|I am fine!|How are you?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-49" name="rest_code_5c24738c4496413a8c53286f9df66f0b-49" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-49"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-50" name="rest_code_5c24738c4496413a8c53286f9df66f0b-50" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-50"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;--  Empty string.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-51" name="rest_code_5c24738c4496413a8c53286f9df66f0b-51" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-51"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-52" name="rest_code_5c24738c4496413a8c53286f9df66f0b-52" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-52"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;--  Just one  of pattern.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-53" name="rest_code_5c24738c4496413a8c53286f9df66f0b-53" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-53"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-54" name="rest_code_5c24738c4496413a8c53286f9df66f0b-54" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-54"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"||"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;--  Just two of pattern.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-55" name="rest_code_5c24738c4496413a8c53286f9df66f0b-55" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-55"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-56" name="rest_code_5c24738c4496413a8c53286f9df66f0b-56" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-56"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"one"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;--  Just one part.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-57" name="rest_code_5c24738c4496413a8c53286f9df66f0b-57" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-57"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"|"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-58" name="rest_code_5c24738c4496413a8c53286f9df66f0b-58" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-58"&gt;&lt;/a&gt;   &lt;span class="c1"&gt;-- The delimiter doesn't have to be one character.&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-59" name="rest_code_5c24738c4496413a8c53286f9df66f0b-59" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-59"&gt;&lt;/a&gt;   &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unbounded_String&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"foo&amp;lt;=&amp;gt;bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-60" name="rest_code_5c24738c4496413a8c53286f9df66f0b-60" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-60"&gt;&lt;/a&gt;   &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-61" name="rest_code_5c24738c4496413a8c53286f9df66f0b-61" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-62" name="rest_code_5c24738c4496413a8c53286f9df66f0b-62" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-62"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-63" name="rest_code_5c24738c4496413a8c53286f9df66f0b-63" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-63"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-64" name="rest_code_5c24738c4496413a8c53286f9df66f0b-64" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-64"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-65" name="rest_code_5c24738c4496413a8c53286f9df66f0b-65" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-65"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-66" name="rest_code_5c24738c4496413a8c53286f9df66f0b-66" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-66"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-67" name="rest_code_5c24738c4496413a8c53286f9df66f0b-67" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-67"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-68" name="rest_code_5c24738c4496413a8c53286f9df66f0b-68" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-68"&gt;&lt;/a&gt;   &lt;span class="n"&gt;Print_UBS_Vector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_5c24738c4496413a8c53286f9df66f0b-69" name="rest_code_5c24738c4496413a8c53286f9df66f0b-69" href="https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/#rest_code_5c24738c4496413a8c53286f9df66f0b-69"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;split_unbounded&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;S1: "Hello, World!|I am fine!|How are you?"
    Part 1: "Hello, World!"
    Part 2: "I am fine!"
    Part 3: "How are you?"
S2: ""
    Part 1: ""
S3: "|"
    Part 1: ""
    Part 2: ""
S4: "||"
    Part 1: ""
    Part 2: ""
    Part 3: ""
S5: "one"
    Part 1: "one"
S6: "foo&amp;lt;=&amp;gt;bar"
    Part 1: "foo"
    Part 2: "bar"
&lt;/pre&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ada</category><category>programming</category><category>splitting strings</category><category>splitting strings in ada</category><guid>https://tkurtbond.github.io/posts/2022/08/05/splitting-strings-on-a-delimiter-in-the-ada-programming-language/</guid><pubDate>Fri, 05 Aug 2022 15:10:39 GMT</pubDate></item><item><title>Using the old version of Ada Mode for Emacs</title><link>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2022-12-06 14:33:55 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of things to like about the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language;
it seems to have a solid core of users, enough to support multiple
commercial implementations and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Free_software"&gt;free/libre software&lt;/a&gt; implementation
that is part of the &lt;a class="reference external" href="https://gcc.gnu.org/"&gt;GNU Compiler Collection&lt;/a&gt;.  I occasionally use it
myself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However:&lt;/strong&gt; I'm sure that the current version of &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; for
&lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; (available as an &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;ELPA&lt;/a&gt; &lt;a class="reference external" href="https://elpa.gnu.org/packages/ada-mode.html"&gt;package&lt;/a&gt;, and thus not included in
&lt;span class="app"&gt;Emacs&lt;/span&gt; itself), which provides smart editing for the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;
programming language, and uses an external parser for the indentation,
fontification&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#fontification" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;, and navigation engine, is wonderful
if you can get it working, but I have &lt;strong&gt;never&lt;/strong&gt; been able to get it to
work.  My most recent try was today on Fedora 36 using GNAT 12.1.1
20220507 (Red Hat 12.1.1-1).&lt;/p&gt;
&lt;p&gt;Here's what happened when I tried to build the Ada code for the
parser, which is supplied as part of the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;ada-mode&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ ./build.sh
ada_mode_wisi_parse.gpr:44:26: warning: object directory "obj" not found
Setup
   [mkdir]        object directory for project Ada_Mode_Wisi_Parse
Compile
   [Ada]          ada_mode_wisi_lalr_parse.ads
   [Ada]          ada_mode_wisi_lr1_parse.ads
   [Ada]          run_ada_lalr_parse.ads
   [Ada]          run_ada_lr1_parse.ads
   [Ada]          gpr_mode_wisi_parse.ads
   [Ada]          run_gpr_parse.ads
   [Ada]          gpr_query.adb
   [C]            wisitoken_grammar_re2c.c
   [C]            ada_re2c.c
   [C]            gpr_re2c.c
   [Ada]          ada_process_actions.adb
   [Ada]          ada_process_lr1_main.adb
   [Ada]          gen_run_wisi_lr_text_rep_parse.adb
   [Ada]          run_wisi_common_parse.adb
   [Ada]          wisi.adb
gnatcoll-sql.adb:742:07: error: ambiguous expression (cannot resolve "Append")
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:280, instance at gnatcoll-sql.ads:1109
gnatcoll-sql.adb:742:07: error: possible interpretation at a-coinve.ads:270, instance at gnatcoll-sql.ads:1109

   compilation of gpr_query.adb failed

gprbuild: *** compilation phase failed&lt;/pre&gt;
&lt;p&gt;Sigh.  Without the external parser the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; is
completely unworkable: it doesn't even do indentation correctly, much
less do fontification.&lt;/p&gt;
&lt;p&gt;However, when I did some Ada work a number of years ago, I was ok
with the version that used to be in &lt;span class="app"&gt;Emacs&lt;/span&gt; itself.  So I dug it
out of the &lt;a class="reference external" href="https://savannah.gnu.org/git/?group=emacs"&gt;Emacs git repository&lt;/a&gt; at &lt;a class="reference external" href="https://savannah.gnu.org"&gt;savannah.gnu.org&lt;/a&gt;.  Basically,
I cloned the git repository and then figured out what commit it was
deleted in by doing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git rev-list HEAD -n 1 -- lisp/progmodes/ada-mode.el
a13c64204c8ead966789abf8efe176e4f2d4f599&lt;/pre&gt;
&lt;p&gt;Then I checked out the files involved:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ git checkout a13c64204c8ead966789abf8efe176e4f2d4f599^ lisp/progmodes/ada-mode.el lisp/progmodes/ada-prj.el lisp/progmodes/ada-stmt.el lisp/progmodes/ada-xref.el doc/misc/ada-mode.texi&lt;/pre&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;^&lt;/code&gt; at the end of the commit hash says to get the previous
commit.&lt;/p&gt;
&lt;p&gt;You'll also need &lt;span class="file"&gt;doc/docstyle.texi&lt;/span&gt; and
&lt;span class="file"&gt;doc/doclicense.texi&lt;/span&gt; if you want to build documentation from
&lt;span class="file"&gt;ada-mode.texi&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;And I've put the files in a &lt;a class="reference external" href="https://tkurtbond.github.io/emacs/old-ada-mode.zip"&gt;zip file&lt;/a&gt; for anybody who is in the same
situation as I was, along with the generated documentation files
&lt;span class="file"&gt;.info&lt;/span&gt;, &lt;span class="file"&gt;.html&lt;/span&gt;, and &lt;span class="file"&gt;.pdf&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Just put them somewhere on your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;load-path&lt;/span&gt;&lt;/code&gt; and add &lt;code class="docutils literal"&gt;(autoload
&lt;span class="pre"&gt;'ada-mode&lt;/span&gt; &lt;span class="pre"&gt;"ada-mode")&lt;/span&gt;&lt;/code&gt; to your emacs config file.&lt;/p&gt;
&lt;p&gt;I'm sure the current &lt;a class="reference external" href="https://www.nongnu.org/ada-mode/"&gt;Ada Mode&lt;/a&gt; has a lot more useful features, and
I'd love to use it, but
this at least lets me edit with automatic indentation, formatting, and
fontification.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="fontification" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;âFontificationâ is the process of displaying source code with
different font properties (such as color and typeface) for
differing syntactic roles.  &lt;a class="reference external" href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; and many other editors do this
to make it easier to distinguish different parts of the source
code, to help prevent errors.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;!--  --&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ada</category><category>ada-mode</category><category>ada-mode.el</category><category>emacs</category><category>free/libre software</category><guid>https://tkurtbond.github.io/posts/2022/07/09/using-the-old-version-of-ada-mode-for-emacs/</guid><pubDate>Sun, 10 Jul 2022 02:20:40 GMT</pubDate></item></channel></rss>