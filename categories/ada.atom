<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about ada)</title>
  <id>https://tkurtbond.github.io/categories/ada.atom</id>
  <updated>2021-05-19T20:55:22Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/ada.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/ada/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Failing at Ada Again</title>
    <id>https://tkurtbond.github.io/posts/2019/11/10/failing-at-ada-again/</id>
    <updated>2019-11-10T16:24:35-05:00</updated>
    <published>2019-11-10T16:24:35-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2019/11/10/failing-at-ada-again/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Back on May 20th, 2019 I ordered a copy of &lt;a class="reference external" href="https://www.amazon.com/gp/product/110742481X/"&gt;Programming in Ada&lt;/a&gt; by
John Barnes and spent some time reading it and working with Ada.  I
get interested again in Ada &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/07/24/2003-07-24-ada-cohen/"&gt;periodically&lt;/a&gt;.  In theory, I ought to like
programming in Ada â€” it's one of the last remaining widely used members
of the Pascal language family, which I like.  There is a distribution
of the &lt;a class="reference external" href="https://www.adacore.com/download"&gt;GNAT Community Edition&lt;/a&gt; for macOS which bundles the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GNAT"&gt;GNAT&lt;/a&gt; Ada
compiler and some useful libraries.  But I could never get
comfortable.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;GNAT Community Edition for macOS doesn't include GtkAda, so I
couldn't easily write GUI programs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Getting programming libraries was back to the old download and
install it from scratch yourself method.  I find it much easier to
use systems like Chicken Scheme's &lt;a class="reference external" href="http://wiki.call-cc.org/chicken-projects/egg-index-5.html"&gt;Eggs Unlimited&lt;/a&gt; to find and
install software, or &lt;a class="reference external" href="https://ocaml.org/"&gt;OCaml&lt;/a&gt;'s &lt;a class="reference external" href="https://opam.ocaml.org/"&gt;opam&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://brew.sh"&gt;Brew&lt;/a&gt;, a package manager for macOS, doesn't include GNAT and
GtkAda. The case is better in &lt;a class="reference external" href="https://www.macports.org/"&gt;MacPorts&lt;/a&gt; and much better on Fedora,
but not good on Ubuntu.  I think there are are fewer packaged Ada
libraries across the open source Unixes in general.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lack of a garbage collector is annoying.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The type system is strict and not very flexible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And especially irritating to me, I tried using  the Ada mode on GNU &lt;a class="reference external" href="https://elpa.gnu.org/"&gt;Elpa&lt;/a&gt;
and it didn't indent Ada code properly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think in my current programming environment using Ada is still a
difficult task.&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="ada" label="ada"/>
  </entry>
  <entry>
    <title>GtkAda and Ada; Recent Listening and Viewing</title>
    <id>https://tkurtbond.github.io/posts/2005/06/07/2005-06-07/</id>
    <updated>2005-06-07T00:00:00-05:00</updated>
    <published>2005-06-07T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2005/06/07/2005-06-07/"/>
    <summary type="html">&lt;div&gt;&lt;div class="section" id="gtkada-and-ada"&gt;
&lt;h2&gt;GtkAda and Ada&lt;/h2&gt;
&lt;p&gt;Using GNAT 3.15p with GtkAda-2.4.0 on Windows XP, when I wanted to
switch from using &lt;code class="docutils literal"&gt;Gtk.Menu.Popup&lt;/code&gt; to using a user instantiated
version of &lt;code class="docutils literal"&gt;Gtk.Menu.User_Menu_Popup.Popup&lt;/code&gt; I tried to switch from
using &lt;code class="docutils literal"&gt;Menu&lt;/code&gt; of type &lt;code class="docutils literal"&gt;Gtk_Menu&lt;/code&gt; for the first parameter to using
&lt;code class="docutils literal"&gt;Gtk_Menu_Record &lt;span class="pre"&gt;(Menu.all)'Access&lt;/span&gt;&lt;/code&gt; because gnatmake says:&lt;/p&gt;
&lt;pre class="literal-block"&gt;access to class-wide argument not allowed here
"Popup" is not a primitive operation of
"Gtk_Menu_Record"&lt;/pre&gt;
&lt;p&gt;I suppose that is because when the package is instantiated it's not in
the same scope as the original declaration of &lt;code class="docutils literal"&gt;Gtk_Menu_Record&lt;/code&gt; so it
can't be a primitive operation of that type. It's annoying, though.
Anyway, I never figured out the problem completely before having to
move on to something else.&lt;/p&gt;
&lt;p&gt;I never did get &lt;code class="docutils literal"&gt;Gtk.Menu.User_Menu_Popup.Popup&lt;/code&gt; working properly,
though.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recent-listening"&gt;
&lt;h2&gt;Recent Listening&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Blue Blood&lt;/em&gt;, by Edward Conlon; performed by Tom Stechschulte;
Recorded Books, 2004.  Very interesting memoir of a NYPD cop in the late
1990s and early 2000s.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="recent-viewing"&gt;
&lt;h2&gt;Recent Viewing&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0164984/"&gt;Zatoichi sekisho yaburi&lt;/a&gt;, aka &lt;em&gt;Adventures of a Blind
Man&lt;/em&gt;, 1964. Directed by Kimiyoshi Yasuda, writing by Shozaburo Asai
and Kan Shimozawa.Includes another glimpse into Zatoichi's background.
Good.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="gtkada" label="gtkada"/>
    <category term="old-blog" label="old blog"/>
    <category term="recent-listening" label="recent listening"/>
    <category term="recent-viewing" label="recent viewing"/>
  </entry>
  <entry>
    <title>Recent Reading; Ada and doing things right</title>
    <id>https://tkurtbond.github.io/posts/2004/07/28/2004-07-28/</id>
    <updated>2004-07-28T00:00:00-05:00</updated>
    <published>2004-07-28T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2004/07/28/2004-07-28/"/>
    <summary type="html">&lt;div&gt;&lt;div class="section" id="recent-reading"&gt;
&lt;h2&gt;Recent Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Nebula Winners Twelve&lt;/em&gt;, ed. Gordon R. Dickson, copyright 1978 by
Science Fiction Writers of America; Harper and Row, 1987.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;A Crowd of Shadows&lt;/em&gt;, by Charles L. Grant. Nebula Winner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Breath's a Ware That Will Not Keep&lt;/em&gt;, by Thomas F. Monteleone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Tricentennial&lt;/em&gt;, by Joe Haldeman.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;In the Bowl&lt;/em&gt;, by John Varley.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;The Academic Viewpoint&lt;/em&gt;, by James Gunn.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;The Bicentennial Man&lt;/em&gt;, by Isaac Asimov. Nebula Winner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Houston, Houston, Do You Read?&lt;/em&gt;, by James Triptree, Jr. Nebula
Winner.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are some of short Nebula winners and runners-up from 1976.  A
good collection; all the stories are still worth reading.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ada-and-doing-things-right"&gt;
&lt;h2&gt;Ada and doing things right&lt;/h2&gt;
&lt;p&gt;I enjoy reading the newsgroup &lt;a class="reference external" href="news:comp.lang.ada"&gt;comp.lang.ada&lt;/a&gt;,
because there are number of people there who are doing commercial work
with very high quality requirements and interesting problems to solve.
It's nice to listen to folks who really work to get things &lt;em&gt;right&lt;/em&gt;.
And sometimes it's just a relief to read code that's written with a
clear syntax.&lt;/p&gt;
&lt;p&gt;Speaking of Ada 200Y, Martin Dowie has &lt;a class="reference external" href="http://www.martin.dowie.btinternet.co.uk/"&gt;back-port to Ada 95&lt;/a&gt; of some of the new &lt;a class="reference external" href="http://groups.google.com/groups?dq=&amp;amp;hl=en&amp;amp;lr=&amp;amp;ie=UTF-8&amp;amp;threadm=ce8pjj%247an%241%40titan.btinternet.com&amp;amp;prev=/groups%3Fhl%3Den%26lr%3D%26ie%3DUTF-8%26group%3Dcomp.lang.ada"&gt;Ada
200Y packages&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;AI-248 - &lt;code class="docutils literal"&gt;Ada.Directories.*&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI-286 - &lt;code class="docutils literal"&gt;Ada.Assertions&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI-296 - &lt;code class="docutils literal"&gt;Ada.Numerics.Generic_&lt;/code&gt;&lt;cite&gt;[Complex|Real]&lt;/cite&gt;&lt;code class="docutils literal"&gt;_Arrays&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI-301 - &lt;code class="docutils literal"&gt;Ada.&lt;/code&gt;&lt;cite&gt;(Wide_)&lt;/cite&gt;&lt;code class="docutils literal"&gt;Text_IO.&lt;/code&gt;&lt;cite&gt;(Wide_)&lt;/cite&gt;&lt;code class="docutils literal"&gt;Unbounded_IO&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI-302 - &lt;code class="docutils literal"&gt;Ada.Containers.*&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI-346 - &lt;code class="docutils literal"&gt;Ada.Numerics.Generic_&lt;/code&gt;&lt;cite&gt;[Complex|Real]&lt;/cite&gt;&lt;code class="docutils literal"&gt;_Arrays.Generic_Roots&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AI-351 - &lt;code class="docutils literal"&gt;Ada.Calendar.*&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="old-blog" label="old blog"/>
    <category term="recent-reading" label="recent reading"/>
  </entry>
  <entry>
    <title>Ada as a Second Language, Second Edition</title>
    <id>https://tkurtbond.github.io/posts/2003/07/24/2003-07-24-ada-cohen/</id>
    <updated>2003-07-24T00:00:00-05:00</updated>
    <published>2003-07-24T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2003/07/24/2003-07-24-ada-cohen/"/>
    <summary type="html">&lt;p&gt;I'm still working my way slowly through Cohen's &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/07/09/2003-07-09/#cohen-ada95"&gt;Ada as a Second
Language, Second Edition&lt;/a&gt;.
Ada takes a much more conservative approach to reliability
than any of the BCPL/C languages (including Java), and in some cases
more even than the Pascal/Modula/Oberon languages, so there are more
restrictions on how some things are treated.  Looking carefully at the
language, I can understand the reasons for the restrictions, but
abiding by them takes more up-front planning than is promoted by the
BCPL/C languages.  Is the additional effort worth the extra reliability
for general purpose applications programming? That's what I hope to
find out.  It's easy to see, now that I'm back to using a language that
doesn't include garbage collection as part of the standard, how much
easier garbage collection makes interface design;
&lt;a class="reference external" href="http://www.m3.org/"&gt;Modula-3&lt;/a&gt; or Java have a definite advantage here.&lt;/p&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="old-blog" label="old blog"/>
  </entry>
  <entry>
    <title>GtkAda and Recent Reading</title>
    <id>https://tkurtbond.github.io/posts/2003/07/03/2003-07-03-gtkada-reading/</id>
    <updated>2003-07-03T00:00:00-05:00</updated>
    <published>2003-07-03T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2003/07/03/2003-07-03-gtkada-reading/"/>
    <summary type="html">&lt;div&gt;&lt;div class="section" id="gtkada"&gt;
&lt;h2&gt;GtkAda&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://libre.act-europe.fr/GtkAda/"&gt;GtkAda&lt;/a&gt; folks have
released a new version of GtkAda for Gtk+-2.2 and it includes an
easily installed binary release.  It looks to me like the easiest way
to get started writing cross-platform Gtk+ programs is to install &lt;a class="reference external" href="ftp://ftp.cs.nyu.edu/pub/gnat/3.15p/winnt/gnat-3.15p-nt.exe"&gt;GNAT
3.15p&lt;/a&gt;
and &lt;a class="reference external" href="ftp://ftp.cs.nyu.edu/pub/gnat/3.15p/winnt/gnatwin-3.15p.exe"&gt;GNATWIN&lt;/a&gt; then
install the new &lt;a class="reference external" href="http://libre.act-europe.fr/GtkAda/gtkada-2.2.0.exe"&gt;GtkAda&lt;/a&gt; release.  Reasonably complete
examples are included in the distribution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recent-reading"&gt;
&lt;h2&gt;Recent Reading&lt;/h2&gt;
&lt;ul class="simple" id="more-earthsea-tales"&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;The Other Wind&lt;/cite&gt; and &lt;cite&gt;Tales from Earthsea&lt;/cite&gt;, by Ursula K. LeGuin.  I
was very glad to see that there were still &lt;cite class="series"&gt;Earthsea&lt;/cite&gt; tales that
LeGuin wanted to tell.  Both of these books are quite good.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple" id="college"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.epiphyte.net/SF/college-of-magics.html"&gt;A College of Magics&lt;/a&gt; by Caroline Stevermer.  This is a very entertaining
&lt;a class="reference external" href="http://www.wikipedia.org/wiki/Fictional_country"&gt;Ruritanian&lt;/a&gt;
fantasy in an alternate world with a touch of magic.  I've enjoyed her
other works as well: &lt;cite&gt;The Serpent's Egg&lt;/cite&gt;, &lt;cite&gt;When the King Comes Home&lt;/cite&gt;,
and &lt;cite&gt;Sorcery and Cecelia&lt;/cite&gt; (co-written with Patricia C. Wrede).  I
haven't read &lt;cite&gt;River Rats&lt;/cite&gt; yet, though.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;The Haunted Monastery, a Chinese Detective Story&lt;/cite&gt;, by Robert van
Gulik.  An enjoyable &lt;a class="reference external" href="http://www.friesian.com/ross/dee.htm"&gt;Judge Dee&lt;/a&gt; mystery.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="gtkada" label="gtkada"/>
    <category term="old-blog" label="old blog"/>
    <category term="recent-reading" label="recent reading"/>
  </entry>
  <entry>
    <title>Recent Reading; Computing: Ada</title>
    <id>https://tkurtbond.github.io/posts/2003/06/24/2003-06-24/</id>
    <updated>2003-06-24T00:00:00-05:00</updated>
    <published>2003-06-24T00:00:00-05:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2003/06/24/2003-06-24/"/>
    <summary type="html">&lt;div&gt;&lt;div class="section" id="recent-reading"&gt;
&lt;h2&gt;Recent Reading&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;Honorable Company&lt;/cite&gt; by Allan Mallinson.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;The Haunted Monastery&lt;/cite&gt; by Robert Hans Van Gulik.  This is one of
Gulik's &lt;a class="reference external" href="http://www.friesian.com/ross/dee.htm"&gt;Judge Dee&lt;/a&gt;
mysteries, set in ancient China.  Very good.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;Ada 95: The Craft of Object-Oriented Programming&lt;/cite&gt; by John English,
&lt;a class="reference external" href="http://www.it.bton.ac.uk/staff/je/adacraft/"&gt;online edition&lt;/a&gt;. A
good introduction to Ada 95.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="computing-ada"&gt;
&lt;h2&gt;Computing: Ada&lt;/h2&gt;
&lt;p&gt;I've been looking at &lt;a class="reference external" href="http://libre.act-europe.fr/GtkAda/"&gt;GtkAda&lt;/a&gt;,
an Ada binding for Gtk+.  It's pretty complete, and is portable between
Unix and MS Windows, with a MacOS X version in the works.  An
&lt;a class="reference external" href="http://lists.act-europe.fr/pipermail/gtkada/2003-May/002223.html"&gt;explanation&lt;/a&gt; of how to create
the environment for you'll need for using recent versions (Gtk+-2.2.x
based, from CVS) with recent versions of GCC under MS Windows is
&lt;a class="reference external" href="http://lists.act-europe.fr/pipermail/gtkada/2003-May/002223.html"&gt;available&lt;/a&gt;.  (Update: a new
&lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/07/03/2003-07-03-gtkada-reading/"&gt;binary release&lt;/a&gt; makes
things much simpler.)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</summary>
    <category term="ada" label="ada"/>
    <category term="gtkada" label="gtkada"/>
    <category term="old-blog" label="old blog"/>
    <category term="recent-reading" label="recent reading"/>
  </entry>
</feed>
