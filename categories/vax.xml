<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about vax)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/vax.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2024 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Mon, 15 Jul 2024 18:28:32 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How the LBL Software Tools system organized its source files</title><link>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;One of the things I've always found interesting about the LBL Software
Tools VOS was how its source files were structured.  I'll include here
page 10 of the release notes from the release on the DECUS LT86 tape:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-1"&gt;&lt;/a&gt;                            Release Notes
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-4"&gt;&lt;/a&gt;                        Source File Structure
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-6"&gt;&lt;/a&gt;The  source  code  for  `tool' is contained in a file [...SRC]tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-7"&gt;&lt;/a&gt;(if   the   tool   is   portable   across   operating   systems)    or
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-8"&gt;&lt;/a&gt;[...VMS]tool.tcs  (if  it  is  an VMS-specific tool).  This TCS source
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-9"&gt;&lt;/a&gt;file contains an edit history of all changes made to the source.   The
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-10"&gt;&lt;/a&gt;output  of  the  `get' utility operating on a `.tcs' file results in a
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-11"&gt;&lt;/a&gt;file (tool.w) which is all of the  environment  necessary  to  rebuild
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-12"&gt;&lt;/a&gt;the  tool,  provided  that the VOS is operational.  The tool.w file is
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-13"&gt;&lt;/a&gt;an archive containing:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-15"&gt;&lt;/a&gt;  1. All of the files "included" by the ratfor source code.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-16"&gt;&lt;/a&gt;  2. The ratfor source file, tool.r.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-17"&gt;&lt;/a&gt;  3. The format input for the manual entry, tool.fmt.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-18"&gt;&lt;/a&gt;  4. And optionally,  any  extra  definition  files  needed  to  build
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-19"&gt;&lt;/a&gt;     alternate versions of the tool (eg. sh =&amp;gt; hsh).
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-20"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-21"&gt;&lt;/a&gt;As  an  example,  suppose  that  you  wish  to  change  the subroutine
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-22"&gt;&lt;/a&gt;"module" in "tool".  The suggested scenario is as follows:
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-24"&gt;&lt;/a&gt;   $ !Fetch the file tool.tcs from the appropriate directory in the container
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-25"&gt;&lt;/a&gt;   $ !file on tape into st_src
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-26"&gt;&lt;/a&gt;   $ hsh
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-27"&gt;&lt;/a&gt;   % get ~src/tool.tcs tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-28"&gt;&lt;/a&gt;   % ar xv tool.w
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-29"&gt;&lt;/a&gt;   % ar xv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-30"&gt;&lt;/a&gt;   % ed module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-31"&gt;&lt;/a&gt;   (make changes and write file)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-32"&gt;&lt;/a&gt;   % ar uv tool.r module
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-33"&gt;&lt;/a&gt;   % rc -v tool.r
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-34"&gt;&lt;/a&gt;   % (test out new tool.  repeat last three steps until satisfied.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-35"&gt;&lt;/a&gt;   % ed tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-36"&gt;&lt;/a&gt;   (modify writeup to reflect changes)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-37"&gt;&lt;/a&gt;   % ar uv tool.w tool.r tool.fmt
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-38"&gt;&lt;/a&gt;   % cp tool.exe ~usr/tool.exe
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-39"&gt;&lt;/a&gt;   % delta tool.w ~src/tool.tcs
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-40"&gt;&lt;/a&gt;   (Identify in the comments the reason for the changes,
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-41"&gt;&lt;/a&gt;   and which modules changed.)
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-42"&gt;&lt;/a&gt;   % format tool.fmt &amp;gt;tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-43"&gt;&lt;/a&gt;   % ar uv ~man/s1 tool
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-44"&gt;&lt;/a&gt;   % asam &amp;lt;~man/s1 | sort &amp;gt;~man/i1
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-45"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-46"&gt;&lt;/a&gt;Placing tool.exe in ~usr  causes  the  shell  to  find  your  modified
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-47"&gt;&lt;/a&gt;version  of  "tool"  rather  than  the  distributed one.  The last two
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-48"&gt;&lt;/a&gt;commands  above  cause  the  manual  entry  for  `tool'  to  correctly
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-49"&gt;&lt;/a&gt;correspond to the utility itself.
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-50"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-51"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-52"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-53"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-55"&gt;&lt;/a&gt;
&lt;a id="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" name="rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56" href="https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/#rest_code_63acb77136fb4cb99dc7fe9da9cd8921-56"&gt;&lt;/a&gt;                                 -10-
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(It should be &lt;code&gt;% get ~src/tool.tcs &amp;gt;tool.w&lt;/code&gt; with a â&amp;gt;â
before &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt; in the above procedure.  Otherwise the contents
are echoed to the terminal instead of being written to &lt;code class="file docutils literal"&gt;tool.w&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;So, all the source files (source code &lt;em&gt;and&lt;/em&gt; documentation) are stored
in an archive file, which contains another archive file that has just
the ratfor source, from which you extract the modules you want to work
on, and at the end update the archives in the reverse order!  This
made organizing all the source much simpler, especially considering
some of the porting targets for this software didn't have hierarchical
directory structures, only flat directories.  So when moving around
parts of the system, like when you were preparing the distribution,
you normally only dealt with the top level archives, the &lt;code class="file docutils literal"&gt;.TCS&lt;/code&gt;
files, and only worked directly with the files that were contained
within that archive and its child archives if you had to make a change
to the source files.  Very clever!&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls" src="https://tkurtbond.github.io/images/Russian-Matroshka.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Russian-Matroshka.jpg"&gt;Source 1&lt;/a&gt;)&lt;/p&gt;
&lt;img alt="Nesting Russian Matroshka dolls, opened" src="https://tkurtbond.github.io/images/Russian-Matroshka-opened.jpg"&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matryoshka_doll#/media/File:Matryoshka_transparent.png"&gt;Source 2&lt;/a&gt;)&lt;/p&gt;</description><category>decus</category><category>lbltools</category><category>lt86 tape</category><category>source file structure</category><category>swtools</category><category>vax</category><category>vms</category><category>vos</category><guid>https://tkurtbond.github.io/posts/2024/07/03/how-the-lbl-software-tools-system-organized-its-source-files/</guid><pubDate>Wed, 03 Jul 2024 20:20:40 GMT</pubDate></item><item><title>Software Tools</title><link>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;When I was in college in the 1980s the school I was at used Digital
Equipment Corporation VAXes running VMS, and didn't have any Unix
machines.  I was quite interested in Unix and the Unix philosophy, but
was frustrated by my lack of access to Unix machines.  However,
Brian W. Kernighan and P. J. Plauger wrote a couple of books about
writing tools in the Unix style: &lt;cite&gt;Software Tools&lt;/cite&gt; was in
published in 1976 and used Fortran as its portable implementation
language, while &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; was published in
1981 and used Pascal.&lt;/p&gt;
&lt;img alt="/images/swtools.jpeg" src="https://tkurtbond.github.io/images/swtools.jpeg"&gt;
&lt;p&gt;Here is a quote repeated on each book's cover:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good Programming is not learned from generalities, but by seeing
how significant programs can be made clean, easy to read, easy to
maintain and modify, human-engineered, efficient, and reliable, by
the application of common sense and good programming practices.
Careful study and imitation of good programs leads to better
writing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both books worked through writing software tools that were simpler but
still useful versions of many of the standard Unix tools.&lt;/p&gt;
&lt;p&gt;I got &lt;cite&gt;Software Tools in Pascal&lt;/cite&gt; because I knew Pascal better
than Fortran and worked through implementing each of the programs on
the college's VAX, which taught me a lot about programming and was
significant influence on me.  I later got &lt;cite&gt;Software Tools&lt;/cite&gt;
because I wanted to read the section on implementing the ratfor
processor which that book used to add additional control structures
unavailable in the Fortran of the day.&lt;/p&gt;
&lt;p&gt;I was not the only person who was influenced by these books.
Deborah K. Scherrer, Dennis E. Hall, and Joseph S. Sventek at Lawrence
Berkeley National Laboratory with help from others greatly expanded
the set of programs from the book into an entire Virtual Operating
System (VOS), and founded the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Software_Tools_Users_Group"&gt;Software Tools Users Group&lt;/a&gt; in 1976
to distribute it, eventually leading to ports on over 50 operating
systems.&lt;/p&gt;
&lt;p&gt;Luckily for me VAX/VMS was one of those operating systems, and the
port appeared on various tapes distributed by DECUS, the Digital
Equipment Computer Users' Society.  Luckily MPL Corporation, where I
worked at the time, always got the DECUS tapes and had a Fortran
compiler, so I could install it there.  I found it a very useful and
usable computing environment.&lt;/p&gt;
&lt;p&gt;Anyway, I retain a fondness for that software, known variously as
LBLTOOLS, LBL SWTOOLS, and SWTOOLS VOS, and have begun using the version
from the &lt;a class="reference external" href="https://www.digiater.nl/openvms/decus/zips_vms_attributes/lt86a.zip"&gt;DECUS VAX Languages &amp;amp; Tools SIG tape from 1986&lt;/a&gt;
again on the (emulated) VAX I maintain at work.  This gave me the
opportunity create a &lt;a class="reference external" href="https://tkurtbond.github.io/swtoolsman.pdf"&gt;PDF with the documentation&lt;/a&gt;
for that version, which I'm making available here for the curious.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;âI really enjoyed that book.  The first computer book I read where
I thought my world was larger after reading it.â â C. Paul Bond&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2024-07-15 14:25:36 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</description><category>brian w. kernighan</category><category>decus</category><category>fortran</category><category>lbltools</category><category>lt86 tape</category><category>p.j. plauger</category><category>pascal</category><category>ratfor</category><category>software tools</category><category>swtools</category><category>vax</category><category>vms</category><category>vos</category><guid>https://tkurtbond.github.io/posts/2024/07/03/software-tools/</guid><pubDate>Wed, 03 Jul 2024 13:59:31 GMT</pubDate></item><item><title>Redimensioning formal parameter arrays in OpenVMS BASIC, Revisited</title><link>https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I was working on a program on a VAX today, and needed to redimension
dynamically allocated arrays that are passed to an external function.
I've done this in the past (an &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt;, and the &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/"&gt;old blog
post&lt;/a&gt; that mentions it), but this time I managed to simplify my
solution, and generalize it to work with both lower and upper bounds,
and so the same function would work with multiple VMS BASIC data
types.  Here's the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;.  (How's that for thread
necromancy?)&lt;/p&gt;
&lt;p&gt;I'll include the code in this blog post, too, for ease of reference.
Here's &lt;span class="file"&gt;vax_redim_best.bas&lt;/span&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-1" name="rest_code_50040662bb1547e480cfd0ad0864e165-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-1"&gt;&lt;/a&gt;program vax_redim_best
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-2" name="rest_code_50040662bb1547e480cfd0ad0864e165-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-3" name="rest_code_50040662bb1547e480cfd0ad0864e165-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-4" name="rest_code_50040662bb1547e480cfd0ad0864e165-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-4"&gt;&lt;/a&gt;    record rec
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-5" name="rest_code_50040662bb1547e480cfd0ad0864e165-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-5"&gt;&lt;/a&gt;        string s = 13
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-6" name="rest_code_50040662bb1547e480cfd0ad0864e165-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-6"&gt;&lt;/a&gt;        long   i
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-7" name="rest_code_50040662bb1547e480cfd0ad0864e165-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-7"&gt;&lt;/a&gt;    end record rec
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-8" name="rest_code_50040662bb1547e480cfd0ad0864e165-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-9" name="rest_code_50040662bb1547e480cfd0ad0864e165-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-9"&gt;&lt;/a&gt;    ! Don't declare the parameters, and everything works, even passing
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-10" name="rest_code_50040662bb1547e480cfd0ad0864e165-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-10"&gt;&lt;/a&gt;    ! different types.
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-11" name="rest_code_50040662bb1547e480cfd0ad0864e165-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-11"&gt;&lt;/a&gt;    external sub redim
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-12" name="rest_code_50040662bb1547e480cfd0ad0864e165-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-13" name="rest_code_50040662bb1547e480cfd0ad0864e165-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-13"&gt;&lt;/a&gt;    declare long stat, i
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-14" name="rest_code_50040662bb1547e480cfd0ad0864e165-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-14"&gt;&lt;/a&gt;    i = 1
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-15" name="rest_code_50040662bb1547e480cfd0ad0864e165-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-15"&gt;&lt;/a&gt;    dim rec rec(1 to i)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-16" name="rest_code_50040662bb1547e480cfd0ad0864e165-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-16"&gt;&lt;/a&gt;    print "lbound (rec) at start: "; lbound (rec)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-17" name="rest_code_50040662bb1547e480cfd0ad0864e165-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-17"&gt;&lt;/a&gt;    print "ubound (rec) at start: "; ubound (rec)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-18" name="rest_code_50040662bb1547e480cfd0ad0864e165-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-18"&gt;&lt;/a&gt;    call redim (rec(), 3, 10)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-19" name="rest_code_50040662bb1547e480cfd0ad0864e165-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-19"&gt;&lt;/a&gt;    print "lbound (rec) after redim: "; lbound (rec)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-20" name="rest_code_50040662bb1547e480cfd0ad0864e165-20" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-20"&gt;&lt;/a&gt;    print "ubound (rec) after redim: "; ubound (rec)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-21" name="rest_code_50040662bb1547e480cfd0ad0864e165-21" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-22" name="rest_code_50040662bb1547e480cfd0ad0864e165-22" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-22"&gt;&lt;/a&gt;    dim string s(1 to i)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-23" name="rest_code_50040662bb1547e480cfd0ad0864e165-23" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-23"&gt;&lt;/a&gt;    print "lbound (s) at start: "; lbound (s)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-24" name="rest_code_50040662bb1547e480cfd0ad0864e165-24" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-24"&gt;&lt;/a&gt;    print "ubound (s) at start: "; ubound (s)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-25" name="rest_code_50040662bb1547e480cfd0ad0864e165-25" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-25"&gt;&lt;/a&gt;    call redim (s(), 3, 10)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-26" name="rest_code_50040662bb1547e480cfd0ad0864e165-26" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-26"&gt;&lt;/a&gt;    print "lbound (s) after redim: "; lbound (s)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-27" name="rest_code_50040662bb1547e480cfd0ad0864e165-27" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-27"&gt;&lt;/a&gt;    print "ubound (s) after redim: "; ubound (s)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-28" name="rest_code_50040662bb1547e480cfd0ad0864e165-28" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-29" name="rest_code_50040662bb1547e480cfd0ad0864e165-29" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-29"&gt;&lt;/a&gt;    dim long l(1 to i)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-30" name="rest_code_50040662bb1547e480cfd0ad0864e165-30" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-30"&gt;&lt;/a&gt;    print "lbound (l) at start: "; lbound (l)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-31" name="rest_code_50040662bb1547e480cfd0ad0864e165-31" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-31"&gt;&lt;/a&gt;    print "ubound (l) at start: "; ubound (l)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-32" name="rest_code_50040662bb1547e480cfd0ad0864e165-32" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-32"&gt;&lt;/a&gt;    call redim (l(), 3, 10)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-33" name="rest_code_50040662bb1547e480cfd0ad0864e165-33" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-33"&gt;&lt;/a&gt;    print "lbound (l) after redim: "; lbound (l)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-34" name="rest_code_50040662bb1547e480cfd0ad0864e165-34" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-34"&gt;&lt;/a&gt;    print "ubound (l) after redim: "; ubound (l)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-35" name="rest_code_50040662bb1547e480cfd0ad0864e165-35" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-36" name="rest_code_50040662bb1547e480cfd0ad0864e165-36" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-36"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-37" name="rest_code_50040662bb1547e480cfd0ad0864e165-37" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-37"&gt;&lt;/a&gt;end program ! vax_redim_best
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-38" name="rest_code_50040662bb1547e480cfd0ad0864e165-38" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-39" name="rest_code_50040662bb1547e480cfd0ad0864e165-39" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-39"&gt;&lt;/a&gt;function long redim (long s, long low, long high)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-40" name="rest_code_50040662bb1547e480cfd0ad0864e165-40" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-40"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-41" name="rest_code_50040662bb1547e480cfd0ad0864e165-41" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-41"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-42" name="rest_code_50040662bb1547e480cfd0ad0864e165-42" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-42"&gt;&lt;/a&gt;    external long function bas$rt_dim_bounds (long by value, long by value, long by value)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-43" name="rest_code_50040662bb1547e480cfd0ad0864e165-43" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-43"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-44" name="rest_code_50040662bb1547e480cfd0ad0864e165-44" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-44"&gt;&lt;/a&gt;    r = bas$rt_dim_bounds (loc (s), low, high)
&lt;a id="rest_code_50040662bb1547e480cfd0ad0864e165-45" name="rest_code_50040662bb1547e480cfd0ad0864e165-45" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_50040662bb1547e480cfd0ad0864e165-45"&gt;&lt;/a&gt;end function r ! redim
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll just point out, which I failed to do in the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/HE3L4N4nIJAJ"&gt;old USENET post&lt;/a&gt; or
the &lt;a class="reference external" href="https://groups.google.com/g/comp.os.vms/c/mVWznNVN17U/m/yuOAmQtQBAAJ"&gt;new USENET post&lt;/a&gt;, that you have to use a &lt;strong&gt;variable&lt;/strong&gt; when using
the VMS BASIC &lt;code class="docutils literal"&gt;dim&lt;/code&gt; statement or you get a fatal runtime error.  Ooops.&lt;/p&gt;
&lt;p&gt;So use:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_907c69ed68374999806969808c138a92-1" name="rest_code_907c69ed68374999806969808c138a92-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_907c69ed68374999806969808c138a92-1"&gt;&lt;/a&gt;declare long i
&lt;a id="rest_code_907c69ed68374999806969808c138a92-2" name="rest_code_907c69ed68374999806969808c138a92-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_907c69ed68374999806969808c138a92-2"&gt;&lt;/a&gt;i = 5
&lt;a id="rest_code_907c69ed68374999806969808c138a92-3" name="rest_code_907c69ed68374999806969808c138a92-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_907c69ed68374999806969808c138a92-3"&gt;&lt;/a&gt;dim string s(1 to i) ! Notice that last thing is the variable, i
&lt;a id="rest_code_907c69ed68374999806969808c138a92-4" name="rest_code_907c69ed68374999806969808c138a92-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_907c69ed68374999806969808c138a92-4"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you had said:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_b7418a95cf284379b4f5aaa183469c8a-1" name="rest_code_b7418a95cf284379b4f5aaa183469c8a-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_b7418a95cf284379b4f5aaa183469c8a-1"&gt;&lt;/a&gt;dim string s(1 to 5) ! Notice that last thing is a constant, 5
&lt;a id="rest_code_b7418a95cf284379b4f5aaa183469c8a-2" name="rest_code_b7418a95cf284379b4f5aaa183469c8a-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_b7418a95cf284379b4f5aaa183469c8a-2"&gt;&lt;/a&gt;redim (s, 3, 10)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'd have gotten the following error:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-1" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-1" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-1"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-2" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-2" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-2"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-3" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-3" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-3"&gt;&lt;/a&gt;-BAS-I-FROMOD, In module Y
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-4" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-4" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-4"&gt;&lt;/a&gt;%TRACE-F-TRACEBACK, symbolic stack dump follows
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-5" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-5" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-5"&gt;&lt;/a&gt;module name     routine name                     line       rel PC    abs PC
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-6" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-6" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-7" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-7" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-7"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-8" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-8" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-8"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-9" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-9" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-9"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-10" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-10" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-10"&gt;&lt;/a&gt;-BAS-I-FROFUN, In external function ALT_REDIM
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-11" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-11" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-11"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-12" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-12" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-12"&gt;&lt;/a&gt;                                                           0004B2AA  0004B2AA
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-13" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-13" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-13"&gt;&lt;/a&gt;----- above condition handler called with exception 001A833C:
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-14" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-14" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-14"&gt;&lt;/a&gt;%BAS-F-PROLOSSOR, Internal error in VAX BASIC Run-Time Library.  Please submit an SPR
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-15" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-15" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-15"&gt;&lt;/a&gt;----- end of exception message
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-16" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-16" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-16"&gt;&lt;/a&gt;                                                           0004A352  0004A352
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-17" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-17" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-17"&gt;&lt;/a&gt;                                                           00054E37  00054E37
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-18" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-18" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-18"&gt;&lt;/a&gt;ALT_REDIM       ALT_REDIM                          43      0000002E  00000AC2
&lt;a id="rest_code_f76bae43f375488e8e93c6ef25d9db17-19" name="rest_code_f76bae43f375488e8e93c6ef25d9db17-19" href="https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/#rest_code_f76bae43f375488e8e93c6ef25d9db17-19"&gt;&lt;/a&gt;Y               Y                                  24      0000015D  0000095D
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't actually submit an SPR, of course: you did it to yourself by
using an undocumented VMS BASIC internal runtime function.&lt;/p&gt;
&lt;p&gt;Oh, I don't have access to an Alpha these days, so I haven't tried it
there, but I imagine using something named &lt;code class="docutils literal"&gt;DBASIC$RT_DIM_BOUNDS&lt;/code&gt;
instead of &lt;code class="docutils literal"&gt;DBASIC$RT_DIM&lt;/code&gt; would likely work there.&lt;/p&gt;</description><category>alpha</category><category>basic</category><category>hacks</category><category>usenet</category><category>vax</category><category>vms</category><guid>https://tkurtbond.github.io/posts/2022/02/05/redimensioning-formal-parameter-arrays-in-openvms-basic-revisited/</guid><pubDate>Sat, 05 Feb 2022 21:08:22 GMT</pubDate></item><item><title>VMS Code from the Past</title><link>https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Listening to: Hawkwind, &lt;a class="reference external" href="http://www.freedb.org/freedb_search_fmt.php?cat=rock&amp;amp;id=d50ba50e"&gt;Chronicle of the Black Sword&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've been reading a lot of VMS BASIC &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; source code from the early
1990s &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-2" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; recently, and the one lesson it has taught me is that
refactoring source code is vital for maintainability.  Much of this
source code originated in one program that was copied and edited
whenever a new program was needed, so each new program generally ended
up with a lot of rag-tag odds-and-ends code from the original program
that was not actually needed for the functionality of the new program.
Unfortunately, when one is trying to change some existing
functionality one has to look at each and every program &lt;em&gt;and figure
out if that functionality is actually implemented and used in that
program&lt;/em&gt;, and to do this you have to mentally trace the execution of
the code! The moral? When you copy code, delete everything you don't
actually use! Refactor, refactor, refactor!&lt;/p&gt;
&lt;p&gt;And why didn't we use &lt;code class="docutils literal"&gt;%INCLUDE&lt;/code&gt; more? There are hundress of lines of
external function declarations that are used time and again in several
programs; we should have put them in a couple of include files.&lt;/p&gt;
&lt;p&gt;I really wish VMS Basic allowed &lt;a class="reference external" href="http://groups.google.com/groups?q=tkb+group:comp.os.vms&amp;amp;hl=en&amp;amp;lr=&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;selm=a3db6b24.0305081211.6f867ad0%40posting.google.com&amp;amp;rnum=1"&gt;redimensioning array formal
parameters&lt;/a&gt;, but I understand why it's not allowed.  (Perhaps
there should have been a specific descriptor for arrays that can be
redimensioned?)&lt;/p&gt;
&lt;p&gt;I was shocked to rediscover that there was no way of reliably building
the system from the source code.  MMS was too expensive for us at the
time and if &lt;a class="reference external" href="http://www.madgoat.com/mmk.html"&gt;MMK&lt;/a&gt; existed we
didn't know about it.  We used a bunch of ad-hoc DCL command
procecudures to compile whatever program we were working on (most of
them were all in one source file, and linked against one library of
utility routines) and these were never collected.  So, you couldn't
easily tell if the current set of executables was actually built from
up-to-date source.  Since I've been doing the odd bit of maintenance on
this system every six months or so I finally broke down and created
&lt;code class="docutils literal"&gt;DESCRIP.MMS&lt;/code&gt; files for use with MMK, and I'm much easier in my mind
now.&lt;/p&gt;
&lt;p&gt;There were a number of things in this system that I think were well
done, though, so it hasn't been all pain looking at it again.&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;I'm working with it on an Alpha so I can't call it VAX BASIC
anymore.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="footnote-2" role="doc-footnote"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;The original version of this system ran on PDP-11 running RSTS/E.
I've been involved in two major conversions of systems running on
PDP-11 RSTS/E to VAX/VMS, both using the POISE DMS-Plus on both RSTS/E and
VMS, with extensive homegrown applications written in VMS BASIC and
using the POISE SPL API.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;section id="section-1"&gt;
&lt;h2&gt;2014-11-03&lt;/h2&gt;
&lt;p&gt;Here's the text of my post to comp.os.vms:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The BASIC for OpenVMS Reference Manual says, in the fifth item of the
Remarks section:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The executable DIM statement cannot be used to dimension virtual arrays,
arrays received as formal parameters, or arrays declared in COMMON, MAP,
or nonexecutable DIM statements.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://h71000.www7.hp.com/doc/73final/cobol/bas_ref_013.htm#noisn"&gt;http://h71000.www7.hp.com/doc/73final/cobol/bas_ref_013.htm#noisn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The "no formal parameters" rule is inconvienent.  It means that you
can't pass an array to a function, redimension it, fill it with values,
and then use LBOUND and UBOUND in the caller to find out its new size.&lt;/p&gt;
&lt;p&gt;Presumably it is illegal because there is no way at compile time to
know if the function will be called with a dynamic array created with
the executable DIM statement or a static array created with a
non-executable DIM statement.&lt;/p&gt;
&lt;p&gt;However, the programmer &lt;em&gt;can&lt;/em&gt; know, so it ought to be safe to
redimension the array directly when the programmer knows it was
created by an executable DIM statement.&lt;/p&gt;
&lt;p&gt;Using Alpha BASIC V1.4-000 under OpenVMS V7.2 and looking at the
listing of some code with some executable dimension statements
compiled with /LIST/MACHINE revealed the existance of DBASIC$RT_DIM
and after a little experimentation lead to a program that used
DBASIC$RT_DIM directly to redimension dynamically dimensioned arrays
in functions, included below.&lt;/p&gt;
&lt;p&gt;DBASIC$RT_DIM is not documented for users (probably by design) and
could &lt;em&gt;theoretically&lt;/em&gt; lead to flying monkeys and access violations,
and is probably bad style.  However, are there any &lt;em&gt;practical&lt;/em&gt;
reasons why this wouldn't work safely?  Are there any
conditions under which this hack would fail to work?&lt;/p&gt;
&lt;p&gt;Here is an example program:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-1" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-1" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-1"&gt;&lt;/a&gt;program redim
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-2" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-2" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-2"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-3" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-3" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-3"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-4" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-4" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-5" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-5" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-5"&gt;&lt;/a&gt;    external sub redim_in_sub (string dim())
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-6" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-6" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-6"&gt;&lt;/a&gt;    external long function my_redim (string dim(), long)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-7" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-7" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-8" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-8" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-8"&gt;&lt;/a&gt;    declare long i, r
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-9" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-9" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-10" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-10" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-10"&gt;&lt;/a&gt;    i = 10
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-11" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-11" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-11"&gt;&lt;/a&gt;    dim string vs(i) ! has to be a variable to make it an executable dim.
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-12" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-12" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-13" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-13" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-13"&gt;&lt;/a&gt;    r = my_redim (vs(), 30)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-14" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-14" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-14"&gt;&lt;/a&gt;    print "ubound(vs):"; ubound(vs)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-15" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-15" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-15"&gt;&lt;/a&gt;    for i = lbound(vs) to ubound(vs) \ vs(i) = "vs 30-" + num1$(i) \ next i
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-16" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-16" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-16"&gt;&lt;/a&gt;    gosub print_vs
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-17" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-17" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-18" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-18" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-18"&gt;&lt;/a&gt;    call redim_in_sub (vs())
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-19" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-19" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-19"&gt;&lt;/a&gt;    print "ubound(vs):"; ubound(vs)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-20" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-20" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-20"&gt;&lt;/a&gt;    gosub print_Vs
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-21" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-21" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-22" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-22" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-22"&gt;&lt;/a&gt;    exit program
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-23" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-23" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-24" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-24" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-24"&gt;&lt;/a&gt;print_vs:
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-25" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-25" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-25"&gt;&lt;/a&gt;    for i = lbound(vs) to ubound(vs) \ print i; ": "; vs(i) \ next i
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-26" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-26" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-26"&gt;&lt;/a&gt;    return ! from print_vs
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-27" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-27" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-28" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-28" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-28"&gt;&lt;/a&gt;end program ! redim
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-29" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-29" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-30" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-30" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-30"&gt;&lt;/a&gt;function long my_redim (long s by value, long n)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-31" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-31" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-31"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-32" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-32" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-32"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-33" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-33" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-33"&gt;&lt;/a&gt;    declare long r
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-34" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-34" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-34"&gt;&lt;/a&gt;    external long function dbasic$rt_dim (long by value, long by value)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-35" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-35" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-35"&gt;&lt;/a&gt;    r = dbasic$rt_dim (s, n)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-36" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-36" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-36"&gt;&lt;/a&gt;end function r ! my_redim
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-37" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-37" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-37"&gt;&lt;/a&gt;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-38" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-38" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-38"&gt;&lt;/a&gt;sub redim_in_sub (string s())
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-39" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-39" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-39"&gt;&lt;/a&gt;    option type = explicit, constant type = integer, &amp;amp;
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-40" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-40" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-40"&gt;&lt;/a&gt;        size = integer long, size = real double
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-41" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-41" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-41"&gt;&lt;/a&gt;    external sub set_strings (string dim(), string)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-42" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-42" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-42"&gt;&lt;/a&gt;    declare long i
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-43" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-43" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-43"&gt;&lt;/a&gt;    call my_redim (s(), 40)
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-44" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-44" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-44"&gt;&lt;/a&gt;    for i = 0 to 40 \ s(i) = "redim in sub " + num1$(i) \ next i
&lt;a id="rest_code_1dccaa466f5d44998d920b0f1c8d218d-45" name="rest_code_1dccaa466f5d44998d920b0f1c8d218d-45" href="https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/#rest_code_1dccaa466f5d44998d920b0f1c8d218d-45"&gt;&lt;/a&gt;end sub ! redim_in_sub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Interestingly, a slightly different approach was necessary using VAX
BASIC V3.5 under VMS V5.5-2: using BY VALUE in function
definition statements is not allowed by this version of VAX BASIC,
and BAS$RT_DIM had to be used instead of DBASIC$RT_DIM, of course.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/section&gt;</description><category>alpha</category><category>basic</category><category>dms-plus</category><category>hacks</category><category>mmk</category><category>old blog</category><category>poise</category><category>usenet</category><category>vax</category><category>vms</category><guid>https://tkurtbond.github.io/posts/2003/05/08/vms-code-from-the-past/</guid><pubDate>Thu, 08 May 2003 05:00:00 GMT</pubDate></item></channel></rss>