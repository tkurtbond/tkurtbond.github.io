<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about common lisp)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/common-lisp.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Tue, 14 Feb 2023 12:22:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Lisp-style trampolines in Common Lisp, C, Ada, Oberon-2, and Revised Oberon</title><link>https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;em&gt;Last edited: 2023-02-14 06:33:58 EST&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Are you familiar with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#High-level_programming"&gt;lisp-style trampolines&lt;/a&gt;?  A trampoline is a
loop that iteratively invokes functions that return functions.  The
previous link will lead you through &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trampoline_(computing)#cite_note-Baker_1995-1"&gt;CONS Should Not CONS Its
Arguments, Part II: Cheney on the M.T.A.&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/214448.214454"&gt;PDF version&lt;/a&gt;; see p. 17
in the original publication, but that is the first page of the PDF
that link eventually leads to), which, while saying you should just go
ahead and convert to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Continuation-passing_style"&gt;Continuation-passing style&lt;/a&gt; form (CPS),
mentions in passing &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/151333.151343"&gt;No assembly required: compiling standard ML to C&lt;/a&gt;,
(see p. 168 in the original publication, which is the page 8 of the
PDF that link eventually leads to) which leads you to &lt;a class="reference external" href="https://dspace.mit.edu/handle/1721.1/6913"&gt;RABBIT: A
Compiler for SCHEME&lt;/a&gt;, where the concept is discussed under the name
the "SCHEME UUO handler" (see p. 23–24).&lt;/p&gt;
&lt;p&gt;Why is this useful?  It allows you to compile a language that requires
proper &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Tail_call"&gt;tail call&lt;/a&gt; optimization to one that does not provide that.
For instance, if you wanted to compile Scheme, which requires proper
tail call optimization, to Common Lisp, which does not require proper
tail call optimization, you can't just translate Scheme functions
directly into Common Lisp functions, because tail calls allocate stack
space, and eventually the stack will run out of space.&lt;/p&gt;
&lt;p&gt;Here's an example that will run forever in any standard confirming
Scheme, &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/forever.scm"&gt;forever.scm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code scheme"&gt;&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-1" name="rest_code_84d18bb82c9245079f916413acea697f-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever, because with tail call optimization, the stack&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-2" name="rest_code_84d18bb82c9245079f916413acea697f-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; never runs out!&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-3" name="rest_code_84d18bb82c9245079f916413acea697f-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-4" name="rest_code_84d18bb82c9245079f916413acea697f-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-5" name="rest_code_84d18bb82c9245079f916413acea697f-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-6" name="rest_code_84d18bb82c9245079f916413acea697f-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;set!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-7" name="rest_code_84d18bb82c9245079f916413acea697f-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-8" name="rest_code_84d18bb82c9245079f916413acea697f-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-9" name="rest_code_84d18bb82c9245079f916413acea697f-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_84d18bb82c9245079f916413acea697f-10" name="rest_code_84d18bb82c9245079f916413acea697f-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_84d18bb82c9245079f916413acea697f-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/not_forever.lisp"&gt;not_forever.lisp&lt;/a&gt;, the same thing in Common Lisp:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-1" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse until the stack space runs out.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-2" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defparameter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-3" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-4" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-5" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;incf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-6" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"call #~d~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-7" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-8" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a69a50330054abaae65c8a8bbf01e51-9" name="rest_code_9a69a50330054abaae65c8a8bbf01e51-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a69a50330054abaae65c8a8bbf01e51-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, some Common Lisp implementations don't do tail call
optimization, and some &lt;strong&gt;do&lt;/strong&gt;.  Some don't do tail call optimization
unless you compile the functions in question.&lt;/p&gt;
&lt;p&gt;So, for instance, if I load that file into GNU CLISP 2.49.92, the
function executes about 4668 times and then &lt;span class="app"&gt;CLISP&lt;/span&gt; dies with the
error message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;*** - Lisp stack overflow. RESET&lt;/pre&gt;
&lt;p&gt;However if I compile that file in &lt;span class="app"&gt;CLISP&lt;/span&gt; with the Common Lisp function
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;compile-file&lt;/span&gt;&lt;/code&gt; and then load the resulting &lt;span class="file"&gt;.fas&lt;/span&gt; file into
&lt;span class="app"&gt;CLISP&lt;/span&gt;, it will run forever, because &lt;span class="app"&gt;CLISP&lt;/span&gt; does tail call
optimization when it compiles code.&lt;/p&gt;
&lt;p&gt;Furthermore, if I load that file into &lt;span class="app"&gt;SBCL&lt;/span&gt; it will run forever,
because &lt;span class="app"&gt;SBCL&lt;/span&gt; does tail call optimization by default.&lt;/p&gt;
&lt;p&gt;&lt;span class="app"&gt;ECL&lt;/span&gt; is another Common Lisp system where if you load that file
into  an interactive session it will die with stack overflow, but if
you compile that file into an executable it will run forever.&lt;/p&gt;
&lt;p&gt;So, suppose you wanted to translate the Scheme code into Common Lisp,
for an implementation that does not do tail call optimization.  You'd
use a trampoline to make sure the stack doesn't overflow.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline.lisp"&gt;trampoline.lisp&lt;/a&gt;, a trampoline in Common Lisp that runs
through three functions and then stops, for simplicity:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-1" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Demonstrate lisp-style trampolines.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-2" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-3" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-4" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-5" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-6" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-7" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-8" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-9" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-10" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-11" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-12" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-13" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-14" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-15" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-16" name="rest_code_3c8cd742f5724674ac9f59b8988aeb3c-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_3c8cd742f5724674ac9f59b8988aeb3c-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/common-lisp/trampoline_forever.lisp"&gt;trampoline_forever.lisp&lt;/a&gt;, a trampoline in Common Lisp that
runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-1" name="rest_code_7f4f2788001244718951d6be254361ef-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;;; Recurse forever without running out of stack space.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-2" name="rest_code_7f4f2788001244718951d6be254361ef-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-3" name="rest_code_7f4f2788001244718951d6be254361ef-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"baz~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-4" name="rest_code_7f4f2788001244718951d6be254361ef-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-5" name="rest_code_7f4f2788001244718951d6be254361ef-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-6" name="rest_code_7f4f2788001244718951d6be254361ef-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-7" name="rest_code_7f4f2788001244718951d6be254361ef-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-8" name="rest_code_7f4f2788001244718951d6be254361ef-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-9" name="rest_code_7f4f2788001244718951d6be254361ef-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-10" name="rest_code_7f4f2788001244718951d6be254361ef-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-11" name="rest_code_7f4f2788001244718951d6be254361ef-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo~%"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-12" name="rest_code_7f4f2788001244718951d6be254361ef-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-13" name="rest_code_7f4f2788001244718951d6be254361ef-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-14" name="rest_code_7f4f2788001244718951d6be254361ef-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-15" name="rest_code_7f4f2788001244718951d6be254361ef-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-16" name="rest_code_7f4f2788001244718951d6be254361ef-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-17" name="rest_code_7f4f2788001244718951d6be254361ef-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"trampoline call #~s~%"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_7f4f2788001244718951d6be254361ef-18" name="rest_code_7f4f2788001244718951d6be254361ef-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_7f4f2788001244718951d6be254361ef-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you can do the same things in C.  First, here's
&lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/not_forever.c"&gt;not_forever.c&lt;/a&gt;, a program in C that will (usually) die with a stack
overflow:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-1" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-2" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-2"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   Unless the compiler does tail-call optimization. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-3" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-4" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-5" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="cm"&gt;/* Number of times f has been called. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-6" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-7" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-8" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-9" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-10" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-11" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-12" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-13" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-14" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-14"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-15" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-16" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-17" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_040fbc45b43d44e9950ea81871f60ccd-18" name="rest_code_040fbc45b43d44e9950ea81871f60ccd-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_040fbc45b43d44e9950ea81871f60ccd-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I say usually, because tail call optimization is not required by the
standard, and many C compilers do not do it.  For instance, &lt;span class="app"&gt;gcc&lt;/span&gt;
doesn't do tail call optimization &lt;strong&gt;unless&lt;/strong&gt; you specify
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-foptimize-sibling-calls&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O2&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-O3&lt;/span&gt;&lt;/code&gt;, or &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-Os&lt;/span&gt;&lt;/code&gt;.  If I
don't specify any of those options, on my system that program dies
with the error &lt;code class="docutils literal"&gt;Segmentation fault: 11&lt;/code&gt; after call #523932.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline.c"&gt;trampoline.c&lt;/a&gt;, the limited trampoline in C:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-1" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Demonstrate lisp-style trampolines. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-2" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-3" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-4" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-5" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-6" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-7" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-7"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-8" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-9" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-10" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-11" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-12" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-13" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-14" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-14"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-15" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-16" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-17" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-18" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-19" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-20" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-20"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-21" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-21"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-22" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-23" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-24" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-25" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-25"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-26" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-27" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-28" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-28"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-29" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-29"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-30" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-31" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-32" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-33" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-34" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-35" name="rest_code_bc6cc18cc5ab4d419f6218ddcc851189-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_bc6cc18cc5ab4d419f6218ddcc851189-35"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice this works by converting pointers to functions to pointers to void
— it doesn't even require any explicit casting!&lt;/p&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/c/trampoline_forever.c"&gt;trampoline_forever.c&lt;/a&gt;, the trampoline that runs forever:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-1" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Recurse forever without running out of stack spacc. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-2" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-3" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-4" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-5" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-6" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* Forward declaration. */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-7" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-8" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-8"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-9" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-9"&gt;&lt;/a&gt;&lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-10" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-11" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-12" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-13" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-14" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-15" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-15"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-16" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-16"&gt;&lt;/a&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-17" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-18" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-19" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-20" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-21" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-22" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-22"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-23" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-23"&gt;&lt;/a&gt;&lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-24" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-25" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-26" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-27" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-28" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-29" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-30" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-30"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-31" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-31"&gt;&lt;/a&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-32" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-32"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-33" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-34" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-35" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-36" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_f935aa4f53e44e8e84648c84d0196f2c-37" name="rest_code_f935aa4f53e44e8e84648c84d0196f2c-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f935aa4f53e44e8e84648c84d0196f2c-37"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, here's where C's weak typing lets it get away with things that
more strongly typed languages don't.  Notice the declaration of the
trampoline type:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_b8f72867189842d5aee7e2120c9677c9-1" name="rest_code_b8f72867189842d5aee7e2120c9677c9-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b8f72867189842d5aee7e2120c9677c9-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id="mentioning-recursive-types"&gt;Notice how it returns a &lt;code class="docutils literal"&gt;void *&lt;/code&gt;, instead of something more
specific?  That's because if it tried to return something more
specific, it would have to a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;: that is to say, while
defining the type &lt;code class="docutils literal"&gt;trampoline&lt;/code&gt;, you would use a reference to the
type while defining the type.  It would look something like this:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c"&gt;&lt;a id="rest_code_4fe951e9389a4f3f96603405bf40f114-1" name="rest_code_4fe951e9389a4f3f96603405bf40f114-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_4fe951e9389a4f3f96603405bf40f114-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and that results in &lt;span class="app"&gt;gcc&lt;/span&gt; issuing the following error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;error: unknown type name 'trampoline'&lt;/pre&gt;
&lt;p&gt;Very few traditional programming languages allow this.  It isn't a
problem in Scheme or Common Lisp because those languages use strong
dynamic typing, where the types are checked at runtime.&lt;/p&gt;
&lt;p&gt;So how do you do this in languages with strong static typing?&lt;/p&gt;
&lt;p&gt;Well, let's try this in some of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; programming language
dialects.  &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; was designed and implemented by Niklaus Wirth
(&lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/"&gt;NW1&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Niklaus_Wirth"&gt;NW2&lt;/a&gt;) as a simplification and generalization of his earlier
languages &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)"&gt;Pascal&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula"&gt;Modula&lt;/a&gt;, and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Modula-2"&gt;Modula-2&lt;/a&gt;.  (Here's &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon.Report.pdf"&gt;The Programming
Language Oberon (1990)&lt;/a&gt;, the original Oberon language report, in PDF
for reference.)  I find the original Oberon admirable for its
simplicity, strong typing, understandable syntax, and its introduction
of &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; (which organizes &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Record_(computer_science)"&gt;record types&lt;/a&gt; in a
inheritance hierarchy, which with the use of procedure variables
enables object oriented programming in a particularly straightforward
and flexible way) but struggle with its minimalism and how its
standard libraries differ in paradigm from the standard Unix
libraries, since Oberon was used to implement a new operating system,
the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(operating_system)"&gt;Oberon System&lt;/a&gt; with its own completely unique &lt;a class="reference external" href="https://en.wikipedia.org/wiki/API"&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; has a number of dialects. I'm most fond of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;, which
was the second language in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt; family, developed by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hanspeter_M%C3%B6ssenb%C3%B6ck"&gt;Hanspeter
Mössenböck&lt;/a&gt; and Niklaus Wirth.  It is a little less minimalist than
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)"&gt;Oberon&lt;/a&gt;, and among a few other things adds type-bound procedures to
the record hierarchy provided by &lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt;, providing a
appealingly simple and direct design for object-oriented programming
that was later adopted by the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; programming language in a more
complicated and subtle version, as might be expected by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;'s
plethora of design goals and constraints.  (Here's a couple of papers
that mention it: &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/122028.122033"&gt;Object-oriented programming through type
extension in Ada 9X&lt;/a&gt; (&lt;a class="reference external" href="https://dl.acm.org/doi/pdf/10.1145/122028.122033"&gt;ADAOO1PDF&lt;/a&gt;) and &lt;a class="reference external" href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.167.7445&amp;amp;rank=1"&gt;Integrating Object-Oriented
Programming and Protected Objects in Ada 95&lt;/a&gt; (&lt;a class="reference external" href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.167.7445&amp;amp;rep=rep1&amp;amp;type=pdf"&gt;ADAOO2PDF&lt;/a&gt;).  I wish I
knew of a reference that discussed explicitly the process of choosing
&lt;a class="reference external" href="https://dl.acm.org/doi/abs/10.1145/42190.46167"&gt;Type Extensions&lt;/a&gt; for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; and how they were adopted and adapted in
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Here's a copy of the Oberon-2 language report in PDF (&lt;a class="reference external" href="https://tkurtbond.github.io/Oberon-2/Oberon2.pdf"&gt;O2PDF&lt;/a&gt;) and HTML
(&lt;a class="reference external" href="https://web.archive.org/web/20151104101932/https://cseweb.ucsd.edu/~wgg/CSE131B/oberon2.htm"&gt;O2HTML&lt;/a&gt;), for reference.&lt;/p&gt;
&lt;p&gt;Anyway, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt; has procedure types and procedure variables, so one
would think it would be simple to implement trampolines in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;,
without messing about with pointers.  It turns out to be more
complicated than one would think.&lt;/p&gt;
&lt;p&gt;I'm using &lt;a class="reference external" href="https://github.com/vishaps/voc"&gt;Vishap Oberon&lt;/a&gt;, a free and open source Oberon-2 compiler,
by the way.&lt;/p&gt;
&lt;p&gt;First, here's &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/trampolines/oberon-2/NotForever.Mod"&gt;NotForever.Mod&lt;/a&gt;, the standard program with a recursive
function procedure that will overflow the stack.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-1" name="rest_code_fc9a98abdb874526a5663b45519f0e46-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-2" name="rest_code_fc9a98abdb874526a5663b45519f0e46-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-3" name="rest_code_fc9a98abdb874526a5663b45519f0e46-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;LONGINT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;               &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-4" name="rest_code_fc9a98abdb874526a5663b45519f0e46-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-5" name="rest_code_fc9a98abdb874526a5663b45519f0e46-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-6" name="rest_code_fc9a98abdb874526a5663b45519f0e46-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-7" name="rest_code_fc9a98abdb874526a5663b45519f0e46-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-7"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-8" name="rest_code_fc9a98abdb874526a5663b45519f0e46-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-9" name="rest_code_fc9a98abdb874526a5663b45519f0e46-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-10" name="rest_code_fc9a98abdb874526a5663b45519f0e46-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-11" name="rest_code_fc9a98abdb874526a5663b45519f0e46-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-12" name="rest_code_fc9a98abdb874526a5663b45519f0e46-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-13" name="rest_code_fc9a98abdb874526a5663b45519f0e46-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-14" name="rest_code_fc9a98abdb874526a5663b45519f0e46-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_fc9a98abdb874526a5663b45519f0e46-15" name="rest_code_fc9a98abdb874526a5663b45519f0e46-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_fc9a98abdb874526a5663b45519f0e46-15"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On my system, this program dies with with the error &lt;code class="docutils literal"&gt;Segmentation
fault: 11&lt;/code&gt; after call #524008.&lt;/p&gt;
&lt;p&gt;Now on to trampolines.  In theory we should be able to declare a type
that is a function procedure that returns other function procedures.
Here's the first attempt at the limited trampoline,
&lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/trampolines/oberon-2/TrampolineBroken.Mod"&gt;TrampolineBroken.Mod&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-1" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Fail to demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-2" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-3" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-4" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;(* This is an error. *)&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-5" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-6" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-7" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-8" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-9" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-10" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-11" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-12" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-13" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-14" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-15" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-16" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-17" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-18" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-19" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-20" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-21" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-22" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-23" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-24" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-25" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-26" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-27" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-28" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-29" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-30" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-31" name="rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_75a6ba5e7a684bc88fcdd7818a8493ce-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineBroken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, trying to compile this dies with the following error
message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;TrampolineBroken.Mod  Compiling TrampolineBroken.

   4:   TYPE Thunk = PROCEDURE (): Thunk;
                             ^
    pos   126  err 244  cyclic type definition not allowed

Module compilation failed.&lt;/pre&gt;
&lt;p&gt;As mentioned &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#mentioning-recursive-types"&gt;above&lt;/a&gt;, this is a case of a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;.  Well, drat.&lt;/p&gt;
&lt;p&gt;At this point the immediate reaction is to look at the C version and
try to hack up something analogous using functionality from
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Oberon-2"&gt;Oberon-2&lt;/a&gt;'s &lt;code class="docutils literal"&gt;SYSTEM&lt;/code&gt; module, but that way lies madness, difficulty,
and type errors.  Instead, you have to step back and think about
things from another viewpoint.  The problem is that we can't declare a
type for a function procedure that returns another function procedure
of its type, because that is recursive.  Instead of trying for a
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;, what if we switched to storing the next procedure
to be run in a global variable, &lt;code class="docutils literal"&gt;next&lt;/code&gt;, and having each procedure in
the chain set that to the procedure that should run next?  That should
work!&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/Trampoline.Mod"&gt;Trampoline.Mod&lt;/a&gt;, a version that works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-1" name="rest_code_b18c417661b945119d40f62fc4772cd8-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-2" name="rest_code_b18c417661b945119d40f62fc4772cd8-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-3" name="rest_code_b18c417661b945119d40f62fc4772cd8-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-4" name="rest_code_b18c417661b945119d40f62fc4772cd8-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-5" name="rest_code_b18c417661b945119d40f62fc4772cd8-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-6" name="rest_code_b18c417661b945119d40f62fc4772cd8-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-7" name="rest_code_b18c417661b945119d40f62fc4772cd8-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-8" name="rest_code_b18c417661b945119d40f62fc4772cd8-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-9" name="rest_code_b18c417661b945119d40f62fc4772cd8-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-10" name="rest_code_b18c417661b945119d40f62fc4772cd8-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-11" name="rest_code_b18c417661b945119d40f62fc4772cd8-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-12" name="rest_code_b18c417661b945119d40f62fc4772cd8-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-13" name="rest_code_b18c417661b945119d40f62fc4772cd8-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-14" name="rest_code_b18c417661b945119d40f62fc4772cd8-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-15" name="rest_code_b18c417661b945119d40f62fc4772cd8-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-16" name="rest_code_b18c417661b945119d40f62fc4772cd8-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-17" name="rest_code_b18c417661b945119d40f62fc4772cd8-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-18" name="rest_code_b18c417661b945119d40f62fc4772cd8-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-19" name="rest_code_b18c417661b945119d40f62fc4772cd8-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-20" name="rest_code_b18c417661b945119d40f62fc4772cd8-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-21" name="rest_code_b18c417661b945119d40f62fc4772cd8-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-22" name="rest_code_b18c417661b945119d40f62fc4772cd8-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-23" name="rest_code_b18c417661b945119d40f62fc4772cd8-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-24" name="rest_code_b18c417661b945119d40f62fc4772cd8-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-25" name="rest_code_b18c417661b945119d40f62fc4772cd8-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-26" name="rest_code_b18c417661b945119d40f62fc4772cd8-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-27" name="rest_code_b18c417661b945119d40f62fc4772cd8-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-28" name="rest_code_b18c417661b945119d40f62fc4772cd8-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-29" name="rest_code_b18c417661b945119d40f62fc4772cd8-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-30" name="rest_code_b18c417661b945119d40f62fc4772cd8-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_b18c417661b945119d40f62fc4772cd8-31" name="rest_code_b18c417661b945119d40f62fc4772cd8-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_b18c417661b945119d40f62fc4772cd8-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/oberon-2/TrampolineForever.Mod"&gt;TrampolineForever.Mod&lt;/a&gt;, which also works!&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-1" name="rest_code_00a54386e0f8447da92fb93b9e147a37-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-2" name="rest_code_00a54386e0f8447da92fb93b9e147a37-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-3" name="rest_code_00a54386e0f8447da92fb93b9e147a37-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-4" name="rest_code_00a54386e0f8447da92fb93b9e147a37-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-5" name="rest_code_00a54386e0f8447da92fb93b9e147a37-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-6" name="rest_code_00a54386e0f8447da92fb93b9e147a37-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-7" name="rest_code_00a54386e0f8447da92fb93b9e147a37-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-8" name="rest_code_00a54386e0f8447da92fb93b9e147a37-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-9" name="rest_code_00a54386e0f8447da92fb93b9e147a37-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-10" name="rest_code_00a54386e0f8447da92fb93b9e147a37-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-11" name="rest_code_00a54386e0f8447da92fb93b9e147a37-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-12" name="rest_code_00a54386e0f8447da92fb93b9e147a37-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-13" name="rest_code_00a54386e0f8447da92fb93b9e147a37-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-14" name="rest_code_00a54386e0f8447da92fb93b9e147a37-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-15" name="rest_code_00a54386e0f8447da92fb93b9e147a37-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-16" name="rest_code_00a54386e0f8447da92fb93b9e147a37-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-17" name="rest_code_00a54386e0f8447da92fb93b9e147a37-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-18" name="rest_code_00a54386e0f8447da92fb93b9e147a37-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-19" name="rest_code_00a54386e0f8447da92fb93b9e147a37-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-20" name="rest_code_00a54386e0f8447da92fb93b9e147a37-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-21" name="rest_code_00a54386e0f8447da92fb93b9e147a37-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-22" name="rest_code_00a54386e0f8447da92fb93b9e147a37-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-23" name="rest_code_00a54386e0f8447da92fb93b9e147a37-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-24" name="rest_code_00a54386e0f8447da92fb93b9e147a37-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-25" name="rest_code_00a54386e0f8447da92fb93b9e147a37-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-26" name="rest_code_00a54386e0f8447da92fb93b9e147a37-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-27" name="rest_code_00a54386e0f8447da92fb93b9e147a37-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-28" name="rest_code_00a54386e0f8447da92fb93b9e147a37-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-29" name="rest_code_00a54386e0f8447da92fb93b9e147a37-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-30" name="rest_code_00a54386e0f8447da92fb93b9e147a37-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-31" name="rest_code_00a54386e0f8447da92fb93b9e147a37-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-32" name="rest_code_00a54386e0f8447da92fb93b9e147a37-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-33" name="rest_code_00a54386e0f8447da92fb93b9e147a37-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-34" name="rest_code_00a54386e0f8447da92fb93b9e147a37-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-35" name="rest_code_00a54386e0f8447da92fb93b9e147a37-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-36" name="rest_code_00a54386e0f8447da92fb93b9e147a37-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-37" name="rest_code_00a54386e0f8447da92fb93b9e147a37-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-38" name="rest_code_00a54386e0f8447da92fb93b9e147a37-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_00a54386e0f8447da92fb93b9e147a37-39" name="rest_code_00a54386e0f8447da92fb93b9e147a37-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_00a54386e0f8447da92fb93b9e147a37-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wirth has continued to work on Oberon, producing an even more
minimalist revision, often know as Oberon-07, or &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.
(Here's the &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/Oberon07.Report.pdf"&gt;The Programming Language Oberon-07 (Revised Oberon)&lt;/a&gt; in
PDF, for reference.)  Unfortunately, he removed forward declarations
and the &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; type, which means we have to make some minor
changes.&lt;/p&gt;
&lt;p&gt;I'm using OBNC (&lt;a class="reference external" href="https://miasap.se/obnc/"&gt;OBNC1&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/GunterMueller/OBNC"&gt;OBNC2&lt;/a&gt;) for &lt;a class="reference external" href="https://people.inf.ethz.ch/wirth/Oberon/index.html"&gt;Revised Oberon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/NotForever.Mod"&gt;Revised Oberon NotForever.Mod&lt;/a&gt;, with &lt;code class="docutils literal"&gt;LONGINT&lt;/code&gt; replaced
by &lt;code class="docutils literal"&gt;INTEGER&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-1" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;(* Recurse until stack space runs out. *)&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-2" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-3" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;(* Number of times f has been called. *)&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-4" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-4"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;(* Alas, no more LONGINT. *)&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-5" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-6" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-7" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-8" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-9" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-10" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-11" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-11"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-12" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-13" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-13"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-14" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-14"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-15" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-15"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_8c7a3052dd984b599d3320dd5ff28708-16" name="rest_code_8c7a3052dd984b599d3320dd5ff28708-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_8c7a3052dd984b599d3320dd5ff28708-16"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;NotForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/Trampoline.Mod"&gt;Revised Oberon Trampoline.Mod&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-1" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Demonstrate lisp-style trampolines. *)&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-2" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-2"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-3" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-4" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-4"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-5" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-6" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-6"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-7" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-8" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-8"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-9" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-9"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-10" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-11" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-12" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-13" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-14" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-15" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-16" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-17" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-18" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-19" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-20" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-21" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-21"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-22" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-23" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-24" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-25" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-26" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-26"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-27" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-27"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-28" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-29" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-30" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-30"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9a88782a4e334cfd80e80c1d039007f3-31" name="rest_code_9a88782a4e334cfd80e80c1d039007f3-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9a88782a4e334cfd80e80c1d039007f3-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;Trampoline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/revised-oberon/TrampolineForever.Mod"&gt;Revised Oberon TrampolineForever.Mod&lt;/a&gt;, with a workaround
for the removal of forward declarations of procedures:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code modula2"&gt;&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-1" name="rest_code_f972f94080c0424d902f7bfe1a106d86-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-1"&gt;&lt;/a&gt;&lt;span class="kr"&gt;MODULE&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-2" name="rest_code_f972f94080c0424d902f7bfe1a106d86-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-2"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;(* Recurse forever without running out of stack space.  *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-3" name="rest_code_f972f94080c0424d902f7bfe1a106d86-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-3"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;IMPORT&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-4" name="rest_code_f972f94080c0424d902f7bfe1a106d86-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-5" name="rest_code_f972f94080c0424d902f7bfe1a106d86-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-5"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;TYPE&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-6" name="rest_code_f972f94080c0424d902f7bfe1a106d86-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-7" name="rest_code_f972f94080c0424d902f7bfe1a106d86-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;VAR&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-8" name="rest_code_f972f94080c0424d902f7bfe1a106d86-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;(* Forward declaration. *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-9" name="rest_code_f972f94080c0424d902f7bfe1a106d86-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;(* Next procedure to be called. *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-10" name="rest_code_f972f94080c0424d902f7bfe1a106d86-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;(* Number of times through the trampoline. *)&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-11" name="rest_code_f972f94080c0424d902f7bfe1a106d86-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-12" name="rest_code_f972f94080c0424d902f7bfe1a106d86-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-12"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-13" name="rest_code_f972f94080c0424d902f7bfe1a106d86-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-13"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-14" name="rest_code_f972f94080c0424d902f7bfe1a106d86-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-15" name="rest_code_f972f94080c0424d902f7bfe1a106d86-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-16" name="rest_code_f972f94080c0424d902f7bfe1a106d86-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-16"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-17" name="rest_code_f972f94080c0424d902f7bfe1a106d86-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-18" name="rest_code_f972f94080c0424d902f7bfe1a106d86-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-18"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-19" name="rest_code_f972f94080c0424d902f7bfe1a106d86-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-19"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-20" name="rest_code_f972f94080c0424d902f7bfe1a106d86-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-21" name="rest_code_f972f94080c0424d902f7bfe1a106d86-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-22" name="rest_code_f972f94080c0424d902f7bfe1a106d86-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-22"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-23" name="rest_code_f972f94080c0424d902f7bfe1a106d86-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-24" name="rest_code_f972f94080c0424d902f7bfe1a106d86-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-24"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-25" name="rest_code_f972f94080c0424d902f7bfe1a106d86-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-25"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-26" name="rest_code_f972f94080c0424d902f7bfe1a106d86-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-27" name="rest_code_f972f94080c0424d902f7bfe1a106d86-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-28" name="rest_code_f972f94080c0424d902f7bfe1a106d86-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-28"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-29" name="rest_code_f972f94080c0424d902f7bfe1a106d86-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-30" name="rest_code_f972f94080c0424d902f7bfe1a106d86-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;BEGIN&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-31" name="rest_code_f972f94080c0424d902f7bfe1a106d86-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-31"&gt;&lt;/a&gt;  &lt;span class="n"&gt;forward&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-32" name="rest_code_f972f94080c0424d902f7bfe1a106d86-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-33" name="rest_code_f972f94080c0424d902f7bfe1a106d86-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-33"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-34" name="rest_code_f972f94080c0424d902f7bfe1a106d86-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-34"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;NIL&lt;/span&gt; &lt;span class="kr"&gt;DO&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-35" name="rest_code_f972f94080c0424d902f7bfe1a106d86-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-35"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;INC&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-36" name="rest_code_f972f94080c0424d902f7bfe1a106d86-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ln&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-37" name="rest_code_f972f94080c0424d902f7bfe1a106d86-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-38" name="rest_code_f972f94080c0424d902f7bfe1a106d86-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-38"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f972f94080c0424d902f7bfe1a106d86-39" name="rest_code_f972f94080c0424d902f7bfe1a106d86-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_f972f94080c0424d902f7bfe1a106d86-39"&gt;&lt;/a&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;TrampolineForever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that with forward declarations removed, we just declare a
procedure variable, &lt;code class="docutils literal"&gt;forward&lt;/code&gt;, initialize it before starting the
trampoline, and refer to it instead of &lt;code class="docutils literal"&gt;foo&lt;/code&gt; in procedure &lt;code class="docutils literal"&gt;baz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And of course, since we mentioned &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; above, we should do a version
in that.  I'm using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GNAT"&gt;GNAT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/not_forever.adb"&gt;not_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-1" name="rest_code_836a7a1d0698484baf4d1ec23891d551-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-2" name="rest_code_836a7a1d0698484baf4d1ec23891d551-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;        &lt;span class="c1"&gt;-- recurse until stack space runs out.&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-3" name="rest_code_836a7a1d0698484baf4d1ec23891d551-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-3"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-4" name="rest_code_836a7a1d0698484baf4d1ec23891d551-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-4"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times f has been called.&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-5" name="rest_code_836a7a1d0698484baf4d1ec23891d551-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-6" name="rest_code_836a7a1d0698484baf4d1ec23891d551-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-6"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-7" name="rest_code_836a7a1d0698484baf4d1ec23891d551-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-7"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-8" name="rest_code_836a7a1d0698484baf4d1ec23891d551-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-9" name="rest_code_836a7a1d0698484baf4d1ec23891d551-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-10" name="rest_code_836a7a1d0698484baf4d1ec23891d551-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-10"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-11" name="rest_code_836a7a1d0698484baf4d1ec23891d551-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-12" name="rest_code_836a7a1d0698484baf4d1ec23891d551-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-12"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-13" name="rest_code_836a7a1d0698484baf4d1ec23891d551-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-13"&gt;&lt;/a&gt;  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-14" name="rest_code_836a7a1d0698484baf4d1ec23891d551-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-14"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-15" name="rest_code_836a7a1d0698484baf4d1ec23891d551-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-15"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-16" name="rest_code_836a7a1d0698484baf4d1ec23891d551-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-16"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_836a7a1d0698484baf4d1ec23891d551-17" name="rest_code_836a7a1d0698484baf4d1ec23891d551-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_836a7a1d0698484baf4d1ec23891d551-17"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;not_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; has exceptions, we actually catch the exception that
happens when the stack runs out of space:&lt;/p&gt;
&lt;pre class="literal-block"&gt;STORAGE_ERROR raised with i =  262002&lt;/pre&gt;
&lt;p&gt;Again, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ada_(programming_language)"&gt;Ada&lt;/a&gt; would have the same problem with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Recursive_data_type"&gt;recursive type&lt;/a&gt;s as
the Oberon dialects.  Don't look at the C version and wander off into
forest of &lt;code class="docutils literal"&gt;Ada.Unchecked_Conversion&lt;/code&gt; because that's unsafe, or the
thicket of &lt;code class="docutils literal"&gt;System.Address_To_Access_Conversions&lt;/code&gt;, because that
one's also unsafe and more complicated (and the simple approach didn't
work, when I tried it).  Instead, do the same thing as we did in the
Oberon dialects, and move to a global variable instead of returning
the values from the functions.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline.adb"&gt;trampoline.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-1" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-2" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;         &lt;span class="c1"&gt;-- Demonstrate lisp-style trampolines.&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-3" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-4" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-5" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-6" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-7" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-7"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-8" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-8"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-9" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-10" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-11" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-11"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-12" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-13" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-13"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-14" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-14"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-15" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-16" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-17" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-17"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-18" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-19" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-19"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-20" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-20"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-21" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-22" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-23" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-23"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-24" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-25" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-25"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-26" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-27" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-27"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-28" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-28"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-29" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-29"&gt;&lt;/a&gt;    &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_67b0ed37564f4e95bffff9dc0b877e34-30" name="rest_code_67b0ed37564f4e95bffff9dc0b877e34-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_67b0ed37564f4e95bffff9dc0b877e34-30"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's &lt;a class="reference external" href="https://tkurtbond.github.io/trampolines/ada/trampoline_forever.adb"&gt;trampoline_forever.adb&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code ada"&gt;&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-1" name="rest_code_9229f112156e442b95ccf996fab3d103-1" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada.Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-2" name="rest_code_9229f112156e442b95ccf996fab3d103-2" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-2"&gt;&lt;/a&gt;&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-3" name="rest_code_9229f112156e442b95ccf996fab3d103-3" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;-- Recurse forever without running out of stack space.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-4" name="rest_code_9229f112156e442b95ccf996fab3d103-4" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-4"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Unsigned&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;-- wrap to 0 when maximum value is execeeded.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-5" name="rest_code_9229f112156e442b95ccf996fab3d103-5" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unsigned&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="c1"&gt;-- Number of times through the trampoline.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-6" name="rest_code_9229f112156e442b95ccf996fab3d103-6" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-7" name="rest_code_9229f112156e442b95ccf996fab3d103-7" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-7"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Thunk&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;access&lt;/span&gt; &lt;span class="kd"&gt;procedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-8" name="rest_code_9229f112156e442b95ccf996fab3d103-8" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-9" name="rest_code_9229f112156e442b95ccf996fab3d103-9" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-9"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Thunk&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;-- Next procedure to be called.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-10" name="rest_code_9229f112156e442b95ccf996fab3d103-10" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-11" name="rest_code_9229f112156e442b95ccf996fab3d103-11" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-11"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;-- forward declaration.&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-12" name="rest_code_9229f112156e442b95ccf996fab3d103-12" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-13" name="rest_code_9229f112156e442b95ccf996fab3d103-13" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-13"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-14" name="rest_code_9229f112156e442b95ccf996fab3d103-14" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-14"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-15" name="rest_code_9229f112156e442b95ccf996fab3d103-15" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"baz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-16" name="rest_code_9229f112156e442b95ccf996fab3d103-16" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-17" name="rest_code_9229f112156e442b95ccf996fab3d103-17" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-17"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-18" name="rest_code_9229f112156e442b95ccf996fab3d103-18" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-19" name="rest_code_9229f112156e442b95ccf996fab3d103-19" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-19"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-20" name="rest_code_9229f112156e442b95ccf996fab3d103-20" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-20"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-21" name="rest_code_9229f112156e442b95ccf996fab3d103-21" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-22" name="rest_code_9229f112156e442b95ccf996fab3d103-22" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-23" name="rest_code_9229f112156e442b95ccf996fab3d103-23" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-23"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-24" name="rest_code_9229f112156e442b95ccf996fab3d103-24" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-25" name="rest_code_9229f112156e442b95ccf996fab3d103-25" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-25"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="kr"&gt;is&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-26" name="rest_code_9229f112156e442b95ccf996fab3d103-26" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-26"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-27" name="rest_code_9229f112156e442b95ccf996fab3d103-27" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-28" name="rest_code_9229f112156e442b95ccf996fab3d103-28" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-29" name="rest_code_9229f112156e442b95ccf996fab3d103-29" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-29"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-30" name="rest_code_9229f112156e442b95ccf996fab3d103-30" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-31" name="rest_code_9229f112156e442b95ccf996fab3d103-31" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-31"&gt;&lt;/a&gt;&lt;span class="kr"&gt;begin&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-32" name="rest_code_9229f112156e442b95ccf996fab3d103-32" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-32"&gt;&lt;/a&gt;  &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-33" name="rest_code_9229f112156e442b95ccf996fab3d103-33" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-33"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;while&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-34" name="rest_code_9229f112156e442b95ccf996fab3d103-34" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-35" name="rest_code_9229f112156e442b95ccf996fab3d103-35" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-35"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"call #"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-36" name="rest_code_9229f112156e442b95ccf996fab3d103-36" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-37" name="rest_code_9229f112156e442b95ccf996fab3d103-37" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-37"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="kr"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-38" name="rest_code_9229f112156e442b95ccf996fab3d103-38" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-38"&gt;&lt;/a&gt;&lt;span class="kr"&gt;exception&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-39" name="rest_code_9229f112156e442b95ccf996fab3d103-39" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-39"&gt;&lt;/a&gt;  &lt;span class="kr"&gt;when&lt;/span&gt; &lt;span class="n"&gt;STORAGE_ERROR&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-40" name="rest_code_9229f112156e442b95ccf996fab3d103-40" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-40"&gt;&lt;/a&gt;  &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"STORAGE_ERROR raised with i = "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;Put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;New_Line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9229f112156e442b95ccf996fab3d103-41" name="rest_code_9229f112156e442b95ccf996fab3d103-41" href="https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/#rest_code_9229f112156e442b95ccf996fab3d103-41"&gt;&lt;/a&gt;&lt;span class="kr"&gt;end&lt;/span&gt; &lt;span class="nf"&gt;trampoline_forever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;Of course, languages with more sophisticated type systems have other
ways of dealing with things, but I haven't investigated them.  I did
stumble across an &lt;a class="reference external" href="https://gist.github.com/rapha/119788"&gt;example&lt;/a&gt; in OCaml (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/OCaml"&gt;OCAML1&lt;/a&gt;, &lt;a class="reference external" href="https://ocaml.org/"&gt;OCAML2&lt;/a&gt;).&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;If you want to play around with this, the code is in a
&lt;a class="reference external" href="https://github.com/tkurtbond/trampolines"&gt;repository&lt;/a&gt; at &lt;a class="reference external" href="https://github.com/"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
End: --&gt;</description><category>ada</category><category>c</category><category>cheney on the m.t.a.</category><category>clisp</category><category>common lisp</category><category>continuation-passing style</category><category>cps</category><category>ecl</category><category>gcc</category><category>github</category><category>gnat</category><category>hanspeter mössenböck</category><category>lisp-style trampolines</category><category>modula</category><category>modula-2</category><category>niklaus wirth</category><category>no assembly required</category><category>oberon system</category><category>oberon-2</category><category>oberon-07</category><category>obnc</category><category>ocaml</category><category>pascal</category><category>rabbit</category><category>record types</category><category>revised oberon</category><category>sbcl</category><category>scheme</category><category>tail call</category><category>tail call optimization</category><category>trampolines</category><category>type extensions</category><category>uuo handler</category><category>vishap oberon</category><guid>https://tkurtbond.github.io/posts/2022/06/14/lisp-style-trampolines-in-common-lisp-c-ada-oberon-2-and-revised-oberon/</guid><pubDate>Tue, 14 Jun 2022 19:49:55 GMT</pubDate></item><item><title>Gitub repo for Arrow Macros for Emacs</title><link>https://tkurtbond.github.io/posts/2021/09/07/gitub-repo-for-arrow-macros-for-emacs/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I've added a &lt;a class="reference external" href="https://github.com/tkurtbond/arrow-macros-for-emacs"&gt;Github repository&lt;/a&gt; for my port of &lt;a class="reference external" href="https://github.com/nightfly19/cl-arrows"&gt;CL-Arrows&lt;/a&gt; to
Emacs Lisp (&lt;a class="reference external" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/"&gt;original post&lt;/a&gt;), at the insistence of CPB.&lt;/p&gt;</description><category>arrow macros</category><category>clojure</category><category>common lisp</category><category>emacs</category><category>emacs lisp</category><guid>https://tkurtbond.github.io/posts/2021/09/07/gitub-repo-for-arrow-macros-for-emacs/</guid><pubDate>Tue, 07 Sep 2021 16:07:48 GMT</pubDate></item><item><title>Arrow Macros in Emacs Lisp</title><link>https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Are you familiar with arrow macros?  (They have nothing to do with
&lt;a class="reference external" href="https://en.wikibooks.org/wiki/Haskell/Understanding_arrows"&gt;arrows in Haskell&lt;/a&gt;.) They started out in &lt;a class="reference external" href="https://clojure.org/"&gt;Clojure&lt;/a&gt;, I think, and have
been ported to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Common_Lisp"&gt;Common Lisp&lt;/a&gt; and probably other Lisps, though I didn't
find one for &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/"&gt;Emacs Lisp&lt;/a&gt;.  I think the &lt;a class="reference external" href="https://github.com/Harleqin/arrows"&gt;arrows&lt;/a&gt; package is the most up
to date in &lt;a class="reference external" href="https://www.quicklisp.org/"&gt;Quicklisp&lt;/a&gt; for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Common_Lisp"&gt;Common Lisp&lt;/a&gt;, but I found the &lt;a class="reference external" href="https://github.com/nightfly19/cl-arrows"&gt;cl-arrows&lt;/a&gt;
package first so that's the one I converted to &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/"&gt;Emacs Lisp&lt;/a&gt; today.&lt;/p&gt;
&lt;p&gt;There were two slightly tricky parts to the port&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;I needed to use lexical binding for the source file&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/nightfly19/cl-arrows"&gt;cl-arrows&lt;/a&gt;'s test suite used fractions, but &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/"&gt;Emacs Lisp&lt;/a&gt; doesn't
have them.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyway, I think they're very useful.  If you have a value and
you want it to be processed by several functions in a chain you
can use an arrow macro instead of using lots of nested function
calls. For instance,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_043138e37b6c47c595fd1a682279bda3-1" name="rest_code_043138e37b6c47c595fd1a682279bda3-1" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_043138e37b6c47c595fd1a682279bda3-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"^-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"^-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-\\."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"[^-.a-z0-9]+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))))))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is annoying and hard to read on one line.  If you split it into multiple lines&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-1" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-1" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-2" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-2" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-2"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-3" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-3" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-3"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-4" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-4" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;"^-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-5" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-5" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-6" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-6" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;"^-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-7" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-7" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-8" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-8" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;"\\.+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-9" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-9" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-10" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-10" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="s"&gt;"\\.-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-11" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-11" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-12" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-12" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s"&gt;"-\\."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-13" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-13" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-14" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-14" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="s"&gt;"-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-15" name="rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-15" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_a587fa6fd14747aa90ad1305bcd3d6e6-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"[^-.a-z0-9]+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))))))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that's also pretty horrible.  To read it you have to skip to the end,
figure out that function call, then skip back to the next function
call, and so forth, until you get back to the last function call,
reading it from inside out.  It looks much better if you use the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; arrow macro, which substitutes the value you are passing along
as the last argument to the functions you are calling:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-1" name="rest_code_982506fca0524928a6ea6e12de6dcaed-1" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-2" name="rest_code_982506fca0524928a6ea6e12de6dcaed-2" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"[^-.a-z0-9]+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-3" name="rest_code_982506fca0524928a6ea6e12de6dcaed-3" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-4" name="rest_code_982506fca0524928a6ea6e12de6dcaed-4" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-\\."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-5" name="rest_code_982506fca0524928a6ea6e12de6dcaed-5" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-6" name="rest_code_982506fca0524928a6ea6e12de6dcaed-6" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-7" name="rest_code_982506fca0524928a6ea6e12de6dcaed-7" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"^-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_982506fca0524928a6ea6e12de6dcaed-8" name="rest_code_982506fca0524928a6ea6e12de6dcaed-8" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_982506fca0524928a6ea6e12de6dcaed-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also think it is more understandable than the highly nested calls,
since you can follow along in from start to finish, rather than from
inside out: you've got the value, you pass it to the first function,
then to the second, and so forth.&lt;/p&gt;
&lt;p&gt;There are also macros to insert the value at the front of the argument
list (&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt;&lt;/code&gt;) and to insert the value where a &lt;code class="docutils literal"&gt;&amp;lt;&amp;gt;&lt;/code&gt; symbol is found
(&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I wrote some &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/"&gt;Emacs Lisp&lt;/a&gt; code with the last expression above today, and
I think it makes a good example of why they are useful.&lt;/p&gt;
&lt;p&gt;Here's the use case that inspired me to port them to &lt;a class="reference external" href="https://www.gnu.org/software/emacs/manual/html_node/elisp/"&gt;Emacs
Lisp&lt;/a&gt;.  When I save things from the internet I often want to
create a directory to save them in based on the filename or
some text on a web page or something, but usually there are
spaces or special characters in that text, so I have to
sanitize the text to make it a safe and simple filename.  So I
need to replace all special characters with dashes.  But I
don't want dashes repeated multiple times, just a single dash,
and I don't want dashes followed or preceded by periods, only
the period.&lt;/p&gt;
&lt;p&gt;Here' s some code to do that:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-1" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-1" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tkb-sanitize-for-filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-2" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-2" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;"Clean up characters in STRING that aren't good for&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-3" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-3" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-3"&gt;&lt;/a&gt;&lt;span class="s"&gt;filenames."&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-4" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-4" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-5" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-5" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"[^-.a-z0-9]+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-6" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-6" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-7" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-7" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-\\."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-8" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-8" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-9" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-9" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"\\.+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-10" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-10" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"^-+"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-11" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-11" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;replace-regexp-in-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-+$"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-12" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-12" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-13" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-13" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tkb-sanitize-kill-for-filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-14" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-14" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;"Clean up characters that aren't good for filenames in the&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-15" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-15" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-15"&gt;&lt;/a&gt;&lt;span class="s"&gt;top of the kill&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-16" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-16" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-16"&gt;&lt;/a&gt;&lt;span class="s"&gt;ring and put the result on the top of the kill ring."&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-17" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-17" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;;; gets the kill or the system clipboard if it is new.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-18" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-18" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;interactive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;current-kill&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-19" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-19" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;new-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;tkb-sanitize-for-filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-20" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-20" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Old string: %s\nNew String: %s"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;new-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-21" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-21" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kill-new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;new-string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-22" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-22" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-22"&gt;&lt;/a&gt;
&lt;a id="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-23" name="rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-23" href="https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/#rest_code_e4ca9f20aa5f4b1c9a2834ced0c92cdf-23"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"C-c k S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'tkb-sanitize-kill-for-filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the function &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;tkb-sanitize-kill-for-filename&lt;/span&gt;&lt;/code&gt; that I use
interactively gets uses &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;(current-kill&lt;/span&gt; 0 t)&lt;/code&gt; because it either
returns the top of the kill ring, or if the system clipboard is newer
it puts that on top of the kill ring and returns it.  (The docstring
of &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;current-kill&lt;/span&gt;&lt;/code&gt; makes that a little difficult to figure out.)&lt;/p&gt;
&lt;p&gt;So if I have the name of a product as
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;"***Flashy####Product%%%%Name!!!!"&lt;/span&gt;&lt;/code&gt; I copy that to the clipboard
with &lt;span class="key"&gt;⌘-C&lt;/span&gt;, switch to emacs, do &lt;span class="key"&gt;C-c k S&lt;/span&gt;, switch back to
whatever program is saving the file, and use the generated,
sanitized name &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Flashy-Product-Name&lt;/span&gt;&lt;/code&gt; with &lt;span class="key"&gt;⌘-V&lt;/span&gt;.  Nifty!&lt;/p&gt;
&lt;p&gt;(And if you've ever wondered what the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Unicode"&gt;Unicode&lt;/a&gt; character for the Mac
keyboard &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Command_key"&gt;Command key&lt;/a&gt; (⌘) is, it is the PLACE OF INTEREST SIGN, and
you can enter it in &lt;span class="app"&gt;Emacs&lt;/span&gt; by &lt;span class="key"&gt;C-x 8 RETURN PLACE OF
INTEREST SIGN⏎&lt;/span&gt;.  The symbol they use for for the key labeled alt and
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Option_key"&gt;option&lt;/a&gt; (⌥) is the Unicode OPTION KEY, and the symbol they use for
the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Shift_key"&gt;Shift Key&lt;/a&gt; (⇧) is UPWARDS WHITE ARROW.  I'm surprised they
don't have a special symbol for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Control_key"&gt;Control&lt;/a&gt;, but it looks like they just
use the plain ASCII ^, known in Unicode as CIRCUMFLEX ACCENT.)&lt;/p&gt;
&lt;p&gt;Anyway, &lt;a class="reference external" href="https://tkurtbond.github.io/arrows-for-emacs.zip"&gt;here&lt;/a&gt;'s a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Info-ZIP"&gt;ZIP&lt;/a&gt; file with the Emacs Lisp source for the arrow
macros so you can use them if you've been convinced of their
usefulness by this post.  It also has some minimal documentation in
the &lt;span class="file"&gt;README.md&lt;/span&gt; that came from the &lt;span class="file"&gt;README.md&lt;/span&gt; from
&lt;a class="reference external" href="https://github.com/nightfly19/cl-arrows"&gt;cl-arrows&lt;/a&gt;, which seems to repeat the information from the
docstrings for the macros.&lt;/p&gt;
&lt;section id="section-1"&gt;
&lt;h2&gt;2021-09-07&lt;/h2&gt;
&lt;p&gt;Now in a &lt;a class="reference external" href="https://github.com/tkurtbond/arrow-macros-for-emacs"&gt;Gitub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2021-09-07 13:25:09 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;
&lt;/section&gt;</description><category>arrow macros</category><category>clojure</category><category>common lisp</category><category>emacs</category><category>emacs lisp</category><category>unicode</category><guid>https://tkurtbond.github.io/posts/2020/07/03/arrow-macros-in-emacs-lisp/</guid><pubDate>Fri, 03 Jul 2020 18:11:16 GMT</pubDate></item><item><title>Distributing ASDF systems with ABCL, sorta</title><link>https://tkurtbond.github.io/posts/2020/06/29/distributing-asdf-systems-with-abcl-sorta/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;The Reddit thread &lt;a class="reference external" href="https://www.reddit.com/r/lisp/comments/2u7m4k/how_do_you_compile_a_runnable_deployable_jar_with/"&gt;How do you compile a runnable, deployable JAR with
ABCL?&lt;/a&gt; doesn't offer a solution, unfortunately. &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2020/06/29/distributing-asdf-systems-with-abcl-sorta/#footnote-1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; But it leads to
an &lt;a class="reference external" href="https://abcl.org/"&gt;Armed Bear Common Lisp (ABCL)&lt;/a&gt; TRAC ticket (&lt;a class="reference external" href="https://abcl.org/trac/ticket/383"&gt;T1&lt;/a&gt;) which leads to
another (&lt;a class="reference external" href="https://abcl.org/trac/ticket/442"&gt;T2&lt;/a&gt;) which leads some documentation on package ABCL for
distribution (&lt;a class="reference external" href="https://github.com/armedbear/abcl/blob/master/doc/packaging-abcl.org"&gt;D1&lt;/a&gt;) which talks about how the &lt;a class="reference external" href="https://github.com/armedbear/abcl/blob/master/doc/packaging-abcl.org#abcl-aio"&gt;abcl-aio.jar&lt;/a&gt; target is
used to package &lt;span class="file"&gt;abcl.jar&lt;/span&gt; and &lt;span class="file"&gt;abcl-contrib.jar&lt;/span&gt; for
distribution, then describes a way it might be done in the section
&lt;a class="reference external" href="https://github.com/armedbear/abcl/blob/master/doc/packaging-abcl.org#current-hack"&gt;Current Hack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Basically, it says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Current hack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ideally, we would like allow the AIO mechanism to include
additional ASDF systems in the single jar artifact.&lt;/p&gt;
&lt;p&gt;Currently one can hack this together by:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Manually extracting the abcl-aio.jar artifact to a file-system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Placing the necessary ASDF systems in the resulting “contrib”
directory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Recreating the single archive from the file-system
contents.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="footnote-1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2020/06/29/distributing-asdf-systems-with-abcl-sorta/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Though it does talking about distributing an ABCL application
as a servlet and WAR file.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;</description><category>abcl</category><category>asdf</category><category>common lisp</category><guid>https://tkurtbond.github.io/posts/2020/06/29/distributing-asdf-systems-with-abcl-sorta/</guid><pubDate>Mon, 29 Jun 2020 20:30:21 GMT</pubDate></item><item><title>Binding a symbol defined with DEFCONSTANT with LET is not portable in Common Lisp</title><link>https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;a class="reference external" href="http://www.sbcl.org/"&gt;SBCL&lt;/a&gt; and &lt;a class="reference external" href="https://ccl.clozure.com/"&gt;CCL&lt;/a&gt; and &lt;a class="reference external" href="https://clisp.sourceforge.io/"&gt;CLISP&lt;/a&gt; think binding a symbol defined with &lt;code class="docutils literal"&gt;defconstant&lt;/code&gt;
is an error, so if you do&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_3c8127ebbdb844f4ba8543195a2f05ca-1" name="rest_code_3c8127ebbdb844f4ba8543195a2f05ca-1" href="https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/#rest_code_3c8127ebbdb844f4ba8543195a2f05ca-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defconstant&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_3c8127ebbdb844f4ba8543195a2f05ca-2" name="rest_code_3c8127ebbdb844f4ba8543195a2f05ca-2" href="https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/#rest_code_3c8127ebbdb844f4ba8543195a2f05ca-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you get an error.  But in &lt;a class="reference external" href="https://abcl.org/"&gt;ABCL&lt;/a&gt; and &lt;a class="reference external" href="https://common-lisp.net/project/ecl/"&gt;ECL&lt;/a&gt; you don’t.&lt;/p&gt;
&lt;p&gt;If you try&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_dbb0a2829897484bb34b66877b98d748-1" name="rest_code_dbb0a2829897484bb34b66877b98d748-1" href="https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/#rest_code_dbb0a2829897484bb34b66877b98d748-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in SBCL and CCL you get an error when the function is compiled.
In SBCL the function is defined, but always gives an error when run.
In CCL the function does not get defined.&lt;/p&gt;</description><category>abcl</category><category>ccl</category><category>clisp</category><category>common lisp</category><category>ecl</category><category>sbcl</category><guid>https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/</guid><pubDate>Sat, 25 Apr 2020 03:46:39 GMT</pubDate></item><item><title>Playing with Hashlife</title><link>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;C.P. found &lt;a class="reference external" href="https://github.com/stylewarning"&gt;Robert Smith&lt;/a&gt;'s &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random/tree/master/hashlife"&gt;implementation&lt;/a&gt; of Bill Gosper's HASHLIFE
algorithm and wanted my help with running it.  I cloned the &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random"&gt;repo&lt;/a&gt; it
was in and ran &lt;code class="docutils literal"&gt;sbcl&lt;/code&gt; in the &lt;code class="docutils literal"&gt;hashlife&lt;/code&gt; directory.  Then I
entered:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code lisp"&gt;&lt;a id="rest_code_b92181d2e47b4087938100dcb1766860-1" name="rest_code_b92181d2e47b4087938100dcb1766860-1" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_b92181d2e47b4087938100dcb1766860-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That resulted in a &lt;code class="docutils literal"&gt;Component CHARMLIFE not found&lt;/code&gt; error in sbcl.  I
thought that was odd — it was right there in the current directory.  I
looked at &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;, and the only thing in it was
the quicklisp directory.  The ASDF &lt;a class="reference external" href="https://common-lisp.net/~mmommer/asdf-howto.shtml#sec11"&gt;howto&lt;/a&gt; showed an example of setting
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code lisp"&gt;&lt;a id="rest_code_e788ff3638834855980da9874ebec786-1" name="rest_code_e788ff3638834855980da9874ebec786-1" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-2" name="rest_code_e788ff3638834855980da9874ebec786-2" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;;; Default directories, usually just the ``current directory''&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-3" name="rest_code_e788ff3638834855980da9874ebec786-3" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;*default-pathname-defaults*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-4" name="rest_code_e788ff3638834855980da9874ebec786-4" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-5" name="rest_code_e788ff3638834855980da9874ebec786-5" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;;; Additional places where ASDF can find&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-6" name="rest_code_e788ff3638834855980da9874ebec786-6" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;;; system definition files&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-7" name="rest_code_e788ff3638834855980da9874ebec786-7" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Other"&gt;#p"/home/foo/lisp/systems/"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e788ff3638834855980da9874ebec786-8" name="rest_code_e788ff3638834855980da9874ebec786-8" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_e788ff3638834855980da9874ebec786-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Other"&gt;#p"/usr/share/common-lisp/systems/"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Noticing that it had the symbol &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;*default-pathname-defaults*&lt;/span&gt;&lt;/code&gt; in the
new value, I guessed that it being missing from mine caused ASDF to
not find the system in the current directory.  So I added it and tried
again.  This time ASDF couldn't find &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;cl-charms&lt;/span&gt;&lt;/code&gt;.  I guessed and
used &lt;a class="reference external" href="https://www.quicklisp.org/"&gt;Quicklisp&lt;/a&gt; to load it.  That worked.  Then I looked at
&lt;code class="docutils literal"&gt;charmlife.lisp&lt;/code&gt; and looked at the &lt;code class="docutils literal"&gt;main&lt;/code&gt; function and figured out
how to run it and how to interact with the program when it was running.&lt;/p&gt;
&lt;p&gt;Here's what I had to do:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code lisp"&gt;&lt;a id="rest_code_664aa5698af54f4ca90b0a5731f25076-1" name="rest_code_664aa5698af54f4ca90b0a5731f25076-1" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_664aa5698af54f4ca90b0a5731f25076-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_664aa5698af54f4ca90b0a5731f25076-2" name="rest_code_664aa5698af54f4ca90b0a5731f25076-2" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_664aa5698af54f4ca90b0a5731f25076-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'*default-pathname-defaults*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_664aa5698af54f4ca90b0a5731f25076-3" name="rest_code_664aa5698af54f4ca90b0a5731f25076-3" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_664aa5698af54f4ca90b0a5731f25076-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_664aa5698af54f4ca90b0a5731f25076-4" name="rest_code_664aa5698af54f4ca90b0a5731f25076-4" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_664aa5698af54f4ca90b0a5731f25076-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ql:quickload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"cl-charms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_664aa5698af54f4ca90b0a5731f25076-5" name="rest_code_664aa5698af54f4ca90b0a5731f25076-5" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_664aa5698af54f4ca90b0a5731f25076-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_664aa5698af54f4ca90b0a5731f25076-6" name="rest_code_664aa5698af54f4ca90b0a5731f25076-6" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_664aa5698af54f4ca90b0a5731f25076-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;charmlife:main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>common lisp</category><category>hashlife</category><category>life</category><guid>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</guid><pubDate>Fri, 08 Nov 2019 14:43:19 GMT</pubDate></item><item><title>Fun with Lisp: notf and cdrf</title><link>https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I actually use these in Emacs Lisp, for which you'd need a
&lt;code&gt;(require 'cl))&lt;/code&gt;, but the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;define-modify-macro&lt;/span&gt;&lt;/code&gt; is
originally from Common Lisp.&lt;/p&gt;
&lt;p&gt;These are trivial, but useful.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-1" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-1" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;define-modify-macro&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;rest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-2" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-2" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-3" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-3" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-4" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-4" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-4"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; t&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-5" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-5" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-6" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-6" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-6"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; nil&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-7" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-7" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-8" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-8" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cadadr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-9" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-9" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-9"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; (a (b (c nil)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-10" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-10" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cadadr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-11" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-11" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-11"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; (a (b (c t)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-12" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-12" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;[1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;5]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-13" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-13" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;aref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-14" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-14" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-14"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; [1 2 3 nil 5]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-15" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-15" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;notf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;aref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-16" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-16" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-16"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; [1 2 3 t 5]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-17" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-17" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-18" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-18" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;define-modify-macro&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;cdrf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;rest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-19" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-19" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-19"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:d&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-20" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-20" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;frob&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nv"&gt;nothing-now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-21" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-21" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-21"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;member&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-22" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-22" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;frob&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-23" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-23" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cdrf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_ab5807fe652b41318ec7d03120b7d2d3-24" name="rest_code_ab5807fe652b41318ec7d03120b7d2d3-24" href="https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/#rest_code_ab5807fe652b41318ec7d03120b7d2d3-24"&gt;&lt;/a&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;;=&amp;gt; (1 2 3)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>common lisp</category><category>emacs lisp</category><guid>https://tkurtbond.github.io/posts/2008/08/15/fun-with-lisp-notf-and-cdrf/</guid><pubDate>Fri, 15 Aug 2008 23:59:36 GMT</pubDate></item><item><title>Slime Oddity</title><link>https://tkurtbond.github.io/posts/2005/10/05/2005-10-05/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;For some reason, clisp version 2.35 installed from the FreeBSD ports
doesn't have &lt;code class="docutils literal"&gt;:PC386&lt;/code&gt; in &lt;code class="docutils literal"&gt;*FEATURES*&lt;/code&gt;; without this, Slime from CVS
stops with a continuable error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;** - Continuable Error
INTERN("*DOCUMENTATION*"): #&amp;lt;PACKAGE SYSTEM&amp;gt; is locked
If you continue (by typing 'continue'): Ignore the lock and proceed
The following restarts are also available:
SKIP           :R1      skip (COMPILE-FILES-IF-NEEDED-SERIALLY #)
STOP           :R2      stop loading file
/extra/sw/src/slime/swank-loader.lisp
ABORT          :R3      ABORT&lt;/pre&gt;
&lt;p&gt;And after that, even if you continue slime is never able to connect to
swank.&lt;/p&gt;</description><category>common lisp</category><category>old blog</category><category>slime</category><guid>https://tkurtbond.github.io/posts/2005/10/05/2005-10-05/</guid><pubDate>Wed, 05 Oct 2005 05:00:00 GMT</pubDate></item><item><title>Common Lisp, SBCL, and CLIM; Recent Reading</title><link>https://tkurtbond.github.io/posts/2003/11/22/2003-11-22-sbcl-author-of-the-century/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;section id="common-lisp-sbcl-and-clim"&gt;
&lt;h2&gt;Common Lisp, SBCL, and CLIM&lt;/h2&gt;
&lt;p&gt;I finally took the time to figure out how to install &lt;a class="reference external" href="http://clim.mikemac.com/"&gt;McCLIM&lt;/a&gt; under FreeBSD.  The first thing to do was
install &lt;a class="reference external" href="http://sbcl.sourceforge.net/"&gt;SBCL&lt;/a&gt; from scratch; the
FreeBSD port doesn't install all the SBCL extras, but they're needed
to build McCLIM, especially ASDF.  The other things I needed to do were
described in the &lt;code class="docutils literal"&gt;INSTALL.SBCL&lt;/code&gt; from the McCLIM release.  I had to
install &lt;a class="reference external" href="http://www.cliki.net/CLX"&gt;CLX&lt;/a&gt; for SBCL using ASDF.  This
proceeded with only one hitch: I needed a &lt;cite&gt;~/.sbcl/trusted-uids.lisp&lt;/cite&gt;
for some reason.  Once that was done it was easy to build McCLIM for
SBCL and run the demo applications.  Now that I know how to build
McCLIM I'll be able to investigate CLIM.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="recent-reading"&gt;
&lt;h2&gt;Recent Reading&lt;/h2&gt;
&lt;ul class="simple" id="author-of-the-century"&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;J.R.R. Tolkien: Author of the Century&lt;/cite&gt;, by Tom Shippey.  I think I
must have read &lt;cite&gt;The Hobbit&lt;/cite&gt; and &lt;cite&gt;The Lord of the Rings&lt;/cite&gt; for the first
time in 1977, when I was still quite young, and like many was
captivated immediately.  I read it again many times and enjoyed it just
as much each time.  It's one of those books that I return to and re-
read every few years.  I would not, however, have thought of Tolkien as
the “Author of the Century”, but in this book and &lt;cite&gt;The Road to
Middle-Earth&lt;/cite&gt; Shippey makes a very persuasive argument for just that,
pointing out that Tolkien may well have been the person with the
&lt;em&gt;deepest&lt;/em&gt; understanding of the English &lt;em&gt;language&lt;/em&gt; in this century, and
showing how his professional background as a philologist and language
scholar formed his fiction.  In any case, both books made me appreciate
much better the subtlety and depth of Tolkien's fiction and has the
best possible outcome for literary analysis: it made me want to read
the books again, as well as look further into the books edited by
J.R.R Tolkien's son, Christopher Tolkien.  I've read the &lt;cite&gt;The
Silmarillion&lt;/cite&gt; and &lt;cite&gt;Unfinished Tales of Númenor and Middle Earth&lt;/cite&gt;, but
I've not read any of the twelve volume of &lt;cite&gt;The History of Middle
Earth&lt;/cite&gt;, and I think after this it would be interesting to do so.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;</description><category>clim</category><category>common lisp</category><category>old blog</category><category>recent reading</category><category>sbcl</category><guid>https://tkurtbond.github.io/posts/2003/11/22/2003-11-22-sbcl-author-of-the-century/</guid><pubDate>Sat, 22 Nov 2003 05:00:00 GMT</pubDate></item></channel></rss>