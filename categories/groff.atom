<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://tkurtbond.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Lacking Natural Simplicity (Posts about groff)</title>
  <id>https://tkurtbond.github.io/categories/groff.atom</id>
  <updated>2021-06-10T18:16:40Z</updated>
  <author>
    <name>T. Kurt Bond</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://tkurtbond.github.io/categories/groff.atom"/>
  <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/categories/groff/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Ted Harding's "A Guide to Typesetting Mathematics using GNU eqn"</title>
    <id>https://tkurtbond.github.io/posts/2021/06/10/ted-hardings-a-guide-to-typesetting-mathematics-using-gnu-eqn/</id>
    <updated>2021-06-10T11:46:55-04:00</updated>
    <published>2021-06-10T11:46:55-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2021/06/10/ted-hardings-a-guide-to-typesetting-mathematics-using-gnu-eqn/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;For reference: The only place I've been able to find the PDF of Ted
Harding's “A Guide to Typesetting Mathematics using GNU eqn” (the link
from troff.org is broken) is in the &lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/"&gt;archives&lt;/a&gt; of the groff mailing
list and archive.org (&lt;a class="reference external" href="https://lists.gnu.org/archive/cgi-bin/namazu.cgi?query=eqnguide&amp;amp;submit=Search%21&amp;amp;idxname=groff&amp;amp;max=20&amp;amp;result=normal&amp;amp;sort=score"&gt;search&lt;/a&gt; for “eqnguide”, since the file is named
&lt;code class="docutils literal"&gt;eqnguide.pdf&lt;/code&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/2013-10/pdfTyBN2VWR1c.pdf"&gt;https://lists.gnu.org/archive/html/groff/2013-10/pdfTyBN2VWR1c.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/2013-10/pdfSVnF38sglo.pdf"&gt;https://lists.gnu.org/archive/html/groff/2013-10/pdfSVnF38sglo.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last was the most recent I found, labeled &lt;em&gt;“Last Revised 27
October 2013”&lt;/em&gt;.  It is also available from &lt;a class="reference external" href="https://web.archive.org/web/20190921224956/https://lists.gnu.org/archive/html/groff/2013-10/pdfSVnF38sglo.pdf"&gt;archive.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Does anyone know of the source to this was ever released?&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="eqn" label="eqn"/>
    <category term="eqnguide" label="eqnguide"/>
    <category term="groff" label="groff"/>
    <category term="ted-harding" label="ted harding"/>
  </entry>
  <entry>
    <title>Paragraph Justification in groff and TeX</title>
    <id>https://tkurtbond.github.io/posts/2020/07/31/paragraph-justification-in-groff-and-tex/</id>
    <updated>2020-07-31T22:42:15-04:00</updated>
    <published>2020-07-31T22:42:15-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2020/07/31/paragraph-justification-in-groff-and-tex/"/>
    <summary type="html">&lt;p&gt;An interesting message thread developed on the groff &lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/"&gt;mailing list&lt;/a&gt;
about various features of &lt;span class="app"&gt;Groff&lt;/span&gt; and &lt;span class="app"&gt;Heirloom Troff&lt;/span&gt;, with
a mention of &lt;span class="app"&gt;neatroff&lt;/span&gt;.  In particular, Steve Izma's post (&lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/2020-07/msg00092.html"&gt;P1&lt;/a&gt;)
discussed how he found &lt;span class="app"&gt;TeX&lt;/span&gt;'s paragraph-at-a-time justification
required as much tweaking as groff's simpler paragraph justification.
That lead to Peter Schaffter's post (&lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/2020-07/msg00101.html"&gt;P2&lt;/a&gt;) linking to an earlier post
(&lt;a class="reference external" href="https://lists.gnu.org/archive/html/groff/2014-03/msg00322.html"&gt;P3&lt;/a&gt;) where he proposed a simpler algorithm to improve &lt;span class="app"&gt;Groff&lt;/span&gt;'s
line-breaking and justification than the full Knuth-Plass
Line-Breaking Algorithm (&lt;a class="reference external" href="http://www.eprg.org/G53DOC/pdfs/knuth-plass-breaking.pdf"&gt;KP1&lt;/a&gt;, &lt;a class="reference external" href="http://litherum.blogspot.com/2015/07/knuth-plass-line-breaking-algorithm.html"&gt;D1&lt;/a&gt;) that &lt;span class="app"&gt;TeX&lt;/span&gt; uses. While
writing this post I ran across another paper, “Global multiple
objective line breaking” by Alex Holkner (&lt;a class="reference external" href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.585.8487"&gt;GMOLB1&lt;/a&gt;, &lt;a class="reference external" href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.585.8487&amp;amp;rep=rep1&amp;amp;type=pdf"&gt;GMOLB2&lt;/a&gt;) that explores
another line breaking algorithm and references some of the other
papers on the subject.&lt;/p&gt;</summary>
    <category term="groff" label="groff"/>
    <category term="heirloom-troff" label="heirloom troff"/>
    <category term="knuth-plass-line-breaking-algorithm" label="knuth-plass line-breaking algorithm"/>
    <category term="neatroff" label="neatroff"/>
    <category term="tex" label="tex"/>
  </entry>
  <entry>
    <title>Text Subtleties</title>
    <id>https://tkurtbond.github.io/posts/2020/07/07/text-subtleties/</id>
    <updated>2020-07-07T19:05:13-04:00</updated>
    <published>2020-07-07T19:05:13-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2020/07/07/text-subtleties/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;I just noticed that when &lt;a class="reference external" href="https://www.gnu.org/software/wget/"&gt;wget&lt;/a&gt; tells you the filename of file it just
saved, if your &lt;code class="docutils literal"&gt;LANG=C&lt;/code&gt; then it surrounds it with apostrophes ('), but
if your &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;LANG=en_US.UTF-8&lt;/span&gt;&lt;/code&gt; then it surrounds it with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Unicode"&gt;Unicode&lt;/a&gt; LEFT SINGLE
QUOTATION MARK (‘)and RIGHT SINGLE QUOTATION MARK (’).  I appreciate
little subtleties like that.&lt;/p&gt;
&lt;p&gt;I use Unicode characters in most of the writing I do.  For &lt;a class="reference external" href="https://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;,
which I rarely use these days, I use &lt;a class="reference external" href="https://en.wikipedia.org/wiki/XeTeX"&gt;XeTeX&lt;/a&gt;, which understands UTF-8
natively.  &lt;a class="reference external" href="https://en.wikipedia.org/wiki/ConTeXt"&gt;ConTeXt&lt;/a&gt;, which I do use regularly, also understands UTF-8
natively.  For &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; I use the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-k&lt;/span&gt;&lt;/code&gt; switch, which preprocesses the
text with &lt;span class="command"&gt;preconv&lt;/span&gt; (which is part of &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt;), converting the
UTF-8 characters into &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; character escapes, since &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; &lt;em&gt;doesn't&lt;/em&gt;
understand UTF-8 natively.  Of course, if it is &lt;a class="reference external" href="https://docutils.sourceforge.io/rst.html"&gt;ReStructuredText&lt;/a&gt; that
I'm working with then &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt; can be configured to use any one of
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/ConTeXt"&gt;ConTeXt&lt;/a&gt;, and &lt;a class="reference external" href="https://www.gnu.org/software/groff/"&gt;groff&lt;/a&gt; for creating PDF output, and since
&lt;span class="command"&gt;rst2html.py&lt;/span&gt; just produces &lt;a class="reference external" href="https://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt; that includes any
character you put in your source you can just use &lt;span class="command"&gt;xelatex&lt;/span&gt;
as part of your commands to turn it into PDF.  And sometimes, when I'm
feeling whimsical, I use &lt;span class="app"&gt;Heirloom Troff&lt;/span&gt;, from the &lt;a class="reference external" href="https://n-t-roff.github.io/heirloom/doctools.html"&gt;Heirloom
Documentation Tools&lt;/a&gt;, which understands UTF-8 natively.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2020-08-03 16:02:52 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%04y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;&lt;/div&gt;</summary>
    <category term="context" label="context"/>
    <category term="groff" label="groff"/>
    <category term="heirloom-troff" label="heirloom troff"/>
    <category term="text" label="text"/>
    <category term="unicode" label="unicode"/>
    <category term="utf-8" label="utf-8"/>
    <category term="xelatex" label="xelatex"/>
  </entry>
  <entry>
    <title>Making digest-sized pages with pandoc and ms output</title>
    <id>https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/</id>
    <updated>2020-03-13T14:01:10-04:00</updated>
    <published>2020-03-13T14:01:10-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/"/>
    <summary type="html">&lt;div&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;After I wrote this post, I made a last minute check of the options
to &lt;span class="app"&gt;pandoc&lt;/span&gt; and found that the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=&lt;/span&gt;&lt;/code&gt; option
does exactly what I want.  How embarrassing.  So I changed this
post, showing both the easy way and the hard way to do it.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I use &lt;a class="reference external" href="https://pandoc.org/"&gt;pandoc&lt;/a&gt; to produce digest-sized pages (5½×8½ inches) in PDF
documents from &lt;a class="reference external" href="https://en.wikipedia.org/wiki/ReStructuredText"&gt;ReStructuredText&lt;/a&gt;.  I have a &lt;span class="app"&gt;ms&lt;/span&gt; output template,
&lt;span class="file"&gt;digest2.ms&lt;/span&gt; in &lt;span class="file"&gt;~/pandoc/templates&lt;/span&gt; that sets the page
width and page height correctly.  Unfortunately, there is no way to
set the papersize properly in the template. &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#heirloomtroff" id="id1"&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Luckily, &lt;span class="app"&gt;pandoc&lt;/span&gt; has the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=&lt;/span&gt;&lt;/code&gt; option to pass
options to the PDF engine that &lt;span class="app"&gt;pandoc&lt;/span&gt; is using, in this case
&lt;span class="app"&gt;pdfroff&lt;/span&gt;.  In the case of &lt;span class="app"&gt;ms&lt;/span&gt; output the thing to do is
pass the argument &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; &lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#recursively" id="id2"&gt;2&lt;/a&gt;,
like below.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pdf-engine-opt.html"&gt;GNUmakefile.pandoc-digest-pdf-engine-opt&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pdf-engine-opt"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_8d76b135b72d43cca40c91681803edac-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.digest.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_8d76b135b72d43cca40c91681803edac-2"&gt;&lt;/a&gt;        pandoc -s -r rst -w ms --template&lt;span class="o"&gt;=&lt;/span&gt;digest2 &lt;span class="k"&gt;$(&lt;/span&gt;VARIABLES&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_8d76b135b72d43cca40c91681803edac-3"&gt;&lt;/a&gt;                --output&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt; --pdf-engine-opt&lt;span class="o"&gt;=&lt;/span&gt;-P-p8.5i,5.5i $&amp;lt;
&lt;/pre&gt;&lt;p&gt;Unfortunately when I originally had this need for digest pages I
hadn't realized that the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=&lt;/span&gt;&lt;/code&gt; option existed.&lt;/p&gt;
&lt;p&gt;So I used &lt;code class="docutils literal"&gt;pandoc &lt;span class="pre"&gt;--verbose&lt;/span&gt;&lt;/code&gt; and found the &lt;span class="app"&gt;pdfroff&lt;/span&gt; invocation
&lt;span class="app"&gt;pandoc&lt;/span&gt; uses, and made my &lt;span class="app"&gt;pandoc&lt;/span&gt; invocation output
&lt;span class="app"&gt;ms&lt;/span&gt; instead of PDF, then passed it through a &lt;span class="app"&gt;pdfroff&lt;/span&gt;
command with the added &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; argument.  Here's what I put
in my &lt;span class="file"&gt;GNUmakefile&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-save-ms.html"&gt;GNUmakefile.pandoc-digest-save-ms&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-save-ms"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_84d2232ac0bf4cd197a58a6512998407-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.digest.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_84d2232ac0bf4cd197a58a6512998407-2"&gt;&lt;/a&gt;        pandoc -s -r rst -w ms -s --template&lt;span class="o"&gt;=&lt;/span&gt;digest2 &lt;span class="k"&gt;$(&lt;/span&gt;VARIABLES&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_84d2232ac0bf4cd197a58a6512998407-3"&gt;&lt;/a&gt;               --output&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;.ms $&amp;lt;
&lt;a name="rest_code_84d2232ac0bf4cd197a58a6512998407-4"&gt;&lt;/a&gt;        pdfroff -ms -mpdfmark -e -t -k -KUTF-8 --no-toc-relocation &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_84d2232ac0bf4cd197a58a6512998407-5"&gt;&lt;/a&gt;                -P-p8.5i,5.5i &lt;span class="nv"&gt;$*&lt;/span&gt;.ms &amp;gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Or, if you don't care about having the &lt;span class="app"&gt;ms&lt;/span&gt; output for debugging,
you could do it as a pipeline:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pipeline.html"&gt;GNUmakefile.pandoc-digest-pipeline&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.pandoc-digest-pipeline"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_d7ca5558c86943e6b8c7a6745e77c726-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.digest.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_d7ca5558c86943e6b8c7a6745e77c726-2"&gt;&lt;/a&gt;        pandoc -s -r rst -w ms -s --template&lt;span class="o"&gt;=&lt;/span&gt;digest2 &lt;span class="k"&gt;$(&lt;/span&gt;VARIABLES&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_d7ca5558c86943e6b8c7a6745e77c726-3"&gt;&lt;/a&gt;               --output&lt;span class="o"&gt;=&lt;/span&gt;- $&amp;lt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_d7ca5558c86943e6b8c7a6745e77c726-4"&gt;&lt;/a&gt;        pdfroff -ms -mpdfmark -e -t -k -KUTF-8 --no-toc-relocation &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_d7ca5558c86943e6b8c7a6745e77c726-5"&gt;&lt;/a&gt;                -P-p8.5i,5.5i - &amp;gt;&lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;There are still some instances where this technique of having
&lt;span class="app"&gt;pandoc&lt;/span&gt; output the &lt;span class="app"&gt;ms&lt;/span&gt; source directly and pass it through
&lt;span class="app"&gt;pdfroff&lt;/span&gt; yourself.  For instance, if you have to do some
massaging of the &lt;span class="app"&gt;ms&lt;/span&gt; source, like changing &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;.RS/.RE&lt;/span&gt;&lt;/code&gt; to
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;.QS/.QE&lt;/span&gt;&lt;/code&gt; to get around the problem with block quotes in &lt;span class="app"&gt;ms&lt;/span&gt;
output in the current &lt;span class="app"&gt;pandoc&lt;/span&gt; release, discussed &lt;a class="reference external" href="https://tkurtbond.github.io/posts/2020/03/11/pandoc-discuss-post-can-the-rsre-macros-in-ms-output-be-replaced-with-qsqe/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;dl class="footnote brackets"&gt;
&lt;dt class="label" id="heirloomtroff"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#id1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Heirloom Troff (originally at &lt;a class="reference external" href="http://heirloom.sourceforge.net/doctools.html"&gt;H1&lt;/a&gt;, but now &lt;em&gt;I
think&lt;/em&gt; more up to date at &lt;a class="reference external" href="http://n-t-roff.github.io/heirloom/doctools.html"&gt;H2&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/n-t-roff/heirloom-doctools"&gt;H3&lt;/a&gt;) has the &lt;code class="docutils literal"&gt;.mediasize&lt;/code&gt; and
&lt;code class="docutils literal"&gt;.papersize&lt;/code&gt; commands for that.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="recursively"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://tkurtbond.github.io/posts/2020/03/13/making-digest-sized-pages-with-pandoc-and-ms-output/#id2"&gt;2&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Amusingly, &lt;span class="app"&gt;pandoc&lt;/span&gt; passes the
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--pdf-engine-opt=-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; argument to &lt;span class="app"&gt;pdfroff&lt;/span&gt;,
which passes the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-P-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; part to &lt;span class="app"&gt;groff&lt;/span&gt;, which
passes the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-p8.5i,5.5i&lt;/span&gt;&lt;/code&gt; part to the (final) post processor — I'm
not sure if &lt;em&gt;that&lt;/em&gt; is &lt;span class="app"&gt;grops&lt;/span&gt; or &lt;span class="app"&gt;gropdf&lt;/span&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;</summary>
    <category term="computer" label="computer"/>
    <category term="digest" label="digest"/>
    <category term="groff" label="groff"/>
    <category term="make" label="make"/>
    <category term="ms-macros" label="ms macros"/>
    <category term="pandoc" label="pandoc"/>
    <category term="pdfroff" label="pdfroff"/>
    <category term="text-processing" label="text processing"/>
  </entry>
  <entry>
    <title>pandoc-discuss post: Can the .RS/.RE macros in ms output be replaced with .QS/.QE?</title>
    <id>https://tkurtbond.github.io/posts/2020/03/11/pandoc-discuss-post-can-the-rsre-macros-in-ms-output-be-replaced-with-qsqe/</id>
    <updated>2020-03-11T20:35:47-04:00</updated>
    <published>2020-03-11T20:35:47-04:00</published>
    <author>
      <name>T. Kurt Bond</name>
    </author>
    <link rel="alternate" type="text/html" href="https://tkurtbond.github.io/posts/2020/03/11/pandoc-discuss-post-can-the-rsre-macros-in-ms-output-be-replaced-with-qsqe/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;On March 9, 2020 I made a &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/pandoc-discuss/zulmB6uujgc"&gt;post&lt;/a&gt; on the pandoc-discuss mailing list
that explains some changes to pandoc to better handle block quotes in
ms output, and a workaround for it until the version with changes
comes out, but I forgot to mention it here.&lt;/p&gt;
&lt;p&gt;In short, use a pipeline like this:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.change-RS-RE-to-QS-QE.html"&gt;GNUmakefile.change-RS-RE-to-QS-QE&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/GNUmakefile.change-RS-RE-to-QS-QE"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code make"&gt;&lt;a name="rest_code_65841705b4aa433681d88012d1a4cd28-1"&gt;&lt;/a&gt;&lt;span class="nf"&gt;%.qs.ms.pdf &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; %.&lt;span class="n"&gt;rst&lt;/span&gt;
&lt;a name="rest_code_65841705b4aa433681d88012d1a4cd28-2"&gt;&lt;/a&gt;        pandoc --verbose -r rst -w ms &lt;span class="k"&gt;$(&lt;/span&gt;PANDOCOPTS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_65841705b4aa433681d88012d1a4cd28-3"&gt;&lt;/a&gt;                --output&lt;span class="o"&gt;=&lt;/span&gt;- $&amp;lt; &lt;span class="p"&gt;|&lt;/span&gt; gsed -e &lt;span class="s1"&gt;'s/^\.RS$$/.QS/'&lt;/span&gt; -e &lt;span class="s1"&gt;'s/^\.RE$$/.QE/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_65841705b4aa433681d88012d1a4cd28-4"&gt;&lt;/a&gt;        pdfroff -ms -mpdfmark -e -t -k -KUTF-8 -i --no-toc-relocation &amp;gt;&lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary>
    <category term="qsqe" label=".QS/.QE"/>
    <category term="rsre" label=".RS/.RE"/>
    <category term="block-quotes" label="block quotes"/>
    <category term="groff" label="groff"/>
    <category term="ms-macros" label="ms macros"/>
    <category term="pandoc" label="pandoc"/>
  </entry>
</feed>
