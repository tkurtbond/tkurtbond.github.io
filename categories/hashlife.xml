<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about hashlife)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/hashlife.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Fri, 25 Feb 2022 15:17:56 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Playing with Hashlife</title><link>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;C.P. found &lt;a class="reference external" href="https://github.com/stylewarning"&gt;Robert Smith&lt;/a&gt;'s &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random/tree/master/hashlife"&gt;implementation&lt;/a&gt; of Bill Gosper's HASHLIFE
algorithm and wanted my help with running it.  I cloned the &lt;a class="reference external" href="https://github.com/stylewarning/lisp-random"&gt;repo&lt;/a&gt; it
was in and ran &lt;code class="docutils literal"&gt;sbcl&lt;/code&gt; in the &lt;code class="docutils literal"&gt;hashlife&lt;/code&gt; directory.  Then I
entered:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a id="rest_code_09bd633bd83b48479551338e2ff20ca7-1" name="rest_code_09bd633bd83b48479551338e2ff20ca7-1" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_09bd633bd83b48479551338e2ff20ca7-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt; &lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt; &lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;That resulted in a &lt;code class="docutils literal"&gt;Component CHARMLIFE not found&lt;/code&gt; error in sbcl.  I
thought that was odd — it was right there in the current directory.  I
looked at &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;, and the only thing in it was
the quicklisp directory.  The ASDF &lt;a class="reference external" href="https://common-lisp.net/~mmommer/asdf-howto.shtml#sec11"&gt;howto&lt;/a&gt; showed an example of setting
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;asdf:*central-registry*&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-1" name="rest_code_88e2a382387c4f038774a6ca4c61162e-1" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-2" name="rest_code_88e2a382387c4f038774a6ca4c61162e-2" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-2"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;;; Default directories, usually just the ``current directory''&lt;/span&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-3" name="rest_code_88e2a382387c4f038774a6ca4c61162e-3" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;*default-pathname-defaults*&lt;/span&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-4" name="rest_code_88e2a382387c4f038774a6ca4c61162e-4" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-5" name="rest_code_88e2a382387c4f038774a6ca4c61162e-5" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-5"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;;; Additional places where ASDF can find&lt;/span&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-6" name="rest_code_88e2a382387c4f038774a6ca4c61162e-6" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;;; system definition files&lt;/span&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-7" name="rest_code_88e2a382387c4f038774a6ca4c61162e-7" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-7"&gt;&lt;/a&gt;    &lt;span class="l l-Other"&gt;#p"/home/foo/lisp/systems/"&lt;/span&gt;
&lt;a id="rest_code_88e2a382387c4f038774a6ca4c61162e-8" name="rest_code_88e2a382387c4f038774a6ca4c61162e-8" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_88e2a382387c4f038774a6ca4c61162e-8"&gt;&lt;/a&gt;    &lt;span class="l l-Other"&gt;#p"/usr/share/common-lisp/systems/"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Noticing that it had the symbol &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;*default-pathname-defaults*&lt;/span&gt;&lt;/code&gt; in the
new value, I guessed that it being missing from mine caused ASDF to
not find the system in the current directory.  So I added it and tried
again.  This time ASDF couldn't find &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;cl-charms&lt;/span&gt;&lt;/code&gt;.  I guessed and
used &lt;a class="reference external" href="https://www.quicklisp.org/"&gt;Quicklisp&lt;/a&gt; to load it.  That worked.  Then I looked at
&lt;code class="docutils literal"&gt;charmlife.lisp&lt;/code&gt; and looked at the &lt;code class="docutils literal"&gt;main&lt;/code&gt; function and figured out
how to run it and how to interact with the program when it was running.&lt;/p&gt;
&lt;p&gt;Here's what I had to do:&lt;/p&gt;
&lt;pre class="code lisp"&gt;&lt;a id="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-1" name="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-1" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;
&lt;a id="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-2" name="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-2" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-2"&gt;&lt;/a&gt;      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons&lt;/span&gt; &lt;span class="ss"&gt;'*default-pathname-defaults*&lt;/span&gt;
&lt;a id="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-3" name="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-3" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-3"&gt;&lt;/a&gt;            &lt;span class="nv"&gt;asdf:*central-registry*&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-4" name="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-4" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ql:quickload&lt;/span&gt; &lt;span class="s"&gt;"cl-charms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-5" name="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-5" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;asdf:operate&lt;/span&gt; &lt;span class="ss"&gt;'asdf:load-op&lt;/span&gt; &lt;span class="ss"&gt;'charmlife&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-6" name="rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-6" href="https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/#rest_code_9e8ffa8cc20a46f4b8d36bc389ba2120-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;charmlife:main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;</description><category>common lisp</category><category>hashlife</category><category>life</category><guid>https://tkurtbond.github.io/posts/2019/11/08/playing-with-hashlife/</guid><pubDate>Fri, 08 Nov 2019 14:43:19 GMT</pubDate></item></channel></rss>