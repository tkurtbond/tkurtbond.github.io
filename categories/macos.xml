<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about macos)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/macos.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2022 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Tue, 27 Dec 2022 03:30:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Installing a recent version of the A2 operatinng system on UNIX</title><link>https://tkurtbond.github.io/posts/2022/06/10/installing-a-recent-version-of-the-a2-operatinng-system-on-unix/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I recently ran across a &lt;a class="reference external" href="https://svn.inf.ethz.ch/svn/lecturers/a2/trunk/UnixAos/DarwinA2%20Installer/ReadMeFirst!.txt"&gt;document&lt;/a&gt; that explains how to install the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/A2_(operating_system)"&gt;A2&lt;/a&gt;
operating system (formerly Bluebottle, formerly Aos) in the form of
UnixAos hosted on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/MacOS"&gt;macOS&lt;/a&gt;, in the process of explaining how to make a
installer for macOS.  I think the same process will work for any
supported Unix.  [&lt;strong&gt;Later:&lt;/strong&gt; indeed, I used the &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/LinuxA2-64bit.tgz"&gt;LinuxA2-64bit.tgz&lt;/a&gt; file
and the same process worked fine on my &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Fedora_Linux"&gt;Fedora&lt;/a&gt; box.]&lt;/p&gt;
&lt;p&gt;I'll summarize what I did.&lt;/p&gt;
&lt;p&gt;I went to &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/"&gt;http://www.informatik.uni-bremen.de/~fld/UnixAos/&lt;/a&gt; and
selected the most recent revision, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/"&gt;rev.9799&lt;/a&gt; at the time of this
writing.  There I downloaded the install script, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/install.UnixA2"&gt;install.UnixA2&lt;/a&gt; and
the version for 64 bit macOS, &lt;a class="reference external" href="http://www.informatik.uni-bremen.de/~fld/UnixAos/rev.9799/DarwinA2-64bit.tgz"&gt;DarwinA2-64bit.tgz&lt;/a&gt;.  (There were also
Linux and Solaris versions for 32 and 64 bit systems.)&lt;/p&gt;
&lt;p&gt;Then I executed &lt;code class="docutils literal"&gt;chmod +x&lt;/code&gt;'ed the install script and ran it, passing
the &lt;span class="file"&gt;.tgz&lt;/span&gt; file to it.&lt;/p&gt;
&lt;p&gt;First, it asks for the installation directory, which should already
exist.  It has a default, but I installed to the directory
&lt;span class="file"&gt;/usr/local/sw/versions/aos/rev.9799&lt;/span&gt;.  Again, I had to create
that directory first.  (I don't like to write into &lt;span class="file"&gt;/usr&lt;/span&gt; or
&lt;span class="file"&gt;/usr/local&lt;/span&gt;, because those directory hierarchies are often
under the systems control.  Nobody uses &lt;span class="file"&gt;/usr/local/sw&lt;/span&gt; for
anything except me.)&lt;/p&gt;
&lt;p&gt;Second, it asks for the file name to copy the &lt;span class="file"&gt;aos&lt;/span&gt; script to.
I installed the &lt;span class="command"&gt;aos&lt;/span&gt; command to
&lt;span class="file"&gt;/Users/tkb/local/rndbin&lt;/span&gt;, (&lt;span class="file"&gt;/home/tkb/local/rndbin&lt;/span&gt; on
non-macOS systems) which is in my path.&lt;/p&gt;
&lt;p&gt;The install script assumes you are running as root, but I ran it first
as my normal user, and since the directory I was installing it to was
owned by me it seems to have worked ok, even though it complained
about &lt;span class="command"&gt;chgrp&lt;/span&gt; not being able to change the group of a &lt;em&gt;bunch&lt;/em&gt;
of files.&lt;/p&gt;
&lt;p&gt;Then when I issued the command &lt;code class="docutils literal"&gt;aos&lt;/code&gt; it started up and displayed a
window with A2 running in it.  (This requires X Windows, so you'll need
to install &lt;a class="reference external" href="https://www.xquartz.org/"&gt;XQuartz&lt;/a&gt; on macOS.)&lt;/p&gt;
&lt;p&gt;Here's a screen shot from macOS:&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Screenshot of A2 running under macOS" src="https://tkurtbond.github.io/a2-screenshot.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Screenshot of A2 running under macOS&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It seems to work ok, both on macOS and Fedora, though I haven't
investigated very much.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2022-06-12 15:39:49 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;</description><category>a2</category><category>aos</category><category>bluebottle</category><category>fedora</category><category>macos</category><category>oberon</category><category>unix</category><guid>https://tkurtbond.github.io/posts/2022/06/10/installing-a-recent-version-of-the-a2-operatinng-system-on-unix/</guid><pubDate>Fri, 10 Jun 2022 15:28:40 GMT</pubDate></item><item><title>Making a newer version of groff work with man and emacs on macOS</title><link>https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I'm posting this mostly to remind myself if I ever have to fiddle with
this again.&lt;/p&gt;
&lt;p&gt;I use a version of &lt;span class="app"&gt;groff&lt;/span&gt; installed from &lt;span class="app"&gt;git&lt;/span&gt; because some
of my documents depend on fixes that are coming out in the next
release, 1.23.0.  I install it on my macOS machine in
&lt;span class="file"&gt;/usr/local/sw/versions/groff/git&lt;/span&gt;.  (The directory hierarchy
under &lt;span class="file"&gt;/usr/local/sw/versions&lt;/span&gt; is where I put programs that I
compile from scratch, to keep them separated from the programs that
come from the operating system and/or package managers.  I often have
more than one version of a program installed, therefore the
&lt;span class="file"&gt;versions&lt;/span&gt; component of the name.)&lt;/p&gt;
&lt;p&gt;Because the &lt;span class="command"&gt;groff&lt;/span&gt; that is first in my path is the new one I
installed, and because &lt;span class="app"&gt;man&lt;/span&gt; on macOS knows to look for man pages
according to what your &lt;code class="docutils literal"&gt;PATH&lt;/code&gt; is, when I say &lt;code class="docutils literal"&gt;man groff_ms&lt;/code&gt; I get
the new man page for &lt;code class="docutils literal"&gt;groff_ms&lt;/code&gt;.  Yay!  Unfortunately, it gets
rendered with the old &lt;span class="app"&gt;groff&lt;/span&gt; that macOS supplies, version
1.19.2, which doesn't include the &lt;code class="docutils literal"&gt;.SY&lt;/code&gt; macro that current versions
of &lt;span class="app"&gt;groff&lt;/span&gt; supply in their &lt;span class="app"&gt;man&lt;/span&gt; macros, and which they
&lt;em&gt;use&lt;/em&gt; in their man pages, so it renders wrong.  A typical example is
that when it renders &lt;span class="man"&gt;groff_ms(7)&lt;/span&gt; the &lt;code class="docutils literal"&gt;groff &lt;span class="pre"&gt;-ms&lt;/span&gt;&lt;/code&gt; and
&lt;code class="docutils literal"&gt;groff &lt;span class="pre"&gt;-m&lt;/span&gt; ms&lt;/code&gt; are missing from the lines in the SYNOPSIS section.
Boo!&lt;/p&gt;
&lt;p&gt;Luckily, &lt;span class="app"&gt;man&lt;/span&gt; takes a &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-C&lt;/span&gt;&lt;/code&gt; option that lets you specify an
alternate configuration file (on macOS the default one is in
&lt;span class="file"&gt;/private/etc/man.conf&lt;/span&gt;), so you can supply one that specifies
the absolute path to the newer &lt;span class="app"&gt;groff&lt;/span&gt; you are using.  So I added&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_4d9eef2ca46c488f8543dc80d2333335-1" name="rest_code_4d9eef2ca46c488f8543dc80d2333335-1" href="https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/#rest_code_4d9eef2ca46c488f8543dc80d2333335-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;man&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'man -C ~/local/etc/man.conf'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to the appropriate shell startup file.  And I can add&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code emacs-lisp"&gt;&lt;a id="rest_code_62162e2647754dabbd38b695dda708f7-1" name="rest_code_62162e2647754dabbd38b695dda708f7-1" href="https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/#rest_code_62162e2647754dabbd38b695dda708f7-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Man-switches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-C ~/local/etc/man.conf"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to my &lt;span class="app"&gt;emacs&lt;/span&gt; configuration so it uses the right version of
&lt;span class="app"&gt;groff&lt;/span&gt; too.&lt;/p&gt;
&lt;p&gt;But a modern &lt;span class="app"&gt;groff&lt;/span&gt; produces ANSI escapes for bold and
underline, rather than the older convention of over-striking via the
backspace character with the same character for bold or with the
underscore character for underlining.  My pager, &lt;span class="app"&gt;less&lt;/span&gt;, can deal
with that, but something in &lt;span class="app"&gt;emacs&lt;/span&gt; doesn't like that, leaving
the buffer with &lt;span class="man"&gt;groff_ms(7)&lt;/span&gt; with underlining on every line.&lt;a class="footnote-reference brackets" href="https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/#manual" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eventually I figured out that the old style over-striking via
backspaces worked just fine with emacs, so I added the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-P-c&lt;/span&gt;&lt;/code&gt; option
to the invocation of &lt;span class="app"&gt;groff&lt;/span&gt; in the NROFF definition in my
modified &lt;span class="file"&gt;man.conf&lt;/span&gt; file.  That tells &lt;span class="command"&gt;groff&lt;/span&gt; to pass
the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-c&lt;/span&gt;&lt;/code&gt; option to the &lt;span class="command"&gt;grotty&lt;/span&gt; output driver, which tells
it to use old-style backspace over-striking.&lt;/p&gt;
&lt;p&gt;This seems overly complicated.&lt;/p&gt;
&lt;p&gt;I suspect I'll need to do something different on the Linux boxes I
use.&lt;/p&gt;
&lt;section id="later"&gt;
&lt;h2&gt;Later&lt;/h2&gt;
&lt;p&gt;Aannnd I was right.  Fedora 33 has a similar problem, which I fixed by
creating a &lt;span class="file"&gt;~/.manpath&lt;/span&gt; file with&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_74744e8ce9494bbfb7ac1481b8d7928b-1" name="rest_code_74744e8ce9494bbfb7ac1481b8d7928b-1" href="https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/#rest_code_74744e8ce9494bbfb7ac1481b8d7928b-1"&gt;&lt;/a&gt;DEFINE       nroff   /sw/versions/groff/git/bin/nroff -mandoc -P-c
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in it.  I found the information I needed in &lt;span class="man"&gt;manpath(5)&lt;/span&gt;, which
documents the format of the &lt;span class="file"&gt;/etc/man_db.conf&lt;/span&gt; file.  (Why isn't
it &lt;span class="man"&gt;man_db.conf(5)&lt;/span&gt;, then?)&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="manual" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Oddly, if I direct &lt;span class="app"&gt;man&lt;/span&gt;'s output to a file, visit that file in
&lt;span class="app"&gt;emacs&lt;/span&gt;, and manually invoke the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Man-fontify-manpage&lt;/span&gt;&lt;/code&gt; function
&lt;span class="app"&gt;emacs&lt;/span&gt; uses to fontify the man page, it &lt;em&gt;doesn't&lt;/em&gt; end up
erroneously underlined.&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;p&gt;&lt;em&gt;Last edited: 2021-09-09 10:11:03 EDT&lt;/em&gt;&lt;/p&gt;
&lt;!-- Local Variables:
time-stamp-format: "%Y-%02m-%02d %02H:%02M:%02S %Z"
time-stamp-start: "\\*Last edited:[ \t]+\\\\?"
time-stamp-end: "\\*\\\\?\n"
time-stamp-line-limit: -20
End: --&gt;
&lt;/section&gt;</description><category>groff</category><category>macos</category><category>troff</category><guid>https://tkurtbond.github.io/posts/2021/07/26/making-a-newer-version-of-groff-work-with-man-and-emacs-on-macos/</guid><pubDate>Mon, 26 Jul 2021 21:30:19 GMT</pubDate></item><item><title>Foreign File Systems on macOS: Fail!</title><link>https://tkurtbond.github.io/posts/2020/02/24/foreign-file-systems-on-macos-fail/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Back sometime in March 2018 I installed &lt;a class="reference external" href="https://www.tuxera.com/"&gt;Tuxera&lt;/a&gt; &lt;a class="reference external" href="https://www.tuxera.com/products/tuxera-ntfs-for-mac/"&gt;NTFS for Mac&lt;/a&gt;.  It was
the first NTFS for Mac that I found.  I used it casually for a while
and it seemed ok.&lt;/p&gt;
&lt;p&gt;Sometime later, probably in October 2019, I decided I needed to move
110 GB of files off my Macbook Pro laptop's internal drive and onto a
external drive.  I also wanted to access this drive from Linux, and
thought I'd just use a NTFS-formatted drive so it would be readable
there.&lt;/p&gt;
&lt;p&gt;I copied the files over using rsync and there seemed to be no
problems, until I (in a fit of paranoia) ran the Unix cmp command on
all the files on the original disk and the matching files on the
NTFS-formatted drive.  There were lots of differences. Uh oh.&lt;/p&gt;
&lt;p&gt;I didn't see anything on the Internet complaining about this.&lt;/p&gt;
&lt;p&gt;So, sometime in October 2019 in I installed &lt;a class="reference external" href="https://www.paragon-drivers.com/"&gt;Paragon Software&lt;/a&gt;
&lt;a class="reference external" href="https://www.paragon-drivers.com/en/extfsmac/"&gt;extFS for Mac&lt;/a&gt;. (I see now that they have a &lt;a class="reference external" href="https://www.paragon-drivers.com/en/ntfsmac/"&gt;NTFS for Mac&lt;/a&gt;; I
haven't tried it.)&lt;/p&gt;
&lt;p&gt;I wanted to try the same thing and see if it worked more reliably with
extFS.  I originally wrote short shell scripts for this, for
consistency, so I could just change the volume name and run them
again.  Again there were lots of differences.  Uh oh.&lt;/p&gt;
&lt;p&gt;Again, I didn't see anything on the Internet complaining about this.&lt;/p&gt;
&lt;p&gt;All I was doing was running &lt;code class="docutils literal"&gt;rsync &lt;span class="pre"&gt;-avz&lt;/span&gt;&lt;/code&gt; with the appropriate
directories; it should have worked.&lt;/p&gt;
&lt;p&gt;I formatted the drive to Mac OS Extended (Journaled) and recopied the
files, and this time they all compared ok.&lt;/p&gt;
&lt;p&gt;I decided to just use &lt;a class="reference external" href="https://www.cis.upenn.edu/~bcpierce/unison/"&gt;Unison&lt;/a&gt; to sync the files to a couple of my
computers for backup and local use instead of connecting the external
drive to each computer in turn.  This is working ok for me.&lt;/p&gt;
&lt;p&gt;Maybe this was user error on my part, but it happened consistently
with both of these file systems.&lt;/p&gt;</description><category>extfs</category><category>macos</category><category>ntfs</category><category>paragon</category><category>tuxera</category><guid>https://tkurtbond.github.io/posts/2020/02/24/foreign-file-systems-on-macos-fail/</guid><pubDate>Mon, 24 Feb 2020 22:40:34 GMT</pubDate></item><item><title>macOS Catalina doesn't have a FTP client!</title><link>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;Ack!  macOS Catalina doesn't have an FTP client!  Yes, I know it is
terribly insecure, but I only use it inside our firewall to access one
legacy computer system.  I was glad &lt;a class="reference external" href="https://brew.sh/"&gt;brew&lt;/a&gt; had &lt;a class="reference external" href="https://lftp.yar.ru/"&gt;LFTP&lt;/a&gt;, and I figured out
how to use active mode in &lt;code class="docutils literal"&gt;LFTP&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_980c01df728340e4acb1d58e94e6c1c2-1" name="rest_code_980c01df728340e4acb1d58e94e6c1c2-1" href="https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/#rest_code_980c01df728340e4acb1d58e94e6c1c2-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; ftp:passive-mode off
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because that machine's FTP server only works with active mode.&lt;/p&gt;</description><category>catalina</category><category>ftp</category><category>macos</category><guid>https://tkurtbond.github.io/posts/2019/11/09/macos-catalina-doesnt-have-a-ftp-client/</guid><pubDate>Sun, 10 Nov 2019 03:00:04 GMT</pubDate></item><item><title>Getting nxml-mode in emacs to validate DocBook 5 documents</title><link>https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;I have occasion to edit and build a DocBook 5 document under both
macOS Catalina and Fedora 30.&lt;/p&gt;
&lt;p&gt;On macOS I've used homebrew to install the docbook, docbook-xsl, and
libxslt (for xsltproc), and fop formulas, and changed my PATH to
include the directory where brew installed &lt;code class="docutils literal"&gt;xsltproc&lt;/code&gt;. which will then
use &lt;code class="docutils literal"&gt;/usr/local/etc/xml/catalog&lt;/code&gt; to find files, in which brew installed
links to the docbook schemas and xsl stylesheets.&lt;/p&gt;
&lt;p&gt;On Fedora I've used &lt;code class="docutils literal"&gt;dnf&lt;/code&gt; to install the docbook5-schemas,
docbook5-style-xsl, and fop packages.&lt;/p&gt;
&lt;p&gt;The document builds fine on both OSes, but Emacs doesn't validate
properly against the DocBook RELAX NG schemas, because the &lt;code class="docutils literal"&gt;*.rnc&lt;/code&gt; files
supplied with Emacs (26.3 on macOS, 26.2 on Fedora) are for DocBook 4.
However, Emacs will look at a &lt;code class="docutils literal"&gt;schemas.xml&lt;/code&gt; file in the same directory
as the file you are editing to find the &lt;code class="docutils literal"&gt;*.rnc&lt;/code&gt; files.  Unfortunately,
of course, they have different locations on macOS with brew and on
Fedora.&lt;/p&gt;
&lt;p&gt;So I wrote a script, generate-schemas-xml, in bash using xmlcatalog to
look up the translation for the URI for the RELAX NG compiled schema
file and generate the &lt;code class="docutils literal"&gt;schemas.xml&lt;/code&gt; file and substitute the translation
into the file:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tkurtbond.github.io/listings/generate-schemas-xml.html"&gt;generate-schemas-xml&lt;/a&gt;  &lt;a class="reference external" href="https://tkurtbond.github.io/listings/generate-schemas-xml"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-1" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-1" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env bash&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-2" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-2" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-3" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-3" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;schema_location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;xmlcatalog &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="s2"&gt;"http://docbook.org/xml/5.0/rng/docbookxi.rnc"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-4" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-4" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-4"&gt;&lt;/a&gt;    grep &lt;span class="s2"&gt;"^file:///"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;'s#^file://##'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-5" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-5" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-6" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-6" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-6"&gt;&lt;/a&gt;cat &amp;gt;schemas.xml &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-7" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-7" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-7"&gt;&lt;/a&gt;&lt;span class="s"&gt;&amp;lt;locatingRules xmlns="http://thaiopensource.com/ns/locating-rules/1.0"&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-8" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-8" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-8"&gt;&lt;/a&gt;&lt;span class="s"&gt;&amp;lt;namespace ns="http://docbook.org/ns/docbook" uri="$schema_location"/&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-9" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-9" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-9"&gt;&lt;/a&gt;&lt;span class="s"&gt;&amp;lt;/locatingRules&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_bd927bc3f77145cc8ab434c44ecd433b-10" name="rest_code_bd927bc3f77145cc8ab434c44ecd433b-10" href="https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/#rest_code_bd927bc3f77145cc8ab434c44ecd433b-10"&gt;&lt;/a&gt;&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I had my Makefile generate the &lt;code class="docutils literal"&gt;schemas.xml&lt;/code&gt; file if it was missing.&lt;/p&gt;
&lt;p&gt;It was more complicated that I'd have liked, but it does work.&lt;/p&gt;</description><category>docbook 5</category><category>emacs</category><category>fedora</category><category>macos</category><guid>https://tkurtbond.github.io/posts/2019/11/05/getting-nxml-mode-in-emacs-to-validate-docbook-5-documents/</guid><pubDate>Wed, 06 Nov 2019 01:32:24 GMT</pubDate></item></channel></rss>