<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lacking Natural Simplicity (Posts about ccl)</title><link>https://tkurtbond.github.io/</link><description></description><atom:link href="https://tkurtbond.github.io/categories/ccl.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:tkurtbond@gmail.com"&gt;T. Kurt Bond&lt;/a&gt; </copyright><lastBuildDate>Sat, 04 Feb 2023 00:36:22 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Binding a symbol defined with DEFCONSTANT with LET is not portable in Common Lisp</title><link>https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/</link><dc:creator>T. Kurt Bond</dc:creator><description>&lt;p&gt;&lt;a class="reference external" href="http://www.sbcl.org/"&gt;SBCL&lt;/a&gt; and &lt;a class="reference external" href="https://ccl.clozure.com/"&gt;CCL&lt;/a&gt; and &lt;a class="reference external" href="https://clisp.sourceforge.io/"&gt;CLISP&lt;/a&gt; think binding a symbol defined with &lt;code class="docutils literal"&gt;defconstant&lt;/code&gt;
is an error, so if you do&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_99ee419acb4e435b8b3a2abf618a8f96-1" name="rest_code_99ee419acb4e435b8b3a2abf618a8f96-1" href="https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/#rest_code_99ee419acb4e435b8b3a2abf618a8f96-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defconstant&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_99ee419acb4e435b8b3a2abf618a8f96-2" name="rest_code_99ee419acb4e435b8b3a2abf618a8f96-2" href="https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/#rest_code_99ee419acb4e435b8b3a2abf618a8f96-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;you get an error.  But in &lt;a class="reference external" href="https://abcl.org/"&gt;ABCL&lt;/a&gt; and &lt;a class="reference external" href="https://common-lisp.net/project/ecl/"&gt;ECL&lt;/a&gt; you don’t.&lt;/p&gt;
&lt;p&gt;If you try&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code common-lisp"&gt;&lt;a id="rest_code_6bb2832e253044e5bfe462b9292c7bde-1" name="rest_code_6bb2832e253044e5bfe462b9292c7bde-1" href="https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/#rest_code_6bb2832e253044e5bfe462b9292c7bde-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in SBCL and CCL you get an error when the function is compiled.
In SBCL the function is defined, but always gives an error when run.
In CCL the function does not get defined.&lt;/p&gt;</description><category>abcl</category><category>ccl</category><category>clisp</category><category>common lisp</category><category>ecl</category><category>sbcl</category><guid>https://tkurtbond.github.io/posts/2020/04/24/binding-a-symbol-defined-with-defconstant-with-let-is-not-portable-in-common-lisp/</guid><pubDate>Sat, 25 Apr 2020 03:46:39 GMT</pubDate></item></channel></rss>